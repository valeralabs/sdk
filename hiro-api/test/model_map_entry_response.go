/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MapEntryResponse Response of get data map entry request
type MapEntryResponse struct {
	// Hex-encoded string of clarity value. It is always an optional tuple.
	Data string `json:"data"`
	// Hex-encoded string of the MARF proof for the data
	Proof *string `json:"proof,omitempty"`
}

// NewMapEntryResponse instantiates a new MapEntryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMapEntryResponse(data string) *MapEntryResponse {
	this := MapEntryResponse{}
	this.Data = data
	return &this
}

// NewMapEntryResponseWithDefaults instantiates a new MapEntryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMapEntryResponseWithDefaults() *MapEntryResponse {
	this := MapEntryResponse{}
	return &this
}

// GetData returns the Data field value
func (o *MapEntryResponse) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MapEntryResponse) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *MapEntryResponse) SetData(v string) {
	o.Data = v
}

// GetProof returns the Proof field value if set, zero value otherwise.
func (o *MapEntryResponse) GetProof() string {
	if o == nil || o.Proof == nil {
		var ret string
		return ret
	}
	return *o.Proof
}

// GetProofOk returns a tuple with the Proof field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MapEntryResponse) GetProofOk() (*string, bool) {
	if o == nil || o.Proof == nil {
		return nil, false
	}
	return o.Proof, true
}

// HasProof returns a boolean if a field has been set.
func (o *MapEntryResponse) HasProof() bool {
	if o != nil && o.Proof != nil {
		return true
	}

	return false
}

// SetProof gets a reference to the given string and assigns it to the Proof field.
func (o *MapEntryResponse) SetProof(v string) {
	o.Proof = &v
}

func (o MapEntryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if o.Proof != nil {
		toSerialize["proof"] = o.Proof
	}
	return json.Marshal(toSerialize)
}

type NullableMapEntryResponse struct {
	value *MapEntryResponse
	isSet bool
}

func (v NullableMapEntryResponse) Get() *MapEntryResponse {
	return v.value
}

func (v *NullableMapEntryResponse) Set(val *MapEntryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMapEntryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMapEntryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMapEntryResponse(val *MapEntryResponse) *NullableMapEntryResponse {
	return &NullableMapEntryResponse{value: val, isSet: true}
}

func (v NullableMapEntryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMapEntryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


