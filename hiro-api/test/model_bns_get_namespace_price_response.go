/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BnsGetNamespacePriceResponse Fetch price for namespace.
type BnsGetNamespacePriceResponse struct {
	Units string `json:"units"`
	Amount string `json:"amount"`
}

// NewBnsGetNamespacePriceResponse instantiates a new BnsGetNamespacePriceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsGetNamespacePriceResponse(units string, amount string) *BnsGetNamespacePriceResponse {
	this := BnsGetNamespacePriceResponse{}
	this.Units = units
	this.Amount = amount
	return &this
}

// NewBnsGetNamespacePriceResponseWithDefaults instantiates a new BnsGetNamespacePriceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsGetNamespacePriceResponseWithDefaults() *BnsGetNamespacePriceResponse {
	this := BnsGetNamespacePriceResponse{}
	return &this
}

// GetUnits returns the Units field value
func (o *BnsGetNamespacePriceResponse) GetUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value
// and a boolean to check if the value has been set.
func (o *BnsGetNamespacePriceResponse) GetUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Units, true
}

// SetUnits sets field value
func (o *BnsGetNamespacePriceResponse) SetUnits(v string) {
	o.Units = v
}

// GetAmount returns the Amount field value
func (o *BnsGetNamespacePriceResponse) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *BnsGetNamespacePriceResponse) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *BnsGetNamespacePriceResponse) SetAmount(v string) {
	o.Amount = v
}

func (o BnsGetNamespacePriceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["units"] = o.Units
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableBnsGetNamespacePriceResponse struct {
	value *BnsGetNamespacePriceResponse
	isSet bool
}

func (v NullableBnsGetNamespacePriceResponse) Get() *BnsGetNamespacePriceResponse {
	return v.value
}

func (v *NullableBnsGetNamespacePriceResponse) Set(val *BnsGetNamespacePriceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsGetNamespacePriceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsGetNamespacePriceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsGetNamespacePriceResponse(val *BnsGetNamespacePriceResponse) *NullableBnsGetNamespacePriceResponse {
	return &NullableBnsGetNamespacePriceResponse{value: val, isSet: true}
}

func (v NullableBnsGetNamespacePriceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsGetNamespacePriceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


