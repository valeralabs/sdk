/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RosettaCoinChangeCoinIdentifier CoinIdentifier uniquely identifies a Coin.
type RosettaCoinChangeCoinIdentifier struct {
	// Identifier should be populated with a globally unique identifier of a Coin. In Bitcoin, this identifier would be transaction_hash:index.
	Identifier string `json:"identifier"`
}

// NewRosettaCoinChangeCoinIdentifier instantiates a new RosettaCoinChangeCoinIdentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRosettaCoinChangeCoinIdentifier(identifier string) *RosettaCoinChangeCoinIdentifier {
	this := RosettaCoinChangeCoinIdentifier{}
	this.Identifier = identifier
	return &this
}

// NewRosettaCoinChangeCoinIdentifierWithDefaults instantiates a new RosettaCoinChangeCoinIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRosettaCoinChangeCoinIdentifierWithDefaults() *RosettaCoinChangeCoinIdentifier {
	this := RosettaCoinChangeCoinIdentifier{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *RosettaCoinChangeCoinIdentifier) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *RosettaCoinChangeCoinIdentifier) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *RosettaCoinChangeCoinIdentifier) SetIdentifier(v string) {
	o.Identifier = v
}

func (o RosettaCoinChangeCoinIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["identifier"] = o.Identifier
	}
	return json.Marshal(toSerialize)
}

type NullableRosettaCoinChangeCoinIdentifier struct {
	value *RosettaCoinChangeCoinIdentifier
	isSet bool
}

func (v NullableRosettaCoinChangeCoinIdentifier) Get() *RosettaCoinChangeCoinIdentifier {
	return v.value
}

func (v *NullableRosettaCoinChangeCoinIdentifier) Set(val *RosettaCoinChangeCoinIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableRosettaCoinChangeCoinIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableRosettaCoinChangeCoinIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRosettaCoinChangeCoinIdentifier(val *RosettaCoinChangeCoinIdentifier) *NullableRosettaCoinChangeCoinIdentifier {
	return &NullableRosettaCoinChangeCoinIdentifier{value: val, isSet: true}
}

func (v NullableRosettaCoinChangeCoinIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRosettaCoinChangeCoinIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


