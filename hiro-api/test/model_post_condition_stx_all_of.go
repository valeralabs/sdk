/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostConditionStxAllOf struct for PostConditionStxAllOf
type PostConditionStxAllOf struct {
	Principal PostConditionPrincipal `json:"principal"`
}

// NewPostConditionStxAllOf instantiates a new PostConditionStxAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConditionStxAllOf(principal PostConditionPrincipal) *PostConditionStxAllOf {
	this := PostConditionStxAllOf{}
	this.Principal = principal
	return &this
}

// NewPostConditionStxAllOfWithDefaults instantiates a new PostConditionStxAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConditionStxAllOfWithDefaults() *PostConditionStxAllOf {
	this := PostConditionStxAllOf{}
	return &this
}

// GetPrincipal returns the Principal field value
func (o *PostConditionStxAllOf) GetPrincipal() PostConditionPrincipal {
	if o == nil {
		var ret PostConditionPrincipal
		return ret
	}

	return o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value
// and a boolean to check if the value has been set.
func (o *PostConditionStxAllOf) GetPrincipalOk() (*PostConditionPrincipal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Principal, true
}

// SetPrincipal sets field value
func (o *PostConditionStxAllOf) SetPrincipal(v PostConditionPrincipal) {
	o.Principal = v
}

func (o PostConditionStxAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["principal"] = o.Principal
	}
	return json.Marshal(toSerialize)
}

type NullablePostConditionStxAllOf struct {
	value *PostConditionStxAllOf
	isSet bool
}

func (v NullablePostConditionStxAllOf) Get() *PostConditionStxAllOf {
	return v.value
}

func (v *NullablePostConditionStxAllOf) Set(val *PostConditionStxAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConditionStxAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConditionStxAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConditionStxAllOf(val *PostConditionStxAllOf) *NullablePostConditionStxAllOf {
	return &NullablePostConditionStxAllOf{value: val, isSet: true}
}

func (v NullablePostConditionStxAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConditionStxAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


