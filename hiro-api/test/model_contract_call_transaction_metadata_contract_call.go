/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContractCallTransactionMetadataContractCall struct for ContractCallTransactionMetadataContractCall
type ContractCallTransactionMetadataContractCall struct {
	// Contract identifier formatted as `<principaladdress>.<contract_name>`
	ContractId string `json:"contract_id"`
	// Name of the Clarity function to be invoked
	FunctionName string `json:"function_name"`
	// Function definition, including function name and type as well as parameter names and types
	FunctionSignature string `json:"function_signature"`
	// List of arguments used to invoke the function
	FunctionArgs []ContractCallTransactionMetadataContractCallFunctionArgsInner `json:"function_args,omitempty"`
}

// NewContractCallTransactionMetadataContractCall instantiates a new ContractCallTransactionMetadataContractCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractCallTransactionMetadataContractCall(contractId string, functionName string, functionSignature string) *ContractCallTransactionMetadataContractCall {
	this := ContractCallTransactionMetadataContractCall{}
	this.ContractId = contractId
	this.FunctionName = functionName
	this.FunctionSignature = functionSignature
	return &this
}

// NewContractCallTransactionMetadataContractCallWithDefaults instantiates a new ContractCallTransactionMetadataContractCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractCallTransactionMetadataContractCallWithDefaults() *ContractCallTransactionMetadataContractCall {
	this := ContractCallTransactionMetadataContractCall{}
	return &this
}

// GetContractId returns the ContractId field value
func (o *ContractCallTransactionMetadataContractCall) GetContractId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value
// and a boolean to check if the value has been set.
func (o *ContractCallTransactionMetadataContractCall) GetContractIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractId, true
}

// SetContractId sets field value
func (o *ContractCallTransactionMetadataContractCall) SetContractId(v string) {
	o.ContractId = v
}

// GetFunctionName returns the FunctionName field value
func (o *ContractCallTransactionMetadataContractCall) GetFunctionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FunctionName
}

// GetFunctionNameOk returns a tuple with the FunctionName field value
// and a boolean to check if the value has been set.
func (o *ContractCallTransactionMetadataContractCall) GetFunctionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FunctionName, true
}

// SetFunctionName sets field value
func (o *ContractCallTransactionMetadataContractCall) SetFunctionName(v string) {
	o.FunctionName = v
}

// GetFunctionSignature returns the FunctionSignature field value
func (o *ContractCallTransactionMetadataContractCall) GetFunctionSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FunctionSignature
}

// GetFunctionSignatureOk returns a tuple with the FunctionSignature field value
// and a boolean to check if the value has been set.
func (o *ContractCallTransactionMetadataContractCall) GetFunctionSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FunctionSignature, true
}

// SetFunctionSignature sets field value
func (o *ContractCallTransactionMetadataContractCall) SetFunctionSignature(v string) {
	o.FunctionSignature = v
}

// GetFunctionArgs returns the FunctionArgs field value if set, zero value otherwise.
func (o *ContractCallTransactionMetadataContractCall) GetFunctionArgs() []ContractCallTransactionMetadataContractCallFunctionArgsInner {
	if o == nil || o.FunctionArgs == nil {
		var ret []ContractCallTransactionMetadataContractCallFunctionArgsInner
		return ret
	}
	return o.FunctionArgs
}

// GetFunctionArgsOk returns a tuple with the FunctionArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractCallTransactionMetadataContractCall) GetFunctionArgsOk() ([]ContractCallTransactionMetadataContractCallFunctionArgsInner, bool) {
	if o == nil || o.FunctionArgs == nil {
		return nil, false
	}
	return o.FunctionArgs, true
}

// HasFunctionArgs returns a boolean if a field has been set.
func (o *ContractCallTransactionMetadataContractCall) HasFunctionArgs() bool {
	if o != nil && o.FunctionArgs != nil {
		return true
	}

	return false
}

// SetFunctionArgs gets a reference to the given []ContractCallTransactionMetadataContractCallFunctionArgsInner and assigns it to the FunctionArgs field.
func (o *ContractCallTransactionMetadataContractCall) SetFunctionArgs(v []ContractCallTransactionMetadataContractCallFunctionArgsInner) {
	o.FunctionArgs = v
}

func (o ContractCallTransactionMetadataContractCall) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contract_id"] = o.ContractId
	}
	if true {
		toSerialize["function_name"] = o.FunctionName
	}
	if true {
		toSerialize["function_signature"] = o.FunctionSignature
	}
	if o.FunctionArgs != nil {
		toSerialize["function_args"] = o.FunctionArgs
	}
	return json.Marshal(toSerialize)
}

type NullableContractCallTransactionMetadataContractCall struct {
	value *ContractCallTransactionMetadataContractCall
	isSet bool
}

func (v NullableContractCallTransactionMetadataContractCall) Get() *ContractCallTransactionMetadataContractCall {
	return v.value
}

func (v *NullableContractCallTransactionMetadataContractCall) Set(val *ContractCallTransactionMetadataContractCall) {
	v.value = val
	v.isSet = true
}

func (v NullableContractCallTransactionMetadataContractCall) IsSet() bool {
	return v.isSet
}

func (v *NullableContractCallTransactionMetadataContractCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractCallTransactionMetadataContractCall(val *ContractCallTransactionMetadataContractCall) *NullableContractCallTransactionMetadataContractCall {
	return &NullableContractCallTransactionMetadataContractCall{value: val, isSet: true}
}

func (v NullableContractCallTransactionMetadataContractCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractCallTransactionMetadataContractCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


