/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RosettaConstructionHashResponse TransactionIdentifier contains the transaction_identifier of a transaction that was submitted to either /construction/hash or /construction/submit.
type RosettaConstructionHashResponse struct {
	TransactionIdentifier Object `json:"transaction_identifier"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewRosettaConstructionHashResponse instantiates a new RosettaConstructionHashResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRosettaConstructionHashResponse(transactionIdentifier Object) *RosettaConstructionHashResponse {
	this := RosettaConstructionHashResponse{}
	this.TransactionIdentifier = transactionIdentifier
	return &this
}

// NewRosettaConstructionHashResponseWithDefaults instantiates a new RosettaConstructionHashResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRosettaConstructionHashResponseWithDefaults() *RosettaConstructionHashResponse {
	this := RosettaConstructionHashResponse{}
	return &this
}

// GetTransactionIdentifier returns the TransactionIdentifier field value
func (o *RosettaConstructionHashResponse) GetTransactionIdentifier() Object {
	if o == nil {
		var ret Object
		return ret
	}

	return o.TransactionIdentifier
}

// GetTransactionIdentifierOk returns a tuple with the TransactionIdentifier field value
// and a boolean to check if the value has been set.
func (o *RosettaConstructionHashResponse) GetTransactionIdentifierOk() (*Object, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionIdentifier, true
}

// SetTransactionIdentifier sets field value
func (o *RosettaConstructionHashResponse) SetTransactionIdentifier(v Object) {
	o.TransactionIdentifier = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RosettaConstructionHashResponse) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RosettaConstructionHashResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RosettaConstructionHashResponse) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *RosettaConstructionHashResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o RosettaConstructionHashResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transaction_identifier"] = o.TransactionIdentifier
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableRosettaConstructionHashResponse struct {
	value *RosettaConstructionHashResponse
	isSet bool
}

func (v NullableRosettaConstructionHashResponse) Get() *RosettaConstructionHashResponse {
	return v.value
}

func (v *NullableRosettaConstructionHashResponse) Set(val *RosettaConstructionHashResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRosettaConstructionHashResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRosettaConstructionHashResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRosettaConstructionHashResponse(val *RosettaConstructionHashResponse) *NullableRosettaConstructionHashResponse {
	return &NullableRosettaConstructionHashResponse{value: val, isSet: true}
}

func (v NullableRosettaConstructionHashResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRosettaConstructionHashResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


