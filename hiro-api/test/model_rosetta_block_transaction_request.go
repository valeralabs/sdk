/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RosettaBlockTransactionRequest A BlockTransactionRequest is used to fetch a Transaction included in a block that is not returned in a BlockResponse.
type RosettaBlockTransactionRequest struct {
	NetworkIdentifier Object `json:"network_identifier"`
	BlockIdentifier Object `json:"block_identifier"`
	TransactionIdentifier TransactionIdentifier `json:"transaction_identifier"`
}

// NewRosettaBlockTransactionRequest instantiates a new RosettaBlockTransactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRosettaBlockTransactionRequest(networkIdentifier Object, blockIdentifier Object, transactionIdentifier TransactionIdentifier) *RosettaBlockTransactionRequest {
	this := RosettaBlockTransactionRequest{}
	this.NetworkIdentifier = networkIdentifier
	this.BlockIdentifier = blockIdentifier
	this.TransactionIdentifier = transactionIdentifier
	return &this
}

// NewRosettaBlockTransactionRequestWithDefaults instantiates a new RosettaBlockTransactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRosettaBlockTransactionRequestWithDefaults() *RosettaBlockTransactionRequest {
	this := RosettaBlockTransactionRequest{}
	return &this
}

// GetNetworkIdentifier returns the NetworkIdentifier field value
func (o *RosettaBlockTransactionRequest) GetNetworkIdentifier() Object {
	if o == nil {
		var ret Object
		return ret
	}

	return o.NetworkIdentifier
}

// GetNetworkIdentifierOk returns a tuple with the NetworkIdentifier field value
// and a boolean to check if the value has been set.
func (o *RosettaBlockTransactionRequest) GetNetworkIdentifierOk() (*Object, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkIdentifier, true
}

// SetNetworkIdentifier sets field value
func (o *RosettaBlockTransactionRequest) SetNetworkIdentifier(v Object) {
	o.NetworkIdentifier = v
}

// GetBlockIdentifier returns the BlockIdentifier field value
func (o *RosettaBlockTransactionRequest) GetBlockIdentifier() Object {
	if o == nil {
		var ret Object
		return ret
	}

	return o.BlockIdentifier
}

// GetBlockIdentifierOk returns a tuple with the BlockIdentifier field value
// and a boolean to check if the value has been set.
func (o *RosettaBlockTransactionRequest) GetBlockIdentifierOk() (*Object, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockIdentifier, true
}

// SetBlockIdentifier sets field value
func (o *RosettaBlockTransactionRequest) SetBlockIdentifier(v Object) {
	o.BlockIdentifier = v
}

// GetTransactionIdentifier returns the TransactionIdentifier field value
func (o *RosettaBlockTransactionRequest) GetTransactionIdentifier() TransactionIdentifier {
	if o == nil {
		var ret TransactionIdentifier
		return ret
	}

	return o.TransactionIdentifier
}

// GetTransactionIdentifierOk returns a tuple with the TransactionIdentifier field value
// and a boolean to check if the value has been set.
func (o *RosettaBlockTransactionRequest) GetTransactionIdentifierOk() (*TransactionIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionIdentifier, true
}

// SetTransactionIdentifier sets field value
func (o *RosettaBlockTransactionRequest) SetTransactionIdentifier(v TransactionIdentifier) {
	o.TransactionIdentifier = v
}

func (o RosettaBlockTransactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["network_identifier"] = o.NetworkIdentifier
	}
	if true {
		toSerialize["block_identifier"] = o.BlockIdentifier
	}
	if true {
		toSerialize["transaction_identifier"] = o.TransactionIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableRosettaBlockTransactionRequest struct {
	value *RosettaBlockTransactionRequest
	isSet bool
}

func (v NullableRosettaBlockTransactionRequest) Get() *RosettaBlockTransactionRequest {
	return v.value
}

func (v *NullableRosettaBlockTransactionRequest) Set(val *RosettaBlockTransactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRosettaBlockTransactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRosettaBlockTransactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRosettaBlockTransactionRequest(val *RosettaBlockTransactionRequest) *NullableRosettaBlockTransactionRequest {
	return &NullableRosettaBlockTransactionRequest{value: val, isSet: true}
}

func (v NullableRosettaBlockTransactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRosettaBlockTransactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


