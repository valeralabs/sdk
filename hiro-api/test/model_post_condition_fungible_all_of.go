/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostConditionFungibleAllOf struct for PostConditionFungibleAllOf
type PostConditionFungibleAllOf struct {
	Principal Object `json:"principal"`
}

// NewPostConditionFungibleAllOf instantiates a new PostConditionFungibleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConditionFungibleAllOf(principal Object) *PostConditionFungibleAllOf {
	this := PostConditionFungibleAllOf{}
	this.Principal = principal
	return &this
}

// NewPostConditionFungibleAllOfWithDefaults instantiates a new PostConditionFungibleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConditionFungibleAllOfWithDefaults() *PostConditionFungibleAllOf {
	this := PostConditionFungibleAllOf{}
	return &this
}

// GetPrincipal returns the Principal field value
func (o *PostConditionFungibleAllOf) GetPrincipal() Object {
	if o == nil {
		var ret Object
		return ret
	}

	return o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOf) GetPrincipalOk() (*Object, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Principal, true
}

// SetPrincipal sets field value
func (o *PostConditionFungibleAllOf) SetPrincipal(v Object) {
	o.Principal = v
}

func (o PostConditionFungibleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["principal"] = o.Principal
	}
	return json.Marshal(toSerialize)
}

type NullablePostConditionFungibleAllOf struct {
	value *PostConditionFungibleAllOf
	isSet bool
}

func (v NullablePostConditionFungibleAllOf) Get() *PostConditionFungibleAllOf {
	return v.value
}

func (v *NullablePostConditionFungibleAllOf) Set(val *PostConditionFungibleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConditionFungibleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConditionFungibleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConditionFungibleAllOf(val *PostConditionFungibleAllOf) *NullablePostConditionFungibleAllOf {
	return &NullablePostConditionFungibleAllOf{value: val, isSet: true}
}

func (v NullablePostConditionFungibleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConditionFungibleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


