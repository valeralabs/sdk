/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AbstractMempoolTransaction Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types
type AbstractMempoolTransaction struct {
	// Status of the transaction
	TxStatus string `json:"tx_status"`
	// A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node.
	ReceiptTime float32 `json:"receipt_time"`
	// An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node.
	ReceiptTimeIso string `json:"receipt_time_iso"`
}

// NewAbstractMempoolTransaction instantiates a new AbstractMempoolTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbstractMempoolTransaction(txStatus string, receiptTime float32, receiptTimeIso string) *AbstractMempoolTransaction {
	this := AbstractMempoolTransaction{}
	this.TxStatus = txStatus
	this.ReceiptTime = receiptTime
	this.ReceiptTimeIso = receiptTimeIso
	return &this
}

// NewAbstractMempoolTransactionWithDefaults instantiates a new AbstractMempoolTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbstractMempoolTransactionWithDefaults() *AbstractMempoolTransaction {
	this := AbstractMempoolTransaction{}
	return &this
}

// GetTxStatus returns the TxStatus field value
func (o *AbstractMempoolTransaction) GetTxStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxStatus
}

// GetTxStatusOk returns a tuple with the TxStatus field value
// and a boolean to check if the value has been set.
func (o *AbstractMempoolTransaction) GetTxStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxStatus, true
}

// SetTxStatus sets field value
func (o *AbstractMempoolTransaction) SetTxStatus(v string) {
	o.TxStatus = v
}

// GetReceiptTime returns the ReceiptTime field value
func (o *AbstractMempoolTransaction) GetReceiptTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReceiptTime
}

// GetReceiptTimeOk returns a tuple with the ReceiptTime field value
// and a boolean to check if the value has been set.
func (o *AbstractMempoolTransaction) GetReceiptTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiptTime, true
}

// SetReceiptTime sets field value
func (o *AbstractMempoolTransaction) SetReceiptTime(v float32) {
	o.ReceiptTime = v
}

// GetReceiptTimeIso returns the ReceiptTimeIso field value
func (o *AbstractMempoolTransaction) GetReceiptTimeIso() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiptTimeIso
}

// GetReceiptTimeIsoOk returns a tuple with the ReceiptTimeIso field value
// and a boolean to check if the value has been set.
func (o *AbstractMempoolTransaction) GetReceiptTimeIsoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiptTimeIso, true
}

// SetReceiptTimeIso sets field value
func (o *AbstractMempoolTransaction) SetReceiptTimeIso(v string) {
	o.ReceiptTimeIso = v
}

func (o AbstractMempoolTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tx_status"] = o.TxStatus
	}
	if true {
		toSerialize["receipt_time"] = o.ReceiptTime
	}
	if true {
		toSerialize["receipt_time_iso"] = o.ReceiptTimeIso
	}
	return json.Marshal(toSerialize)
}

type NullableAbstractMempoolTransaction struct {
	value *AbstractMempoolTransaction
	isSet bool
}

func (v NullableAbstractMempoolTransaction) Get() *AbstractMempoolTransaction {
	return v.value
}

func (v *NullableAbstractMempoolTransaction) Set(val *AbstractMempoolTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableAbstractMempoolTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableAbstractMempoolTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbstractMempoolTransaction(val *AbstractMempoolTransaction) *NullableAbstractMempoolTransaction {
	return &NullableAbstractMempoolTransaction{value: val, isSet: true}
}

func (v NullableAbstractMempoolTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbstractMempoolTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


