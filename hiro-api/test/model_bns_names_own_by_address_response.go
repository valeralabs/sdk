/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BnsNamesOwnByAddressResponse Retrieves a list of names owned by the address provided.
type BnsNamesOwnByAddressResponse struct {
	Names []string `json:"names"`
}

// NewBnsNamesOwnByAddressResponse instantiates a new BnsNamesOwnByAddressResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBnsNamesOwnByAddressResponse(names []string) *BnsNamesOwnByAddressResponse {
	this := BnsNamesOwnByAddressResponse{}
	this.Names = names
	return &this
}

// NewBnsNamesOwnByAddressResponseWithDefaults instantiates a new BnsNamesOwnByAddressResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBnsNamesOwnByAddressResponseWithDefaults() *BnsNamesOwnByAddressResponse {
	this := BnsNamesOwnByAddressResponse{}
	return &this
}

// GetNames returns the Names field value
func (o *BnsNamesOwnByAddressResponse) GetNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Names
}

// GetNamesOk returns a tuple with the Names field value
// and a boolean to check if the value has been set.
func (o *BnsNamesOwnByAddressResponse) GetNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Names, true
}

// SetNames sets field value
func (o *BnsNamesOwnByAddressResponse) SetNames(v []string) {
	o.Names = v
}

func (o BnsNamesOwnByAddressResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["names"] = o.Names
	}
	return json.Marshal(toSerialize)
}

type NullableBnsNamesOwnByAddressResponse struct {
	value *BnsNamesOwnByAddressResponse
	isSet bool
}

func (v NullableBnsNamesOwnByAddressResponse) Get() *BnsNamesOwnByAddressResponse {
	return v.value
}

func (v *NullableBnsNamesOwnByAddressResponse) Set(val *BnsNamesOwnByAddressResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBnsNamesOwnByAddressResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBnsNamesOwnByAddressResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBnsNamesOwnByAddressResponse(val *BnsNamesOwnByAddressResponse) *NullableBnsNamesOwnByAddressResponse {
	return &NullableBnsNamesOwnByAddressResponse{value: val, isSet: true}
}

func (v NullableBnsNamesOwnByAddressResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBnsNamesOwnByAddressResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


