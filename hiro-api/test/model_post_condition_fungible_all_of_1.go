/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostConditionFungibleAllOf1 struct for PostConditionFungibleAllOf1
type PostConditionFungibleAllOf1 struct {
	ConditionCode Object `json:"condition_code"`
	Type string `json:"type"`
	Amount string `json:"amount"`
	Asset PostConditionFungibleAllOf1Asset `json:"asset"`
}

// NewPostConditionFungibleAllOf1 instantiates a new PostConditionFungibleAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConditionFungibleAllOf1(conditionCode Object, type_ string, amount string, asset PostConditionFungibleAllOf1Asset) *PostConditionFungibleAllOf1 {
	this := PostConditionFungibleAllOf1{}
	this.ConditionCode = conditionCode
	this.Type = type_
	this.Amount = amount
	this.Asset = asset
	return &this
}

// NewPostConditionFungibleAllOf1WithDefaults instantiates a new PostConditionFungibleAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConditionFungibleAllOf1WithDefaults() *PostConditionFungibleAllOf1 {
	this := PostConditionFungibleAllOf1{}
	return &this
}

// GetConditionCode returns the ConditionCode field value
func (o *PostConditionFungibleAllOf1) GetConditionCode() Object {
	if o == nil {
		var ret Object
		return ret
	}

	return o.ConditionCode
}

// GetConditionCodeOk returns a tuple with the ConditionCode field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOf1) GetConditionCodeOk() (*Object, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConditionCode, true
}

// SetConditionCode sets field value
func (o *PostConditionFungibleAllOf1) SetConditionCode(v Object) {
	o.ConditionCode = v
}

// GetType returns the Type field value
func (o *PostConditionFungibleAllOf1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOf1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PostConditionFungibleAllOf1) SetType(v string) {
	o.Type = v
}

// GetAmount returns the Amount field value
func (o *PostConditionFungibleAllOf1) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOf1) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PostConditionFungibleAllOf1) SetAmount(v string) {
	o.Amount = v
}

// GetAsset returns the Asset field value
func (o *PostConditionFungibleAllOf1) GetAsset() PostConditionFungibleAllOf1Asset {
	if o == nil {
		var ret PostConditionFungibleAllOf1Asset
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOf1) GetAssetOk() (*PostConditionFungibleAllOf1Asset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *PostConditionFungibleAllOf1) SetAsset(v PostConditionFungibleAllOf1Asset) {
	o.Asset = v
}

func (o PostConditionFungibleAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["condition_code"] = o.ConditionCode
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["asset"] = o.Asset
	}
	return json.Marshal(toSerialize)
}

type NullablePostConditionFungibleAllOf1 struct {
	value *PostConditionFungibleAllOf1
	isSet bool
}

func (v NullablePostConditionFungibleAllOf1) Get() *PostConditionFungibleAllOf1 {
	return v.value
}

func (v *NullablePostConditionFungibleAllOf1) Set(val *PostConditionFungibleAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConditionFungibleAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConditionFungibleAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConditionFungibleAllOf1(val *PostConditionFungibleAllOf1) *NullablePostConditionFungibleAllOf1 {
	return &NullablePostConditionFungibleAllOf1{value: val, isSet: true}
}

func (v NullablePostConditionFungibleAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConditionFungibleAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


