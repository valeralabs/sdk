/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchErrorResultResult struct for SearchErrorResultResult
type SearchErrorResultResult struct {
	// Shows the currenty category of entity it is searched in.
	EntityType string `json:"entity_type"`
}

// NewSearchErrorResultResult instantiates a new SearchErrorResultResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchErrorResultResult(entityType string) *SearchErrorResultResult {
	this := SearchErrorResultResult{}
	this.EntityType = entityType
	return &this
}

// NewSearchErrorResultResultWithDefaults instantiates a new SearchErrorResultResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchErrorResultResultWithDefaults() *SearchErrorResultResult {
	this := SearchErrorResultResult{}
	return &this
}

// GetEntityType returns the EntityType field value
func (o *SearchErrorResultResult) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *SearchErrorResultResult) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *SearchErrorResultResult) SetEntityType(v string) {
	o.EntityType = v
}

func (o SearchErrorResultResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entity_type"] = o.EntityType
	}
	return json.Marshal(toSerialize)
}

type NullableSearchErrorResultResult struct {
	value *SearchErrorResultResult
	isSet bool
}

func (v NullableSearchErrorResultResult) Get() *SearchErrorResultResult {
	return v.value
}

func (v *NullableSearchErrorResultResult) Set(val *SearchErrorResultResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchErrorResultResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchErrorResultResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchErrorResultResult(val *SearchErrorResultResult) *NullableSearchErrorResultResult {
	return &NullableSearchErrorResultResult{value: val, isSet: true}
}

func (v NullableSearchErrorResultResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchErrorResultResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


