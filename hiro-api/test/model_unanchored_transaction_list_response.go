/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UnanchoredTransactionListResponse GET request that returns unanchored transactions
type UnanchoredTransactionListResponse struct {
	// The number of unanchored transactions available
	Total int32 `json:"total"`
	Results []Object `json:"results"`
}

// NewUnanchoredTransactionListResponse instantiates a new UnanchoredTransactionListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnanchoredTransactionListResponse(total int32, results []Object) *UnanchoredTransactionListResponse {
	this := UnanchoredTransactionListResponse{}
	this.Total = total
	this.Results = results
	return &this
}

// NewUnanchoredTransactionListResponseWithDefaults instantiates a new UnanchoredTransactionListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnanchoredTransactionListResponseWithDefaults() *UnanchoredTransactionListResponse {
	this := UnanchoredTransactionListResponse{}
	return &this
}

// GetTotal returns the Total field value
func (o *UnanchoredTransactionListResponse) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *UnanchoredTransactionListResponse) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *UnanchoredTransactionListResponse) SetTotal(v int32) {
	o.Total = v
}

// GetResults returns the Results field value
func (o *UnanchoredTransactionListResponse) GetResults() []Object {
	if o == nil {
		var ret []Object
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *UnanchoredTransactionListResponse) GetResultsOk() ([]Object, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *UnanchoredTransactionListResponse) SetResults(v []Object) {
	o.Results = v
}

func (o UnanchoredTransactionListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableUnanchoredTransactionListResponse struct {
	value *UnanchoredTransactionListResponse
	isSet bool
}

func (v NullableUnanchoredTransactionListResponse) Get() *UnanchoredTransactionListResponse {
	return v.value
}

func (v *NullableUnanchoredTransactionListResponse) Set(val *UnanchoredTransactionListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnanchoredTransactionListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnanchoredTransactionListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnanchoredTransactionListResponse(val *UnanchoredTransactionListResponse) *NullableUnanchoredTransactionListResponse {
	return &NullableUnanchoredTransactionListResponse{value: val, isSet: true}
}

func (v NullableUnanchoredTransactionListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnanchoredTransactionListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


