/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PoisonMicroblockTransactionMetadataPoisonMicroblock struct for PoisonMicroblockTransactionMetadataPoisonMicroblock
type PoisonMicroblockTransactionMetadataPoisonMicroblock struct {
	// Hex encoded microblock header
	MicroblockHeader1 string `json:"microblock_header_1"`
	// Hex encoded microblock header
	MicroblockHeader2 string `json:"microblock_header_2"`
}

// NewPoisonMicroblockTransactionMetadataPoisonMicroblock instantiates a new PoisonMicroblockTransactionMetadataPoisonMicroblock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoisonMicroblockTransactionMetadataPoisonMicroblock(microblockHeader1 string, microblockHeader2 string) *PoisonMicroblockTransactionMetadataPoisonMicroblock {
	this := PoisonMicroblockTransactionMetadataPoisonMicroblock{}
	this.MicroblockHeader1 = microblockHeader1
	this.MicroblockHeader2 = microblockHeader2
	return &this
}

// NewPoisonMicroblockTransactionMetadataPoisonMicroblockWithDefaults instantiates a new PoisonMicroblockTransactionMetadataPoisonMicroblock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoisonMicroblockTransactionMetadataPoisonMicroblockWithDefaults() *PoisonMicroblockTransactionMetadataPoisonMicroblock {
	this := PoisonMicroblockTransactionMetadataPoisonMicroblock{}
	return &this
}

// GetMicroblockHeader1 returns the MicroblockHeader1 field value
func (o *PoisonMicroblockTransactionMetadataPoisonMicroblock) GetMicroblockHeader1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MicroblockHeader1
}

// GetMicroblockHeader1Ok returns a tuple with the MicroblockHeader1 field value
// and a boolean to check if the value has been set.
func (o *PoisonMicroblockTransactionMetadataPoisonMicroblock) GetMicroblockHeader1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MicroblockHeader1, true
}

// SetMicroblockHeader1 sets field value
func (o *PoisonMicroblockTransactionMetadataPoisonMicroblock) SetMicroblockHeader1(v string) {
	o.MicroblockHeader1 = v
}

// GetMicroblockHeader2 returns the MicroblockHeader2 field value
func (o *PoisonMicroblockTransactionMetadataPoisonMicroblock) GetMicroblockHeader2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MicroblockHeader2
}

// GetMicroblockHeader2Ok returns a tuple with the MicroblockHeader2 field value
// and a boolean to check if the value has been set.
func (o *PoisonMicroblockTransactionMetadataPoisonMicroblock) GetMicroblockHeader2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MicroblockHeader2, true
}

// SetMicroblockHeader2 sets field value
func (o *PoisonMicroblockTransactionMetadataPoisonMicroblock) SetMicroblockHeader2(v string) {
	o.MicroblockHeader2 = v
}

func (o PoisonMicroblockTransactionMetadataPoisonMicroblock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["microblock_header_1"] = o.MicroblockHeader1
	}
	if true {
		toSerialize["microblock_header_2"] = o.MicroblockHeader2
	}
	return json.Marshal(toSerialize)
}

type NullablePoisonMicroblockTransactionMetadataPoisonMicroblock struct {
	value *PoisonMicroblockTransactionMetadataPoisonMicroblock
	isSet bool
}

func (v NullablePoisonMicroblockTransactionMetadataPoisonMicroblock) Get() *PoisonMicroblockTransactionMetadataPoisonMicroblock {
	return v.value
}

func (v *NullablePoisonMicroblockTransactionMetadataPoisonMicroblock) Set(val *PoisonMicroblockTransactionMetadataPoisonMicroblock) {
	v.value = val
	v.isSet = true
}

func (v NullablePoisonMicroblockTransactionMetadataPoisonMicroblock) IsSet() bool {
	return v.isSet
}

func (v *NullablePoisonMicroblockTransactionMetadataPoisonMicroblock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoisonMicroblockTransactionMetadataPoisonMicroblock(val *PoisonMicroblockTransactionMetadataPoisonMicroblock) *NullablePoisonMicroblockTransactionMetadataPoisonMicroblock {
	return &NullablePoisonMicroblockTransactionMetadataPoisonMicroblock{value: val, isSet: true}
}

func (v NullablePoisonMicroblockTransactionMetadataPoisonMicroblock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoisonMicroblockTransactionMetadataPoisonMicroblock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


