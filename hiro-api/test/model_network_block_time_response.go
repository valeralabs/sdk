/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkBlockTimeResponse GET request that target block time for a given network
type NetworkBlockTimeResponse struct {
	TargetBlockTime int32 `json:"target_block_time"`
}

// NewNetworkBlockTimeResponse instantiates a new NetworkBlockTimeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkBlockTimeResponse(targetBlockTime int32) *NetworkBlockTimeResponse {
	this := NetworkBlockTimeResponse{}
	this.TargetBlockTime = targetBlockTime
	return &this
}

// NewNetworkBlockTimeResponseWithDefaults instantiates a new NetworkBlockTimeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkBlockTimeResponseWithDefaults() *NetworkBlockTimeResponse {
	this := NetworkBlockTimeResponse{}
	return &this
}

// GetTargetBlockTime returns the TargetBlockTime field value
func (o *NetworkBlockTimeResponse) GetTargetBlockTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TargetBlockTime
}

// GetTargetBlockTimeOk returns a tuple with the TargetBlockTime field value
// and a boolean to check if the value has been set.
func (o *NetworkBlockTimeResponse) GetTargetBlockTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetBlockTime, true
}

// SetTargetBlockTime sets field value
func (o *NetworkBlockTimeResponse) SetTargetBlockTime(v int32) {
	o.TargetBlockTime = v
}

func (o NetworkBlockTimeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["target_block_time"] = o.TargetBlockTime
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkBlockTimeResponse struct {
	value *NetworkBlockTimeResponse
	isSet bool
}

func (v NullableNetworkBlockTimeResponse) Get() *NetworkBlockTimeResponse {
	return v.value
}

func (v *NullableNetworkBlockTimeResponse) Set(val *NetworkBlockTimeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkBlockTimeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkBlockTimeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkBlockTimeResponse(val *NetworkBlockTimeResponse) *NullableNetworkBlockTimeResponse {
	return &NullableNetworkBlockTimeResponse{value: val, isSet: true}
}

func (v NullableNetworkBlockTimeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkBlockTimeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


