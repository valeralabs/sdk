/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RosettaBlockTransactionResponse A BlockTransactionResponse contains information about a block transaction.
type RosettaBlockTransactionResponse struct {
	Transaction RosettaTransaction `json:"transaction"`
}

// NewRosettaBlockTransactionResponse instantiates a new RosettaBlockTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRosettaBlockTransactionResponse(transaction RosettaTransaction) *RosettaBlockTransactionResponse {
	this := RosettaBlockTransactionResponse{}
	this.Transaction = transaction
	return &this
}

// NewRosettaBlockTransactionResponseWithDefaults instantiates a new RosettaBlockTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRosettaBlockTransactionResponseWithDefaults() *RosettaBlockTransactionResponse {
	this := RosettaBlockTransactionResponse{}
	return &this
}

// GetTransaction returns the Transaction field value
func (o *RosettaBlockTransactionResponse) GetTransaction() RosettaTransaction {
	if o == nil {
		var ret RosettaTransaction
		return ret
	}

	return o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value
// and a boolean to check if the value has been set.
func (o *RosettaBlockTransactionResponse) GetTransactionOk() (*RosettaTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transaction, true
}

// SetTransaction sets field value
func (o *RosettaBlockTransactionResponse) SetTransaction(v RosettaTransaction) {
	o.Transaction = v
}

func (o RosettaBlockTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transaction"] = o.Transaction
	}
	return json.Marshal(toSerialize)
}

type NullableRosettaBlockTransactionResponse struct {
	value *RosettaBlockTransactionResponse
	isSet bool
}

func (v NullableRosettaBlockTransactionResponse) Get() *RosettaBlockTransactionResponse {
	return v.value
}

func (v *NullableRosettaBlockTransactionResponse) Set(val *RosettaBlockTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRosettaBlockTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRosettaBlockTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRosettaBlockTransactionResponse(val *RosettaBlockTransactionResponse) *NullableRosettaBlockTransactionResponse {
	return &NullableRosettaBlockTransactionResponse{value: val, isSet: true}
}

func (v NullableRosettaBlockTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRosettaBlockTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


