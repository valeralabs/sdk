openapi: 3.0.2
info:
  description: |
    Welcome to the API reference overview for the <a href="https://docs.hiro.so/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.

    <a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>
  title: Stacks Blockchain API
  version: STACKS_API_VERSION
servers:
- description: Mainnet
  url: https://stacks-node-api.mainnet.stacks.co/
- description: Testnet
  url: https://stacks-node-api.testnet.stacks.co/
- description: Local
  url: http://localhost:3999/
tags:
- description: Read-only endpoints to obtain Stacks account details
  externalDocs:
    description: Stacks Documentation - Accounts
    url: https://docs.stacks.co/understand-stacks/accounts
  name: Accounts
- description: Read-only endpoints to obtain Stacks block details
  name: Blocks
- description: Endpoints to request STX or BTC tokens (not possible on Mainnet)
  name: Faucets
- description: Read-only endpoints to obtain fee details
  name: Fees
- description: Read-only endpoints to obtain fungible token details
  externalDocs:
    description: Stacks Documentation - Tokens
    url: https://docs.stacks.co/write-smart-contracts/tokens
  name: Fungible Tokens
- description: "Read-only endpoints to obtain network, Proof-of-Transfer, Stacking,\
    \ STX token, and node information"
  name: Info
- description: Read-only endpoints to obtain microblocks details
  externalDocs:
    description: Stacks Documentation - Microblocks
    url: https://docs.stacks.co/understand-stacks/microblocks
  name: Microblocks
- description: Read-only endpoints realted to the Blockchain Naming System on Stacks
  externalDocs:
    description: Stacks Documentation - Blockchain Naming System
    url: https://docs.stacks.co/build-apps/references/bns
  name: Names
- description: Read-only endpoints to obtain non-fungible token details
  externalDocs:
    description: Stacks Documentation - Tokens
    url: https://docs.stacks.co/write-smart-contracts/tokens
  name: Non-Fungible Tokens
- description: Endpoints to support the Rosetta API open blockchain standard
  externalDocs:
    description: Hiro Documentation - Rosetta Support
    url: https://docs.hiro.so/get-started/stacks-blockchain-api#rosetta-support
  name: Rosetta
- description: "Read-only endpoints to search for accounts, blocks, smart contracts,\
    \ and transactions"
  name: Search
- description: Read-only endpoints to obtain Clarity smart contract details
  externalDocs:
    description: Stacks Documentation - Clarity Smart Contracts
    url: https://docs.stacks.co/write-smart-contracts/overview
  name: Smart Contracts
- description: Read-only endpoints to obtain Stacking reward details
  externalDocs:
    description: Stacks Documentation - Stacking
    url: https://docs.stacks.co/understand-stacks/stacking
  name: Stacking Rewards
- description: Endpoints to obtain transaction details and to broadcast transactions
    to the network
  externalDocs:
    description: Hiro Documentation - Transactions
    url: https://docs.hiro.so/get-started/transactions
  name: Transactions
paths:
  /extended/v1/faucets/stx:
    post:
      description: "Add 500 STX tokens to the specified testnet address. Testnet STX\
        \ addresses begin with `ST`. If the `stacking`\nparameter is set to `true`,\
        \ the faucet will add the required number of tokens for individual stacking\
        \ to the\nspecified testnet address.\n\nThe endpoint returns the transaction\
        \ ID, which you can use to view the transaction in the\n[Stacks Explorer](https://explorer.stacks.co/?chain=testnet).\
        \ The tokens are delivered once the transaction has\nbeen included in an anchor\
        \ block.\n\nA common reason for failed faucet transactions is that the faucet\
        \ has run out of tokens. If you are experiencing\nfailed faucet transactions\
        \ to a testnet address, you can get help in [Discord](https://stacks.chat).\n\
        \n**Note:** This is a testnet only endpoint. This endpoint will not work on\
        \ the mainnet.\n"
      operationId: run_faucet_stx
      parameters:
      - description: A valid testnet STX address
        explode: true
        in: query
        name: address
        required: true
        schema:
          example: ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ
          type: string
        style: form
      - description: Request the amount of STX tokens needed for individual address
          stacking
        explode: true
        in: query
        name: stacking
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/run_faucet_stx_request'
      responses:
        "200":
          content:
            application/json:
              example:
                success: true
                txId: 0xf2f0402f9f4c4d43b382690c4f7b97e24d5ff5dd5c619e3615daa64dca7ef4bc
                txRaw: 80800000000400164247d6f2b425ac5771423ae6c80c754f7172b0000000000000003200000000000000b400008537046ff1008368baaa3ff2235122c556b89dad4f9df0639b924cf32a44b866497e49846b24191e711b21faaae96ca0542e4a140168484740b94211cececb3303020000000000051ab52c45b1a7977204f17ac0b6f48306aea2dbb8e9000000000007a12046617563657400000000000000000000000000000000000000000000000000000000
              schema:
                $ref: '#/components/schemas/RunFaucetResponse'
          description: Success
        "500":
          description: Faucet call failed
      summary: Get STX testnet tokens
      tags:
      - Faucets
  /extended/v1/faucets/btc:
    post:
      description: "Add 1 BTC token to the specified testnet BTC address.\n\nThe endpoint\
        \ returns the transaction ID, which you can use to view the transaction in\
        \ a testnet Bitcoin block\nexplorer. The tokens are delivered once the transaction\
        \ has been included in a block.\n\n**Note:** This is a testnet only endpoint.\
        \ This endpoint will not work on the mainnet.\n"
      operationId: run_faucet_btc
      parameters:
      - description: A valid testnet BTC address
        explode: true
        in: query
        name: address
        required: true
        schema:
          example: 2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/run_faucet_btc_request'
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1faucets~1stx/post/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1faucets~1stx/post/responses/200/content/application~1json/schema'
          description: Success
        "500":
          description: Faucet call failed
      summary: Add testnet BTC tokens to address
      tags:
      - Faucets
  /extended/v1/tx:
    get:
      description: "Retrieves all recently mined transactions\n\nIf using TypeScript,\
        \ import typings for this response from our types package:\n\n`import type\
        \ { TransactionResults } from '@stacks/stacks-blockchain-api-types';`\n"
      operationId: get_transaction_list
      parameters:
      - description: max number of transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 200
          type: integer
        style: form
      - description: index of first transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Filter by transaction type
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - coinbase
            - token_transfer
            - smart_contract
            - contract_call
            - poison_microblock
            type: string
          type: array
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 10
                offset: 0
                total: 101922
                results:
                - tx_id: 0x20dedbef812e44d712569224411b27324b68ab4667321a4badd5e81ba76bf0eb
                  nonce: 269
                  fee_rate: "0"
                  sender_address: SPQXK10DBF5ECAM30XVE3EJA8DNZF3VE0BK4MKV
                  sponsored: false
                  post_condition_mode: deny
                  post_conditions: []
                  anchor_mode: on_chain_only
                  is_unanchored: false
                  block_hash: 0x28a9e2749b82bdc058776781a5abd5c9a6efed38f05545a8a51152655b8e1f4b
                  parent_block_hash: 0x3789b75ccfe7f2acf85c3f069fd5b8f95f73aba5332fa618243957d1c017a2a3
                  block_height: 21709
                  burn_block_time: 1626286436
                  burn_block_time_iso: 2021-07-14T18:13:56.000Z
                  canonical: true
                  tx_index: 0
                  tx_status: success
                  tx_result:
                    hex: 0x0703
                    repr: (ok true)
                  microblock_hash: ""
                  microblock_sequence: 2147483647
                  microblock_canonical: true
                  event_count: 0
                  events: []
                  tx_type: coinbase
                  coinbase_payload:
                    data: 0x0000000000000000000000000000000000000000000000000000000000000000
              schema:
                $ref: '#/components/schemas/TransactionResults'
          description: List of transactions
      summary: Get recent transactions
      tags:
      - Transactions
  /extended/v1/tx/mempool:
    get:
      description: "Retrieves all transactions that have been recently broadcast to\
        \ the mempool. These are pending transactions awaiting confirmation.\n\nIf\
        \ you need to monitor new transactions, we highly recommend subscribing to\
        \ [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client)\
        \ for real-time updates.\n"
      operationId: get_mempool_transaction_list
      parameters:
      - description: Filter to only return transactions with this sender address.
        explode: true
        in: query
        name: sender_address
        required: false
        schema:
          type: string
        style: form
      - description: Filter to only return transactions with this recipient address
          (only applicable for STX transfer tx types).
        explode: true
        in: query
        name: recipient_address
        required: false
        schema:
          type: string
        style: form
      - description: Filter to only return transactions with this address as the sender
          or recipient (recipient only applicable for STX transfer tx types).
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      - description: max number of mempool transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 200
          type: integer
        style: form
      - description: index of first mempool transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 96
                offset: 0
                total: 5
                results:
                - tx_id: 0xb31df5a363dad31723324cb5e0eefa04d491519fd30827a521cbc830114aa50c
                  tx_status: pending
                  tx_type: token_transfer
                  receipt_time: 1598288370
                  receipt_time_iso: 2020-08-24T16:59:30.000Z
                  fee_rate: "180"
                  sender_address: STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6
                  sponsored: false
                  post_condition_mode: deny
                  post_conditions: []
                  anchor_mode: any
                  token_transfer:
                    recipient_address: ST1GY25DM8RZV4X15X07THRZ2C5NMWPGQWKFGV87F
                    amount: "500000"
                    memo: 0x46617563657400000000000000000000000000000000000000000000000000000000
                - tx_id: 0x5bed8e3f801cb4e2c74d2815a092f7c1c6a35f2fce4a80c80ca70848d34cb395
                  tx_status: pending
                  tx_type: token_transfer
                  receipt_time: 1598282326
                  receipt_time_iso: 2020-08-24T15:18:46.000Z
                  fee_rate: "180"
                  sender_address: ST1PS1KF93VBY5A1JV7TM66KN046KP3E3761DBSAG
                  sponsored: false
                  post_condition_mode: deny
                  post_conditions: []
                  anchor_mode: any
                  token_transfer:
                    recipient_address: ST2H33S8SEY27QKEKQKR6S5PECYPKY45CQYGGQR8X
                    amount: "1000"
                    memo: 0x00000000000000000000000000000000000000000000000000000000000000000000
                - tx_id: 0x9916036fde08a207e581cdcabc18ff55469861cb81194ab0e3e7c9a02cd5a17c
                  tx_status: pending
                  tx_type: smart_contract
                  receipt_time: 1598258958
                  receipt_time_iso: 2020-08-24T08:49:18.000Z
                  fee_rate: "2000"
                  sender_address: ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8
                  sponsored: false
                  post_condition_mode: deny
                  post_conditions: []
                  anchor_mode: any
                  smart_contract:
                    contract_id: ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8.test-loans-1
                    source_code: |-
                      (define-data-var stx-loaned int 0)
                      (define-data-var lockup-period int 0)
                      (define-data-var stx-return int 0)
                      (define-public (get-stx-return (stx uint) (months uint))
                          (ok
                              (begin
                                  (var-set stx-loaned (to-int(stx))
                                  (var-set lockup-period (to-int(months))
                                  (calculate-stx-return)
                                  (print (var-get stx-return))
                                  (transfer-to-server)
                              )
                          )
                      )
                      (define-private (calculate-stx-return)
                          (ok
                              (begin
                                  (var-set stx-return (- (+ (* (/ (* (var-get stx-loaned) 5) 100) (var-get lockup-period)) (var-get stx-loaned)) 5))
                              )
                          )
                      )
                      (define-private (transfer-to-server)
                        (begin
                          (unwrap-panic (stx-transfer? (to-uint (var-get stx-loaned)) tx-sender 'ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8))
                          (ok (to-uint (var-get stx-loaned)))
                        )
                      )
                - tx_id: 0x871fb186c8d6ac6ede2822c71074d9884b593c0d7f2d0d6e8516e615484d7501
                  tx_status: pending
                  tx_type: smart_contract
                  receipt_time: 1598230365
                  receipt_time_iso: 2020-08-24T00:52:45.000Z
                  fee_rate: "2000"
                  sender_address: ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1
                  sponsored: false
                  post_condition_mode: deny
                  post_conditions: []
                  anchor_mode: any
                  smart_contract:
                    contract_id: ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230358601
                    source_code: ";; ## CUSTOM FUNCTION TO EXTRACT A SUBSTRING\n\n\
                      (define-read-only (subs (source (buff 10)) \n              \
                      \          (start int) \n                        (end int))\n\
                      \ (begin\n  (unwrap-panic (if (and (<= 0 start) (<= start 10))\
                      \ (ok 1) (err \"Out of bounds: start\")))\n  (unwrap-panic (if\
                      \ (and (<= 0 end) (<= end 10)) (ok 1) (err \"Out of bounds:\
                      \ end\")))\n  (let ((temp1 (fold subs1 source \n           \
                      \       {start: start, end: end, cursor: 1, data: \"\"})))\n\
                      \   (let ((data (get data temp1))) \n       data))))\n    \n\
                      ;; Call the function to extract the substring between the bounds:\n\
                      \n;; (subs \"123456789\" 2 5)\n\n(define-read-only (subs1 \n\
                      \                    (ch (buff 1))\n                    (acc\
                      \ {data: (buff 10), \n                          start: int,\n\
                      \                          end: int,\n                     \
                      \     cursor: int})) \n  (let ((data (get data acc))\n     \
                      \   (start (get start acc))\n        (cursor (get cursor acc))\n\
                      \        (end (get end acc)))                              \
                      \       \n    (let ((temp2 \n           {cursor: (+ 1 cursor),\n\
                      \            data: (default-to \"\"\n                     (as-max-len?\n\
                      \                       (concat data \n                    \
                      \     (if (let ((temp3 start)\n                            \
                      \       (temp4 cursor)\n                                   (temp5\
                      \ end))\n                              (and (<= temp3 temp4)\n\
                      \                               (<= temp4 temp5)))\n       \
                      \                    ch \n                           \"\"))\n\
                      \                       u10))}))\n     {start: (get start acc),\n\
                      \      end: (get end acc),\n      cursor: (get cursor temp2),\n\
                      \      data: (get data temp2)})))\n"
                - tx_id: 0x66df10d99d3a26018f521d60e9f744b083386c73e47ad39c394d570abee55f1f
                  tx_status: pending
                  tx_type: smart_contract
                  receipt_time: 1598230066
                  receipt_time_iso: 2020-08-24T00:47:46.000Z
                  fee_rate: "2000"
                  sender_address: ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1
                  sponsored: false
                  post_condition_mode: deny
                  post_conditions: []
                  anchor_mode: any
                  smart_contract:
                    contract_id: ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230054238
                    source_code: "(define-read-only (subs1 \n                    (ch\
                      \ (buff 1))\n                    (acc {data: (buff 10), \n \
                      \                         start: int,\n                    \
                      \      end: int,\n                          cursor: int}))\n\
                      \ (begin\n  (unwrap-panic (if (and (<= 1 (get start acc)) (<=\
                      \ (get start acc) 10)) (ok 1) (err \"Out of bounds: start\"\
                      )))\n  (unwrap-panic (if (and (<= 1 (get end acc)) (<= (get\
                      \ end acc) 10)) (ok 1) (err \"Out of bounds: end\")))\n  (unwrap-panic\
                      \ (if (and (<= 1 (get cursor acc)) (<= (get cursor acc) 10))\
                      \ (ok 1) (err \"Out of bounds: cursor\")))\n  (let ((data (get\
                      \ data acc))\n        (start (get start acc))\n        (cursor\
                      \ (get cursor acc))\n        (end (get end acc)))          \
                      \                           \n    (let ((temp1 \n          \
                      \ {cursor: (+ 1 cursor),\n            data: (default-to \"\"\
                      \n                     (as-max-len?\n                      \
                      \ (concat data \n                         (if (let ((temp2 start)\n\
                      \                                   (temp3 cursor)\n       \
                      \                            (temp4 end))\n                \
                      \              (and (<= temp2 temp3)\n                     \
                      \          (<= temp3 temp4)))\n                           ch\
                      \ \n                           \"\"))\n                    \
                      \   u10))}))\n     {start: (get start acc),\n      end: (get\
                      \ end acc),\n      cursor: (get cursor temp1),\n      data:\
                      \ (get data temp1)}))))\n"
                - tx_id: 0x7402d8e52204d6c8cba7465e159e79750338c3ee31d4fe6ddef1d4d226304b65
                  nonce: 1
                  fee_rate: "227"
                  sender_address: SP1HJDP35SSMYP98CG8SHMYHMZDK0A495ZCH6ARYS
                  sponsored: false
                  post_condition_mode: deny
                  post_conditions:
                  - type: stx
                    condition_code: sent_equal_to
                    amount: "88884500"
                    principal:
                      type_id: principal_standard
                      address: SP2J6HSSDYSTM71S0K0KK4YWRKX59JN1AD52M4B59
                  anchor_mode: any
                  tx_status: pending
                  receipt_time: 1626286631
                  receipt_time_iso: 2021-07-14T18:17:11.000Z
                  tx_type: contract_call
                  contract_call:
                    contract_id: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo
                    function_name: send-many
                    function_signature: (define-public (send-many (recipients (list
                      200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))
                    function_args:
                    - hex: 0x0b000000010c00000003046d656d6f020000000e357a62597346716a52336d736b7102746f0516b734e97043840503dc1091661c105d32b7c5c75d047573747801000000000000000000000000054c4514
                      repr: (list (tuple (memo 0x357a62597346716a52336d736b71) (to
                        SP2VK9TBG8E20A0YW228PC70GBMSBFHE7BNVMKB57) (ustx u88884500)))
                      name: recipients
                      type: (list 200 (tuple (memo (buff 34)) (to principal) (ustx
                        uint)))
              schema:
                $ref: '#/components/schemas/MempoolTransactionListResponse'
          description: List of mempool transactions
      summary: Get mempool transactions
      tags:
      - Transactions
  /extended/v1/tx/mempool/dropped:
    get:
      description: "Retrieves all recently-broadcast transactions that have been dropped\
        \ from the mempool.\n\nTransactions are dropped from the mempool if:\n * they\
        \ were stale and awaiting garbage collection or,\n * were expensive,  or\n\
        \ * were replaced with a new fee\n"
      operationId: get_dropped_mempool_transaction_list
      parameters:
      - description: max number of mempool transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 200
          type: integer
        style: form
      - description: index of first mempool transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema'
          description: List of dropped mempool transactions
      summary: Get dropped mempool transactions
      tags:
      - Transactions
  /extended/v1/tx/multiple:
    get:
      description: "Retrieves a list of transactions for a given list of transaction\
        \ IDs\n\nIf using TypeScript, import typings for this response from our types\
        \ package:\n\n`import type { Transaction } from '@stacks/stacks-blockchain-api-types';`\n"
      operationId: get_tx_list_details
      parameters:
      - description: Array of transaction ids
        explode: true
        in: query
        name: tx_id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The number of events to skip
        explode: true
        in: query
        name: event_offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The numbers of events to return
        explode: true
        in: query
        name: event_limit
        required: false
        schema:
          default: 96
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                "0x8911000000000000000000000000000000000000000000000000000000000000":
                  found: true
                  result:
                    tx_id: 0x8911000000000000000000000000000000000000000000000000000000000000
                    nonce: 0
                    fee_rate: "1234"
                    sender_address: sender-addr
                    sponsored: true
                    sponsor_address: sponsor-addr
                    post_condition_mode: allow
                    post_conditions: []
                    anchor_mode: any
                    is_unanchored: false
                    block_hash: 0x0123
                    parent_block_hash: 0x5678
                    block_height: 0
                    burn_block_time: 39486
                    burn_block_time_iso: 1970-01-01T10:58:06.000Z
                    parent_burn_block_time: 1626122935
                    parent_burn_block_time_iso: 2021-07-12T20:48:55.000Z
                    canonical: true
                    tx_index: 4
                    tx_status: success
                    microblock_hash: ""
                    microblock_sequence: 2147483647
                    microblock_canonical: true
                    event_count: 0
                    events: []
                    execution_cost_read_count: 0
                    execution_cost_read_length: 0
                    execution_cost_runtime: 0
                    execution_cost_write_count: 0
                    execution_cost_write_length: 0
                    tx_type: coinbase
                "0x8915000000000000000000000000000000000000000000000000000000000000":
                  found: true
                  result:
                    tx_id: 0x8915000000000000000000000000000000000000000000000000000000000000
                    nonce: 1000
                    fee_rate: "1234"
                    sender_address: sender-addr
                    sponsored: true
                    sponsor_address: sponsor-addr
                    post_condition_mode: allow
                    post_conditions: []
                    anchor_mode: any
                    is_unanchored: false
                    block_hash: 0x0123
                    parent_block_hash: 0x5678
                    block_height: 0
                    burn_block_time: 39486
                    burn_block_time_iso: 1970-01-01T10:58:06.000Z
                    parent_burn_block_time: 1626122935
                    parent_burn_block_time_iso: 2021-07-12T20:48:55.000Z
                    canonical: true
                    tx_index: 4
                    tx_status: success
                    microblock_hash: ""
                    microblock_sequence: 2147483647
                    microblock_canonical: true
                    event_count: 0
                    events: []
                    execution_cost_read_count: 0
                    execution_cost_read_length: 0
                    execution_cost_runtime: 0
                    execution_cost_write_count: 0
                    execution_cost_write_length: 0
                    tx_type: coinbase
                "0x8912000000000000000000000000000000000000000000000000000000000000":
                  found: true
                  result:
                    tx_id: 0x8912000000000000000000000000000000000000000000000000000000000000
                    nonce: 0
                    fee_rate: "1234"
                    sender_address: sender-addr
                    sponsored: false
                    post_condition_mode: allow
                    post_conditions: []
                    anchor_mode: any
                    tx_status: pending
                    receipt_time: 1594307695
                    receipt_time_iso: 2020-07-09T15:14:55.000Z
                    tx_type: coinbase
                "0x8914000000000000000000000000000000000000000000000000000000000000":
                  found: false
                  result:
                    tx_id: 0x8914000000000000000000000000000000000000000000000000000000000000
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/TransactionList'
                title: TransactionList
                type: object
          description: Returns list of transactions with their details for corresponding
            requested tx_ids.
        "404":
          description: Could not find any transaction by ID
      summary: Get list of details for transactions
      tags:
      - Transactions
  /extended/v1/tx/{tx_id}:
    get:
      description: "Retrieves transaction details for a given transaction ID\n\n`import\
        \ type { Transaction } from '@stacks/stacks-blockchain-api-types';`\n"
      operationId: get_transaction_by_id
      parameters:
      - description: Hash of transaction
        explode: false
        in: path
        name: tx_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of events to skip
        explode: true
        in: query
        name: event_offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The numbers of events to return
        explode: true
        in: query
        name: event_limit
        required: false
        schema:
          default: 96
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                tx_id: 0x5e9f3933e358df6a73fec0d47ce3e1062c20812c129f5294e6f37a8d27c051d9
                tx_status: success
                tx_type: coinbase
                fee_rate: "0"
                sender_address: ST3WCQ6S0DFT7YHF53M8JPKGDS1N1GSSR91677XF1
                sponsored: false
                post_condition_mode: deny
                is_unanchored: false
                microblock_hash: ""
                microblock_sequence: 2147483647
                microblock_canonical: true
                block_hash: 0x58412b50266debd0c35b1a20348ad9c0f17e5525fb155a97033256c83c9e2491
                block_height: 3231
                burn_block_time: 1594230455
                canonical: true
                tx_index: 0
                tx_result:
                  hex: 0x03
                  repr: "true"
                coinbase_payload:
                  data: 0x0000000000000000000000000000000000000000000000000000000000000000
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Transaction
        "404":
          description: Cannot find transaction for given ID
      summary: Get transaction
      tags:
      - Transactions
  /extended/v1/tx/{tx_id}/raw:
    get:
      description: |
        Retrieves a hex encoded serialized transaction for a given ID
      operationId: get_raw_transaction_by_id
      parameters:
      - description: Hash of transaction
        explode: false
        in: path
        name: tx_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                raw_tx: 0x1234
              schema:
                $ref: '#/components/schemas/GetRawTransactionResult'
          description: Hex encoded serialized transaction
        "404":
          description: Cannot find transaction for given ID
      summary: Get Raw Transaction
      tags:
      - Transactions
  /v2/transactions:
    post:
      description: "Broadcasts raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js)\
        \ project to generate a raw transaction payload."
      operationId: post_core_node_transactions
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: '"e161978626f216b2141b156ade10501207ae535fa365a13ef5d7a7c9310a09f2"'
                type: string
          description: Transaction id of successful post of a raw tx to the node's
            mempool
        "400":
          content:
            application/json:
              example:
                error: transaction rejected
                reason: BadNonce
                reason_data:
                  actual: 4
                  expected: 0
                  is_origin: true
                  principal: ST2ZRX0K27GW0SP3GJCEMHD95TQGJMKB7G9Y0X1MH
                txid: caf6fd60ae05b0c2d19ef14ab6a7670b1095d117fa7c80224c74e76214d0a791
              schema:
                $ref: '#/components/schemas/PostCoreNodeTransactionsError'
          description: Rejections result in a 400 error
      summary: Broadcast raw transaction
      tags:
      - Transactions
  /extended/v1/microblock:
    get:
      description: "Retrieves a list of microblocks.\n\nIf you need to actively monitor\
        \ new microblocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client)\
        \ for real-time updates.\n"
      operationId: get_microblock_list
      parameters:
      - description: Max number of microblocks to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          type: integer
        style: form
      - description: Index of the first microblock to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroblockListResponse'
          description: List of microblocks
      summary: Get recent microblocks
      tags:
      - Microblocks
  /extended/v1/microblock/{hash}:
    get:
      description: Retrieves a specific microblock by `hash`
      operationId: get_microblock_by_hash
      parameters:
      - description: Hash of the microblock
        explode: false
        in: path
        name: hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microblock'
          description: Microblock
        "404":
          content:
            application/json:
              example:
                error: cannot find microblock by hash 0xabc123
          description: Cannot find microblock with given hash
      summary: Get microblock
      tags:
      - Microblocks
  /extended/v1/microblock/unanchored/txs:
    get:
      description: Retrieves transactions that have been streamed in microblocks but
        not yet accepted or rejected in an anchor block
      operationId: get_unanchored_txs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnanchoredTransactionListResponse'
          description: Transactions
      summary: Get the list of current transactions that belong to unanchored microblocks
      tags:
      - Microblocks
  /extended/v1/block:
    get:
      description: "Retrieves a list of recently mined blocks\n\nIf you need to actively\
        \ monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client)\
        \ for real-time updates.\n"
      operationId: get_block_list
      parameters:
      - description: max number of blocks to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          type: integer
        style: form
      - description: index of first block to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 1
                offset: 0
                total: 21707
                results:
                - canonical: true
                  height: 21698
                  hash: 0x9be3e38eab9c7d094fd51792383c66706838d6392e95bc05cc730b8f7520e352
                  parent_block_hash: 0x76ee36d1d6c88e56b5c0e80f0d7bc7d3492141faf1b900efb19fcd00457d4654
                  burn_block_time: 1626281749
                  burn_block_time_iso: 2021-07-14T16:55:49.000Z
                  burn_block_hash: 0x0000000000000000000ea16f8e906e85ee1cb4dff1e5424e93843b3cec8b0bcb
                  burn_block_height: 691014
                  miner_txid: 0x118f7122a69441d13e6a3dfd4c3b0f9950be25195bb8126aae7fadea1aa9185d
                  parent_microblock_hash: 0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04
                  parent_microblock_sequence: 3
                  txs:
                  - 0x76f58b2eaff65a07a5971b241c4e71fee92ee0f9396809f911f90839f9004cac
                  - 0x32972d9052b068f218f6e13451f7aff937099b74bbf95fac7d9402295b1b3941
                  - 0x8cd30724c02a9cc1d8879a34dc136ebfdb2008420badcfb5947b92f85ebce79b
                  - 0xf5c1577f42d3753a508101e045dd2dc60491eb0aa552e0ecd0ad37cc697143f4
                  - 0x35e4c20e2838f999e0cf0b40c5fabce154c2df1912a1074150d26784c53f7a20
                  - 0x501eb42b82e5b7a7350b47fa143cd4e90bb46d43e4a7d22830b2bf2aa70b7922
                  microblocks_accepted:
                  - 0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04
                  - 0xdaf61d2b355f35c94cf019af99aeb73d8e7db7301c7cd693a464ebd1cfc2228c
                  - 0xb9e9b308cf9621ecbf66ca7b4689fe384b9b67c4588ec827d8163ab602fb935e
                  - 0x754562cba6ec243f90485e97778ab472f462fd123ef5b83cc79d8759ca8875f5
                  microblocks_streamed:
                  - 0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04
                  - 0xdaf61d2b355f35c94cf019af99aeb73d8e7db7301c7cd693a464ebd1cfc2228c
                  - 0xb9e9b308cf9621ecbf66ca7b4689fe384b9b67c4588ec827d8163ab602fb935e
                  - 0x754562cba6ec243f90485e97778ab472f462fd123ef5b83cc79d8759ca8875f5
              schema:
                $ref: '#/components/schemas/BlockListResponse'
          description: List of blocks
      summary: Get recent blocks
      tags:
      - Blocks
  /extended/v1/block/{hash}:
    get:
      description: Retrieves block details of a specific block for a given chain height
      operationId: get_block_by_hash
      parameters:
      - description: Hash of the block
        explode: false
        in: path
        name: hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                canonical: true
                height: 3275
                hash: 0xe77ba8cf6bb7c0e4f64adc83356289ed467d31a22354907b4bb814590058430f
                parent_block_hash: 0x75ab21ef25cbff2caa14c27d830ed7886a4d1522e1b6f9e5dc3b59ccf73ed49f
                burn_block_time: 1594233639
                burn_block_time_iso: 2020-08-27T16:41:26.000Z
                burn_block_hash: 0xb154c008df2101023a6d0d54986b3964cee58119eed14f5bed98e15678e18fe2
                burn_block_height: 654439
                miner_txid: 0xd7d56070277ccd87b42acf0c91f915dd181f9db4cf878a4e95518bc397c240cc
                parent_microblock_hash: 0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df
                parent_microblock_sequence: 2
                txs:
                - 0x4262db117659d1ca9406970c8f44ffd3d8f11f8e18c591d2e3960f4070107754
                - 0x383632cd3b5464dffb684082750fcfaddd1f52625bbb9f884ed8f45d2b1f0547
                - 0xc99fe597e44b8bd15a50eec660c6e679a7144a5a8553d214b9d5f1406d278c22
                microblocks_accepted:
                - 0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c
                - 0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326
                - 0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494
                microblocks_streamed:
                - 0xb5650ef855f7d90fc146942e85cf9fac3a8c47ec408aca02f3cf9ed7c82f6cc6
                - 0xeeb9aa5741d84aa0bc5de4f2fbdeae57ae29694479475d45a67ae7bd7e2c98f3
                - 0x4f4c368d5f06fdf6065c5bafd9cb37391fddc9c279cfc57be35e4bf8ee932cbd
                - 0xde2fc8d99872c827f144c752c002d29f9315dfc09472a09572ac7447ae623dea
                execution_cost_read_count: 2477
                execution_cost_read_length: 1659409
                execution_cost_runtime: 2520952000
                execution_cost_write_count: 608
                execution_cost_write_length: 80170
              schema:
                $ref: '#/components/schemas/Block'
          description: Block
        "404":
          content:
            application/json:
              example:
                error: cannot find block by hash 0xabc123
          description: Cannot find block with given ID
      summary: Get block by hash
      tags:
      - Blocks
  /extended/v1/block/by_height/{height}:
    get:
      description: Retrieves block details of a specific block at a given block height
      operationId: get_block_by_height
      parameters:
      - description: Height of the block
        explode: false
        in: path
        name: height
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/schema'
          description: Block
        "404":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/404/content/application~1json/example'
          description: Cannot find block with given height
      summary: Get block by height
      tags:
      - Blocks
  /extended/v1/block/by_burn_block_hash/{burn_block_hash}:
    get:
      description: Retrieves block details of a specific block for a given burnchain
        block hash
      operationId: get_block_by_burn_block_hash
      parameters:
      - description: Hash of the burnchain block
        explode: false
        in: path
        name: burn_block_hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/schema'
          description: Block
        "404":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/404/content/application~1json/example'
          description: Cannot find block with given height
      summary: Get block by burnchain block hash
      tags:
      - Blocks
  /extended/v1/block/by_burn_block_height/{burn_block_height}:
    get:
      description: Retrieves block details of a specific block for a given burn chain
        height
      operationId: get_block_by_burn_block_height
      parameters:
      - description: Height of the burn chain block
        explode: false
        in: path
        name: burn_block_height
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/schema'
          description: Block
        "404":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/404/content/application~1json/example'
          description: Cannot find block with given height
      summary: Get block by burnchain height
      tags:
      - Blocks
  /extended/v1/burnchain/reward_slot_holders:
    get:
      description: Retrieves a list of the Bitcoin addresses that would validly receive
        Proof-of-Transfer commitments.
      operationId: get_burnchain_reward_slot_holders
      parameters:
      - description: max number of items to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 250
          type: integer
        style: form
      - description: index of the first items to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                total: 2
                results:
                - canonical: true
                  burn_block_hash: 0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904
                  burn_block_height: 331
                  address: 1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6
                  slot_index: 0
                - canonical: true
                  burn_block_hash: 0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904
                  burn_block_height: 331
                  address: 1M3bvWB9CRh5BTumeVxtHDEV6W4S2R9AZw
                  slot_index: 0
              schema:
                $ref: '#/components/schemas/BurnchainRewardSlotHolderListResponse'
          description: List of burnchain reward recipients and amounts
      summary: Get recent reward slot holders
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/reward_slot_holders/{address}:
    get:
      description: Retrieves a list of the Bitcoin addresses that would validly receive
        Proof-of-Transfer commitments for a given reward slot holder recipient address.
      operationId: get_burnchain_reward_slot_holders_by_address
      parameters:
      - description: "Reward slot holder recipient address. Should either be in the\
          \ native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal\
          \ address is provided it will be encoded as into the equivalent burnchain\
          \ format"
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: max number of items to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of the first items to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1burnchain~1reward_slot_holders/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1burnchain~1reward_slot_holders/get/responses/200/content/application~1json/schema'
          description: List of burnchain reward recipients and amounts
      summary: Get recent reward slot holder entries for the given address
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/rewards:
    get:
      description: Retrieves a list of recent burnchain (e.g. Bitcoin) reward recipients
        with the associated amounts and block info
      operationId: get_burnchain_reward_list
      parameters:
      - description: max number of rewards to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 250
          type: integer
        style: form
      - description: index of first rewards to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                results:
                - canonical: true
                  burn_block_hash: 0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904
                  burn_block_height: 331
                  burn_amount: "12000"
                  reward_recipient: 1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6
                  reward_amount: "5000"
                  reward_index: 0
                - canonical: true
                  burn_block_hash: 0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904
                  burn_block_height: 336
                  burn_amount: "14000"
                  reward_recipient: 1M3bvWB9CRh5BTumeVxtHDEV6W4S2R9AZw
                  reward_amount: "2000"
                  reward_index: 0
              schema:
                $ref: '#/components/schemas/BurnchainRewardListResponse'
          description: List of burnchain reward recipients and amounts
      summary: Get recent burnchain reward recipients
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/rewards/{address}:
    get:
      description: Retrieves a list of recent burnchain (e.g. Bitcoin) rewards for
        the given recipient with the associated amounts and block info
      operationId: get_burnchain_reward_list_by_address
      parameters:
      - description: "Reward recipient address. Should either be in the native burnchain's\
          \ format (e.g. B58 for Bitcoin), or if a STX principal address is provided\
          \ it will be encoded as into the equivalent burnchain format"
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: max number of rewards to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first rewards to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1burnchain~1rewards/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1burnchain~1rewards/get/responses/200/content/application~1json/schema'
          description: List of burnchain reward recipients and amounts
      summary: Get recent burnchain reward for the given recipient
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/rewards/{address}/total:
    get:
      description: Retrieves the total burnchain (e.g. Bitcoin) rewards for a given
        recipient `address`
      operationId: get_burnchain_rewards_total_by_address
      parameters:
      - description: "Reward recipient address. Should either be in the native burnchain's\
          \ format (e.g. B58 for Bitcoin), or if a STX principal address is provided\
          \ it will be encoded as into the equivalent burnchain format"
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                reward_recipient: 1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6
                reward_amount: "18000"
              schema:
                $ref: '#/components/schemas/BurnchainRewardsTotal'
          description: List of burnchain reward recipients and amounts
      summary: Get total burnchain rewards for the given recipient
      tags:
      - Stacking Rewards
  /extended/v1/contract/{contract_id}:
    get:
      description: Retrieves details of a contract with a given `contract_id`
      operationId: get_contract_by_id
      parameters:
      - description: Contract identifier formatted as `<contract_address>.<contract_name>`
        explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: string
        style: simple
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                tx_id: 0x8122b7ae041120ddc9e2f8108e165912e40ad146399d42d6e6cbca7fd2c8ac28
                tx_status: success
                tx_type: smart_contract
                fee_rate: "3000"
                sender_address: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1
                sponsored: false
                post_condition_mode: allow
                is_unanchored: false
                microblock_hash: ""
                microblock_sequence: 2147483647
                microblock_canonical: true
                block_hash: 0x105685d3d4f251d73b75865b192cefb111dd49f67b8970a95094dc7ecf826caa
                block_height: 3196
                burn_block_time: 1594228322
                canonical: true
                tx_index: 1
                post_conditions: []
                smart_contract:
                  contract_id: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world
                  source_code: |-
                    (define-constant sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)
                    (define-constant recipient 'SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G)

                    (define-fungible-token novel-token-19)
                    (begin (ft-mint? novel-token-19 u12 sender))
                    (begin (ft-transfer? novel-token-19 u2 sender recipient))

                    (define-non-fungible-token hello-nft uint)
                    (begin (nft-mint? hello-nft u1 sender))
                    (begin (nft-mint? hello-nft u2 sender))
                    (begin (nft-transfer? hello-nft u1 sender recipient))

                    (define-public (test-emit-event)
                        (begin
                            (print "Event! Hello world")
                            (ok u1)))
                    (begin (test-emit-event))

                    (define-public (test-event-types)
                        (begin
                            (unwrap-panic (ft-mint? novel-token-19 u3 recipient))
                            (unwrap-panic (nft-mint? hello-nft u2 recipient))
                            (unwrap-panic (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR))
                            (unwrap-panic (stx-burn? u20 tx-sender))
                            (ok u1)))

                    (define-map store ((key (buff 32))) ((value (buff 32))))
                    (define-public (get-value (key (buff 32)))
                        (begin
                            (match (map-get? store ((key key)))
                                entry (ok (get value entry))
                                (err 0))))
                    (define-public (set-value (key (buff 32)) (value (buff 32)))
                        (begin
                            (map-set store ((key key)) ((value value)))
                            (ok u1)))
                events:
                - event_index: 0
                  event_type: fungible_token_asset
                  asset:
                    asset_event_type: mint
                    asset_id: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::novel-token-19
                    sender: ""
                    recipient: SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR
                    amount: "12"
                - event_index: 1
                  event_type: non_fungible_token_asset
                  asset:
                    asset_event_type: mint
                    asset_id: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::hello-nft
                    sender: ""
                    recipient: SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR
                    value:
                      hex: 0x0100000000000000000000000000000001
                      repr: "1"
                - event_index: 2
                  event_type: non_fungible_token_asset
                  asset:
                    asset_event_type: mint
                    asset_id: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::hello-nft
                    sender: ""
                    recipient: SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR
                    value:
                      hex: 0x0100000000000000000000000000000002
                      repr: "2"
                - event_index: 3
                  event_type: smart_contract_log
                  contract_log:
                    contract_id: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world
                    topic: print
                    value:
                      hex: 0x02000000124576656e74212048656c6c6f20776f726c64
                      repr: '"Event! Hello world"'
                - event_index: 4
                  event_type: fungible_token_asset
                  asset:
                    asset_event_type: transfer
                    asset_id: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::novel-token-19
                    sender: SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR
                    recipient: SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G
                    amount: "2"
                - event_index: 5
                  event_type: non_fungible_token_asset
                  asset:
                    asset_event_type: transfer
                    asset_id: STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::hello-nft
                    sender: SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR
                    recipient: SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G
                    value:
                      hex: 0x0100000000000000000000000000000001
                      repr: "1"
              schema:
                $ref: '#/components/schemas/SmartContractTransaction'
          description: Contract found
        "404":
          description: Cannot find contract of given ID
      summary: Get contract info
      tags:
      - Smart Contracts
  /extended/v1/contract/by_trait:
    get:
      description: "Retrieves a list of contracts based on the following traits listed\
        \ in JSON format -  functions, variables, maps, fungible tokens and non-fungible\
        \ tokens"
      operationId: get_contracts_by_trait
      parameters:
      - description: JSON abi of the trait.
        explode: true
        in: query
        name: trait_abi
        required: true
        schema:
          type: string
        style: form
      - description: max number of contracts fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first contract event to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                offset: 0
                limit: 10
                result:
                - tx_id: 0xb8b822f30a063fda8f9d44a23530a562a1ed93867d5977fbb12b1c284736edbb
                  canonical: true
                  contract_id: SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.btc-ft-swap
                  block_height: 23131
                  source_code: "(use-trait fungible-token 'SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.sip-010-trait-ft-standard.sip-010-trait)\
                    \ (define-constant expiry u100) (define-map swaps uint {sats:\
                    \ uint, btc-receiver: (buff 40), amount: uint, ft-receiver: (optional\
                    \ principal), ft-sender: principal, when: uint, done: uint, ft:\
                    \ principal}) (define-data-var next-id uint u0) (define-private\
                    \ (find-out (entry {scriptPubKey: (buff 128), value: (buff 8)})\
                    \ (result {pubscriptkey: (buff 40), out: (optional {scriptPubKey:\
                    \ (buff 128), value: uint})})) (if (is-eq (get scriptPubKey entry)\
                    \ (get pubscriptkey result)) (merge result {out: (some {scriptPubKey:\
                    \ (get scriptPubKey entry), value: (get uint32 (unwrap-panic (contract-call?\
                    \ 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1\
                    \ read-uint32 {txbuff: (get value entry), index: u0})))})}) result))\
                    \ (define-public (get-out-value (tx { version: (buff 4), ins:\
                    \ (list 8 {outpoint: {hash: (buff 32), index: (buff 4)}, scriptSig:\
                    \ (buff 256), sequence: (buff 4)}), outs: (list 8 {value: (buff\
                    \ 8), scriptPubKey: (buff 128)}), locktime: (buff 4)}) (pubscriptkey\
                    \ (buff 40))) (ok (fold find-out (get outs tx) {pubscriptkey:\
                    \ pubscriptkey, out: none}))) ;; create a swap between btc and\
                    \ fungible token (define-public (create-swap (sats uint) (btc-receiver\
                    \ (buff 40)) (amount uint) (ft-receiver (optional principal))\
                    \ (ft <fungible-token>)) (let ((id (var-get next-id))) (asserts!\
                    \ (map-insert swaps id {sats: sats, btc-receiver: btc-receiver,\
                    \ amount: amount, ft-receiver: ft-receiver, ft-sender: tx-sender,\
                    \ when: block-height, done: u0, ft: (contract-of ft)}) ERR_INVALID_ID)\
                    \ (var-set next-id (+ id u1)) (match (contract-call? ft transfer\
                    \ amount tx-sender (as-contract tx-sender) (some 0x636174616d6172616e2073776170))\
                    \ success (ok id) error (err (* error u1000))))) (define-public\
                    \ (set-ft-receiver (id uint)) (let ((swap (unwrap! (map-get? swaps\
                    \ id) ERR_INVALID_ID))) (if (is-none (get ft-receiver swap)) (begin\
                    \ (asserts! (map-set swaps id (merge swap {ft-receiver: (some\
                    \ tx-sender)})) ERR_NATIVE_FAILURE) (ok true)) ERR_ALREADY_DONE)))\
                    \ ;; any user can cancle the swap after the expiry period (define-public\
                    \ (cancel (id uint) (ft <fungible-token>)) (let ((swap (unwrap!\
                    \ (map-get? swaps id) ERR_INVALID_ID))) (asserts! (is-eq (contract-of\
                    \ ft) (get ft swap)) ERR_INVALID_FUNGIBLE_TOKEN) (asserts! (<\
                    \ (+ (get when swap) expiry) block-height) ERR_TOO_EARLY) (asserts!\
                    \ (is-eq (get done swap) u0) ERR_ALREADY_DONE) (asserts! (map-set\
                    \ swaps id (merge swap {done: u1})) ERR_NATIVE_FAILURE) (as-contract\
                    \ (contract-call? ft transfer (get amount swap) tx-sender (get\
                    \ ft-sender swap) (some 0x72657665727420636174616d6172616e2073776170)))))\
                    \ ;; any user can submit a tx that contains the swap (define-public\
                    \ (submit-swap (id uint) (block { version: (buff 4), parent: (buff\
                    \ 32), merkle-root: (buff 32), timestamp: (buff 4), nbits: (buff\
                    \ 4), nonce: (buff 4), height: uint }) (tx {version: (buff 4),\
                    \ ins: (list 8 {outpoint: {hash: (buff 32), index: (buff 4)},\
                    \ scriptSig: (buff 256), sequence: (buff 4)}), outs: (list 8 {value:\
                    \ (buff 8), scriptPubKey: (buff 128)}), locktime: (buff 4)}) (proof\
                    \ { tx-index: uint, hashes: (list 12 (buff 32)), tree-depth: uint\
                    \ }) (ft <fungible-token>)) (let ((swap (unwrap! (map-get? swaps\
                    \ id) ERR_INVALID_ID)) (tx-buff (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1\
                    \ concat-tx tx))) (match (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1\
                    \ was-tx-mined block tx-buff proof) result (begin (asserts! result\
                    \ ERR_VERIFICATION_FAILED) (asserts! (is-eq (get done swap) u0)\
                    \ ERR_ALREADY_DONE) (match (get out (unwrap! (get-out-value tx\
                    \ (get btc-receiver swap)) ERR_NATIVE_FAILURE)) out (if (>= (get\
                    \ value out) (get sats swap)) (begin (asserts! (is-eq (contract-of\
                    \ ft) (get ft swap)) ERR_INVALID_FUNGIBLE_TOKEN) (asserts! (map-set\
                    \ swaps id (merge swap {done: u1})) ERR_NATIVE_FAILURE) (as-contract\
                    \ (contract-call? ft transfer (get amount swap) tx-sender (unwrap!\
                    \ (get ft-receiver swap) ERR_NO_FT_RECEIVER) (some 0x636174616d6172616e2073776170))))\
                    \ ERR_TX_VALUE_TOO_SMALL) ERR_TX_NOT_FOR_RECEIVER)) error (err\
                    \ (* error u1000))))) (define-constant ERR_VERIFICATION_FAILED\
                    \ (err u1)) (define-constant ERR_FAILED_TO_PARSE_TX (err u2))\
                    \ (define-constant ERR_INVALID_ID (err u3)) (define-constant ERR_TOO_EARLY\
                    \ (err u4)) (define-constant ERR_TX_VALUE_TOO_SMALL (err u5))\
                    \ (define-constant ERR_TX_NOT_FOR_RECEIVER (err u6)) (define-constant\
                    \ ERR_ALREADY_DONE (err u7)) (define-constant ERR_INVALID_FUNGIBLE_TOKEN\
                    \ (err u8)) (define-constant ERR_NO_FT_RECEIVER (err u9)) (define-constant\
                    \ ERR_NATIVE_FAILURE (err u99)) "
                  abi: "{\"maps\":[{\"key\":\"uint128\",\"name\":\"swaps\",\"value\"\
                    :{\"tuple\":[{\"name\":\"amount\",\"type\":\"uint128\"},{\"name\"\
                    :\"btc-receiver\",\"type\":{\"buffer\":{\"length\":40}}},{\"name\"\
                    :\"done\",\"type\":\"uint128\"},{\"name\":\"ft\",\"type\":\"principal\"\
                    },{\"name\":\"ft-receiver\",\"type\":{\"optional\":\"principal\"\
                    }},{\"name\":\"ft-sender\",\"type\":\"principal\"},{\"name\":\"\
                    sats\",\"type\":\"uint128\"},{\"name\":\"when\",\"type\":\"uint128\"\
                    }]}}],\"functions\":[{\"args\":[{\"name\":\"entry\",\"type\":{\"\
                    tuple\":[{\"name\":\"scriptPubKey\",\"type\":{\"buffer\":{\"length\"\
                    :128}}},{\"name\":\"value\",\"type\":{\"buffer\":{\"length\":8}}}]}},{\"\
                    name\":\"result\",\"type\":{\"tuple\":[{\"name\":\"out\",\"type\"\
                    :{\"optional\":{\"tuple\":[{\"name\":\"scriptPubKey\",\"type\"\
                    :{\"buffer\":{\"length\":128}}},{\"name\":\"value\",\"type\":\"\
                    uint128\"}]}}},{\"name\":\"pubscriptkey\",\"type\":{\"buffer\"\
                    :{\"length\":40}}}]}}],\"name\":\"find-out\",\"access\":\"private\"\
                    ,\"outputs\":{\"type\":{\"tuple\":[{\"name\":\"out\",\"type\"\
                    :{\"optional\":{\"tuple\":[{\"name\":\"scriptPubKey\",\"type\"\
                    :{\"buffer\":{\"length\":128}}},{\"name\":\"value\",\"type\":\"\
                    uint128\"}]}}},{\"name\":\"pubscriptkey\",\"type\":{\"buffer\"\
                    :{\"length\":40}}}]}}},{\"args\":[{\"name\":\"id\",\"type\":\"\
                    uint128\"},{\"name\":\"ft\",\"type\":\"trait_reference\"}],\"\
                    name\":\"cancel\",\"access\":\"public\",\"outputs\":{\"type\"\
                    :{\"response\":{\"ok\":\"bool\",\"error\":\"uint128\"}}}},{\"\
                    args\":[{\"name\":\"sats\",\"type\":\"uint128\"},{\"name\":\"\
                    btc-receiver\",\"type\":{\"buffer\":{\"length\":40}}},{\"name\"\
                    :\"amount\",\"type\":\"uint128\"},{\"name\":\"ft-receiver\",\"\
                    type\":{\"optional\":\"principal\"}},{\"name\":\"ft\",\"type\"\
                    :\"trait_reference\"}],\"name\":\"create-swap\",\"access\":\"\
                    public\",\"outputs\":{\"type\":{\"response\":{\"ok\":\"uint128\"\
                    ,\"error\":\"uint128\"}}}},{\"args\":[{\"name\":\"tx\",\"type\"\
                    :{\"tuple\":[{\"name\":\"ins\",\"type\":{\"list\":{\"type\":{\"\
                    tuple\":[{\"name\":\"outpoint\",\"type\":{\"tuple\":[{\"name\"\
                    :\"hash\",\"type\":{\"buffer\":{\"length\":32}}},{\"name\":\"\
                    index\",\"type\":{\"buffer\":{\"length\":4}}}]}},{\"name\":\"\
                    scriptSig\",\"type\":{\"buffer\":{\"length\":256}}},{\"name\"\
                    :\"sequence\",\"type\":{\"buffer\":{\"length\":4}}}]},\"length\"\
                    :8}}},{\"name\":\"locktime\",\"type\":{\"buffer\":{\"length\"\
                    :4}}},{\"name\":\"outs\",\"type\":{\"list\":{\"type\":{\"tuple\"\
                    :[{\"name\":\"scriptPubKey\",\"type\":{\"buffer\":{\"length\"\
                    :128}}},{\"name\":\"value\",\"type\":{\"buffer\":{\"length\":8}}}]},\"\
                    length\":8}}},{\"name\":\"version\",\"type\":{\"buffer\":{\"length\"\
                    :4}}}]}},{\"name\":\"pubscriptkey\",\"type\":{\"buffer\":{\"length\"\
                    :40}}}],\"name\":\"get-out-value\",\"access\":\"public\",\"outputs\"\
                    :{\"type\":{\"response\":{\"ok\":{\"tuple\":[{\"name\":\"out\"\
                    ,\"type\":{\"optional\":{\"tuple\":[{\"name\":\"scriptPubKey\"\
                    ,\"type\":{\"buffer\":{\"length\":128}}},{\"name\":\"value\",\"\
                    type\":\"uint128\"}]}}},{\"name\":\"pubscriptkey\",\"type\":{\"\
                    buffer\":{\"length\":40}}}]},\"error\":\"none\"}}}},{\"args\"\
                    :[{\"name\":\"id\",\"type\":\"uint128\"}],\"name\":\"set-ft-receiver\"\
                    ,\"access\":\"public\",\"outputs\":{\"type\":{\"response\":{\"\
                    ok\":\"bool\",\"error\":\"uint128\"}}}},{\"args\":[{\"name\":\"\
                    id\",\"type\":\"uint128\"},{\"name\":\"block\",\"type\":{\"tuple\"\
                    :[{\"name\":\"height\",\"type\":\"uint128\"},{\"name\":\"merkle-root\"\
                    ,\"type\":{\"buffer\":{\"length\":32}}},{\"name\":\"nbits\",\"\
                    type\":{\"buffer\":{\"length\":4}}},{\"name\":\"nonce\",\"type\"\
                    :{\"buffer\":{\"length\":4}}},{\"name\":\"parent\",\"type\":{\"\
                    buffer\":{\"length\":32}}},{\"name\":\"timestamp\",\"type\":{\"\
                    buffer\":{\"length\":4}}},{\"name\":\"version\",\"type\":{\"buffer\"\
                    :{\"length\":4}}}]}},{\"name\":\"tx\",\"type\":{\"tuple\":[{\"\
                    name\":\"ins\",\"type\":{\"list\":{\"type\":{\"tuple\":[{\"name\"\
                    :\"outpoint\",\"type\":{\"tuple\":[{\"name\":\"hash\",\"type\"\
                    :{\"buffer\":{\"length\":32}}},{\"name\":\"index\",\"type\":{\"\
                    buffer\":{\"length\":4}}}]}},{\"name\":\"scriptSig\",\"type\"\
                    :{\"buffer\":{\"length\":256}}},{\"name\":\"sequence\",\"type\"\
                    :{\"buffer\":{\"length\":4}}}]},\"length\":8}}},{\"name\":\"locktime\"\
                    ,\"type\":{\"buffer\":{\"length\":4}}},{\"name\":\"outs\",\"type\"\
                    :{\"list\":{\"type\":{\"tuple\":[{\"name\":\"scriptPubKey\",\"\
                    type\":{\"buffer\":{\"length\":128}}},{\"name\":\"value\",\"type\"\
                    :{\"buffer\":{\"length\":8}}}]},\"length\":8}}},{\"name\":\"version\"\
                    ,\"type\":{\"buffer\":{\"length\":4}}}]}},{\"name\":\"proof\"\
                    ,\"type\":{\"tuple\":[{\"name\":\"hashes\",\"type\":{\"list\"\
                    :{\"type\":{\"buffer\":{\"length\":32}},\"length\":12}}},{\"name\"\
                    :\"tree-depth\",\"type\":\"uint128\"},{\"name\":\"tx-index\",\"\
                    type\":\"uint128\"}]}},{\"name\":\"ft\",\"type\":\"trait_reference\"\
                    }],\"name\":\"submit-swap\",\"access\":\"public\",\"outputs\"\
                    :{\"type\":{\"response\":{\"ok\":\"bool\",\"error\":\"uint128\"\
                    }}}}],\"variables\":[{\"name\":\"ERR_ALREADY_DONE\",\"type\":{\"\
                    response\":{\"ok\":\"none\",\"error\":\"uint128\"}},\"access\"\
                    :\"constant\"},{\"name\":\"ERR_FAILED_TO_PARSE_TX\",\"type\":{\"\
                    response\":{\"ok\":\"none\",\"error\":\"uint128\"}},\"access\"\
                    :\"constant\"},{\"name\":\"ERR_INVALID_FUNGIBLE_TOKEN\",\"type\"\
                    :{\"response\":{\"ok\":\"none\",\"error\":\"uint128\"}},\"access\"\
                    :\"constant\"},{\"name\":\"ERR_INVALID_ID\",\"type\":{\"response\"\
                    :{\"ok\":\"none\",\"error\":\"uint128\"}},\"access\":\"constant\"\
                    },{\"name\":\"ERR_NATIVE_FAILURE\",\"type\":{\"response\":{\"\
                    ok\":\"none\",\"error\":\"uint128\"}},\"access\":\"constant\"\
                    },{\"name\":\"ERR_NO_FT_RECEIVER\",\"type\":{\"response\":{\"\
                    ok\":\"none\",\"error\":\"uint128\"}},\"access\":\"constant\"\
                    },{\"name\":\"ERR_TOO_EARLY\",\"type\":{\"response\":{\"ok\":\"\
                    none\",\"error\":\"uint128\"}},\"access\":\"constant\"},{\"name\"\
                    :\"ERR_TX_NOT_FOR_RECEIVER\",\"type\":{\"response\":{\"ok\":\"\
                    none\",\"error\":\"uint128\"}},\"access\":\"constant\"},{\"name\"\
                    :\"ERR_TX_VALUE_TOO_SMALL\",\"type\":{\"response\":{\"ok\":\"\
                    none\",\"error\":\"uint128\"}},\"access\":\"constant\"},{\"name\"\
                    :\"ERR_VERIFICATION_FAILED\",\"type\":{\"response\":{\"ok\":\"\
                    none\",\"error\":\"uint128\"}},\"access\":\"constant\"},{\"name\"\
                    :\"expiry\",\"type\":\"uint128\",\"access\":\"constant\"},{\"\
                    name\":\"next-id\",\"type\":\"uint128\",\"access\":\"variable\"\
                    }],\"fungible_tokens\":[],\"non_fungible_tokens\":[]}"
              schema:
                $ref: '#/components/schemas/ContractListResponse'
          description: List of contracts implement given trait
      summary: Get contracts by trait
      tags:
      - Smart Contracts
  /extended/v1/contract/{contract_id}/events:
    get:
      description: Retrieves a list of events that have been triggered by a given
        `contract_id`
      operationId: get_contract_events_by_id
      parameters:
      - description: Contract identifier formatted as `<contract_address>.<contract_name>`
        explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: string
        style: simple
      - description: max number of contract events to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first contract event to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                results:
                - event_index: 1
                  event_type: smart_contract_log
                  contract_log:
                    contract_id: ST2P7B9G6Y55QWZJ9B93DVSEG5S6Z4PFJHB3XRKHW.hello_world
                    topic: print
                    value:
                      hex: 0x02000000124576656e74212048656c6c6f20776f726c64
                      repr: '"Event! Hello world"'
              schema:
                $ref: '#/components/schemas/TransactionEvent'
          description: List of events
      summary: Get contract events
      tags:
      - Smart Contracts
  /v2/contracts/interface/{contract_address}/{contract_name}:
    get:
      description: Retrieves a contract interface with a given `contract_address`
        and `contract name`
      operationId: get_contract_interface
      parameters:
      - description: Stacks address
        explode: false
        in: path
        name: contract_address
        required: true
        schema:
          type: string
        style: simple
      - description: Contract name
        explode: false
        in: path
        name: contract_name
        required: true
        schema:
          type: string
        style: simple
      - description: The Stacks chain tip to query from
        explode: true
        in: query
        name: tip
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                functions:
                - name: get-value
                  access: public
                  args:
                  - name: key
                    type:
                      buffer:
                        length: 32
                  outputs:
                    type:
                      response:
                        ok:
                          buffer:
                            length: 32
                        error: int128
                - name: set-value
                  access: public
                  args:
                  - name: key
                    type:
                      buffer:
                        length: 32
                  - name: value
                    type:
                      buffer:
                        length: 32
                  outputs:
                    type:
                      response:
                        ok: uint128
                        error: none
                - name: test-emit-event
                  access: public
                  args: []
                  outputs:
                    type:
                      response:
                        ok: uint128
                        error: none
                - name: test-event-types
                  access: public
                  args: []
                  outputs:
                    type:
                      response:
                        ok: uint128
                        error: none
                variables:
                - name: recipient
                  type: principal
                  access: constant
                - name: sender
                  type: principal
                  access: constant
                maps:
                - name: store
                  key:
                  - name: key
                    type:
                      buffer:
                        length: 32
                  value:
                  - name: value
                    type:
                      buffer:
                        length: 32
                fungible_tokens:
                - name: novel-token-19
                non_fungible_tokens:
                - name: hello-nft
                  type: uint128
              schema:
                $ref: '#/components/schemas/ContractInterfaceResponse'
          description: Contract interface
      summary: Get contract interface
      tags:
      - Smart Contracts
  /v2/map_entry/{contract_address}/{contract_name}/{map_name}:
    post:
      description: "Attempt to fetch data from a contract data map. The contract is\
        \ identified with Stacks Address `contract_address` and Contract Name `contract_address`\
        \ in the URL path. The map is identified with [Map Name].\n\nThe key to lookup\
        \ in the map is supplied via the POST body. This should be supplied as the\
        \ hex string serialization of the key (which should be a Clarity value). Note,\
        \ this is a JSON string atom.\n\nIn the response, `data` is the hex serialization\
        \ of the map response. Note that map responses are Clarity option types, for\
        \ non-existent values, this is a serialized none, and for all other responses,\
        \ it is a serialized (some ...) object.\n"
      operationId: get_contract_data_map_entry
      parameters:
      - description: Stacks address
        explode: false
        in: path
        name: contract_address
        required: true
        schema:
          type: string
        style: simple
      - description: Contract name
        explode: false
        in: path
        name: contract_name
        required: true
        schema:
          type: string
        style: simple
      - description: Map name
        explode: false
        in: path
        name: map_name
        required: true
        schema:
          type: string
        style: simple
      - description: Returns object without the proof field when set to 0
        explode: true
        in: query
        name: proof
        required: false
        schema:
          type: integer
        style: form
      - description: The Stacks chain tip to query from
        explode: true
        in: query
        name: tip
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Hex string serialization of the lookup key (which should be a
          Clarity value)
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data: 0x0a0c000000010a6d6f6e737465722d69640100000000000000000000000000000001
                proof: 0x123...
              schema:
                $ref: '#/components/schemas/MapEntryResponse'
          description: Success
        "400":
          description: Failed loading data map
      summary: Get specific data-map inside a contract
      tags:
      - Smart Contracts
      x-codegen-request-body-name: key
  /v2/contracts/source/{contract_address}/{contract_name}:
    get:
      description: "Retrieves the Clarity source code of a given contract, along with\
        \ the block height it was published in, and the MARF proof for the data"
      operationId: get_contract_source
      parameters:
      - description: Stacks address
        explode: false
        in: path
        name: contract_address
        required: true
        schema:
          type: string
        style: simple
      - description: Contract name
        explode: false
        in: path
        name: contract_name
        required: true
        schema:
          type: string
        style: simple
      - description: Returns object without the proof field if set to 0
        explode: true
        in: query
        name: proof
        required: false
        schema:
          type: integer
        style: form
      - description: The Stacks chain tip to query from
        explode: true
        in: query
        name: tip
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                source: |-
                  (define-constant sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)
                  (define-constant recipient 'SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G)

                  (define-fungible-token novel-token-19)
                  (begin (ft-mint? novel-token-19 u12 sender))
                  (begin (ft-transfer? novel-token-19 u2 sender recipient))

                  (define-non-fungible-token hello-nft uint)
                  (begin (nft-mint? hello-nft u1 sender))
                  (begin (nft-mint? hello-nft u2 sender))
                  (begin (nft-transfer? hello-nft u1 sender recipient))

                  (define-public (test-emit-event)
                      (begin
                          (print "Event! Hello world")
                          (ok u1)))
                  (begin (test-emit-event))

                  (define-public (test-event-types)
                      (begin
                          (unwrap-panic (ft-mint? novel-token-19 u3 recipient))
                          (unwrap-panic (nft-mint? hello-nft u2 recipient))
                          (unwrap-panic (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR))
                          (unwrap-panic (stx-burn? u20 tx-sender))
                          (ok u1)))

                  (define-map store ((key (buff 32))) ((value (buff 32))))
                  (define-public (get-value (key (buff 32)))
                      (begin
                          (match (map-get? store ((key key)))
                              entry (ok (get value entry))
                              (err 0))))
                  (define-public (set-value (key (buff 32)) (value (buff 32)))
                      (begin
                          (map-set store ((key key)) ((value value)))
                          (ok u1)))
                publish_height: 3196
                proof: 0000001104060000001ec4e...
              schema:
                $ref: '#/components/schemas/ContractSourceResponse'
          description: Success
      summary: Get contract source
      tags:
      - Smart Contracts
  /v2/contracts/call-read/{contract_address}/{contract_name}/{function_name}:
    post:
      description: |
        Call a read-only public function on a given smart contract.

        The smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format:
      operationId: call_read_only_function
      parameters:
      - description: Stacks address
        explode: false
        in: path
        name: contract_address
        required: true
        schema:
          type: string
        style: simple
      - description: Contract name
        explode: false
        in: path
        name: contract_name
        required: true
        schema:
          type: string
        style: simple
      - description: Function name
        explode: false
        in: path
        name: function_name
        required: true
        schema:
          type: string
        style: simple
      - description: The Stacks chain tip to query from
        explode: true
        in: query
        name: tip
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadOnlyFunctionArgs'
        description: "map of arguments and the simulated tx-sender where sender is\
          \ either a Contract identifier or a normal Stacks address, and arguments\
          \ is an array of hex serialized Clarity values."
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    okay: true
                    result: 0x111...
                fail:
                  value:
                    okay: false
                    cause: Unchecked(PublicFunctionNotReadOnly(...
              schema:
                $ref: '#/components/schemas/ReadOnlyFunctionSuccessResponse'
          description: Success
      summary: Call read-only function
      tags:
      - Smart Contracts
  /extended/v1/address/{principal}/balances:
    get:
      description: "Retrieves total account balance information for a given Address\
        \ or Contract Identifier. This includes the balances of  STX Tokens, Fungible\
        \ Tokens and Non-Fungible Tokens for the account."
      operationId: get_account_balance
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "returned data representing the state up until that point in\
          \ time, rather than the current block."
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                stx:
                  balance: "1000000"
                  total_sent: "0"
                  total_received: "1000000"
                  lock_tx_id: 0xec94e7d20af8979b44d17a0520c126bf742b999a0fc7ddbcbe0ab21b228ecc8c
                  locked: "50000"
                  lock_height: 100
                  burnchain_lock_height: 100
                  burnchain_unlock_height: 200
                fungible_tokens: {}
                non_fungible_tokens: {}
              schema:
                $ref: '#/components/schemas/AddressBalanceResponse'
          description: Success
      summary: Get account balances
      tags:
      - Accounts
  /extended/v1/address/{principal}/stx:
    get:
      description: Retrieves STX token balance for a given Address or Contract Identifier.
      operationId: get_account_stx_balance
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "returned data representing the state up until that point in\
          \ time, rather than the current block."
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                balance: "1000000"
                total_sent: "0"
                total_received: "1000000"
                lock_tx_id: 0xec94e7d20af8979b44d17a0520c126bf742b999a0fc7ddbcbe0ab21b228ecc8c
                locked: "50000"
                lock_height: 100
                burnchain_lock_height: 100
                burnchain_unlock_height: 200
              schema:
                $ref: '#/components/schemas/AddressStxBalanceResponse'
          description: Success
      summary: Get account STX balance
      tags:
      - Accounts
  /extended/v1/address/{principal}/transactions:
    get:
      description: "Retrieves a list of all Transactions for a given Address or Contract\
        \ Identifier. More information on Transaction types can be found [here](https://docs.stacks.co/understand-stacks/transactions#types).\n\
        \nIf you need to actively monitor new transactions for an address or contract\
        \ id, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client)\
        \ for real-time updates.\n"
      operationId: get_account_transactions
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: max number of account transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first account transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Filter for transactions only at this given block height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: number
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "returned data representing the state up until that point in\
          \ time, rather than the current block."
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                total: 4989
                results:
                - tx_id: 0xb16077b94222bc1466396d30df13db460864e85ce929a20aae0a2ac80b31e4e2
                  tx_status: success
                  tx_type: coinbase
                  fee_rate: "0"
                  sender_address: ST2TJRHDHMYBQ417HFB0BDX430TQA5PXRX6495G1V
                  sponsored: false
                  post_condition_mode: deny
                  block_hash: 0x83f84f814c1b00ddb672d93b97d06c8326f76746d90a979c12b69e54beb73f69
                  block_height: 5603
                  burn_block_time: 1594335838
                  canonical: true
                  is_unanchored: false
                  microblock_hash: 0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df
                  microblock_sequence: 5
                  microblock_canonical: true
                  tx_index: 0
                  coinbase_payload:
                    data: 0x0000000000000000000000000000000000000000000000000000000000000000
              schema:
                $ref: '#/components/schemas/AddressTransactionsListResponse'
          description: Success
      summary: Get account transactions
      tags:
      - Accounts
  /extended/v1/address/{principal}/{tx_id}/with_transfers:
    get:
      description: "Retrieves transaction details for a given Transcation Id `tx_id`,\
        \ for a given account or contract Identifier."
      operationId: get_single_transaction_with_transfers
      parameters:
      - description: Stacks address or a contract identifier
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: Transaction id
        explode: false
        in: path
        name: tx_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                tx_id: 0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448
                tx_type: contract_call
                nonce: 11
                fee_rate: "346"
                sender_address: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                sponsored: false
                post_condition_mode: deny
                tx_status: success
                block_hash: 0x13d1b4ad35c95bca209397420fb8af104d2929d91993ba056d7a1ca5470095f9
                block_height: 3246
                burn_block_time: 1613009951
                burn_block_time_iso: 2021-02-11T02:19:11.000Z
                canonical: true
                is_unanchored: false
                microblock_hash: 0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df
                microblock_sequence: 5
                microblock_canonical: true
                tx_index: 1
                tx_result:
                  hex: 0x0703
                  repr: (ok true)
                post_conditions:
                - type: stx
                  condition_code: sent_equal_to
                  amount: "350"
                  principal:
                    type_id: principal_standard
                    address: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                contract_call:
                  contract_id: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo
                  function_name: send-many
                  function_signature: (define-public (send-many (recipients (list
                    200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))
                  function_args:
                  - hex: 0x0b000000020c00000003046d656d6f020000000966697273746d656d6f02746f05168c031b2db5895ece0cdfbf76e0b0e8af67226a6f047573747801000000000000000000000000000000960c00000003046d656d6f020000000a7365636f6e646d656d6f02746f05168974da696d74a16d0955bc8e55720dfd39e789cf047573747801000000000000000000000000000000c8
                    repr: (list (tuple (memo 0x66697273746d656d6f) (to SP26066SDPP4NXKGCVYZQDR5GX2QPE8KADZ0YK2J7)
                      (ustx u150)) (tuple (memo 0x7365636f6e646d656d6f) (to SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP)
                      (ustx u200)))
                    name: recipients
                    type: (list 200 (tuple (memo (buff 34)) (to principal) (ustx uint)))
                events: []
                event_count: 4
              schema:
                $ref: '#/components/schemas/AddressTransactionWithTransfers'
          description: Success
        "404":
          content:
            application/json:
              example:
                error: No matching transaction found
          description: Not found
      summary: Get account transaction information for specific transaction
      tags:
      - Accounts
  /extended/v1/address/{principal}/transactions_with_transfers:
    get:
      description: Retrieve all transactions for an account or contract identifier
        including STX transfers for each transaction.
      operationId: get_account_transactions_with_transfers
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: max number of account transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first account transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Filter for transactions only at this given block height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: number
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "returned data representing the state up until that point in\
          \ time, rather than the current block."
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                total: 2
                results:
                - tx:
                    tx_id: 0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448
                    tx_type: contract_call
                    nonce: 11
                    fee_rate: "346"
                    sender_address: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    sponsored: false
                    post_condition_mode: deny
                    tx_status: success
                    block_hash: 0x13d1b4ad35c95bca209397420fb8af104d2929d91993ba056d7a1ca5470095f9
                    block_height: 3246
                    burn_block_time: 1613009951
                    burn_block_time_iso: 2021-02-11T02:19:11.000Z
                    canonical: true
                    is_unanchored: false
                    microblock_hash: 0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df
                    microblock_sequence: 5
                    microblock_canonical: true
                    tx_index: 1
                    tx_result:
                      hex: 0x0703
                      repr: (ok true)
                    post_conditions:
                    - type: stx
                      condition_code: sent_equal_to
                      amount: "350"
                      principal:
                        type_id: principal_standard
                        address: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    contract_call:
                      contract_id: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo
                      function_name: send-many
                      function_signature: (define-public (send-many (recipients (list
                        200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))
                      function_args:
                      - hex: 0x0b000000020c00000003046d656d6f020000000966697273746d656d6f02746f05168c031b2db5895ece0cdfbf76e0b0e8af67226a6f047573747801000000000000000000000000000000960c00000003046d656d6f020000000a7365636f6e646d656d6f02746f05168974da696d74a16d0955bc8e55720dfd39e789cf047573747801000000000000000000000000000000c8
                        repr: (list (tuple (memo 0x66697273746d656d6f) (to SP26066SDPP4NXKGCVYZQDR5GX2QPE8KADZ0YK2J7)
                          (ustx u150)) (tuple (memo 0x7365636f6e646d656d6f) (to SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP)
                          (ustx u200)))
                        name: recipients
                        type: (list 200 (tuple (memo (buff 34)) (to principal) (ustx
                          uint)))
                    events: []
                    event_count: 4
                  stx_sent: "696"
                  stx_received: "0"
                  stx_transfers:
                  - amount: "200"
                    sender: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    recipient: SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP
                  - amount: "150"
                    sender: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    recipient: SP26066SDPP4NXKGCVYZQDR5GX2QPE8KADZ0YK2J7
                  ft_transfers:
                  - amount: "103"
                    asset_identifier: SP466FNC0P7JWTNM2R9T199QRZN1MYEDTAR0KP27.miamicoin-token::miamicoin
                    sender: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    recipient: SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP
                  nft_transfers:
                  - asset_identifier: SP497E7RX3233ATBS2AB9G4WTHB63X5PBSP5VGAQ.boom-nfts::boom
                    value:
                      hex: 0x00
                      repr: "0"
                    sender: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    recipient: SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP
                - tx:
                    tx_id: 0x628045bff13658396277d618e9a3e4d468a4b3876eff4941d2f13ed88cd7abb7
                    tx_type: token_transfer
                    nonce: 8
                    fee_rate: "180"
                    sender_address: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    sponsored: false
                    post_condition_mode: deny
                    tx_status: success
                    block_hash: 0x2b8599696f64e2456c67b1ab5e63078f99d87bd1d903c37fdcfd73b1890a7551
                    block_height: 1761
                    burn_block_time: 1611968237
                    burn_block_time_iso: 2021-01-30T00:57:17.000Z
                    canonical: true
                    is_unanchored: false
                    microblock_hash: ""
                    microblock_sequence: 2147483647
                    microblock_canonical: true
                    tx_index: 2
                    tx_result:
                      hex: 0x0703
                      repr: (ok true)
                    token_transfer:
                      recipient_address: SPRSM0R2JZWBCZ39NQBARWTMX9TE99K3JK8D5KMX
                      amount: "100000"
                      memo: 0x57656c636f6d6520746f20426f6f6d2e000000000000000000000000000000000000
                    events: []
                    event_count: 1
                  stx_sent: "100180"
                  stx_received: "0"
                  stx_transfers:
                  - amount: "100000"
                    sender: SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE
                    recipient: SPRSM0R2JZWBCZ39NQBARWTMX9TE99K3JK8D5KMX
                  ft_transfers: []
                  nft_transfers: []
              schema:
                $ref: '#/components/schemas/AddressTransactionsWithTransfersListResponse'
          description: Success
      summary: Get account transactions including STX transfers for each transaction.
      tags:
      - Accounts
  /extended/v1/address/{principal}/nonces:
    get:
      description: "Retrieves the latest nonce values used by an account by inspecting\
        \ the mempool, microblock transactions, and anchored transactions."
      operationId: get_account_nonces
      parameters:
      - description: Stacks address (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: Optionally get the nonce at a given block height
        explode: true
        in: query
        name: block_height
        required: false
        schema:
          type: number
        style: form
      - description: Optionally get the nonce at a given block hash
        explode: true
        in: query
        name: block_hash
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                last_mempool_tx_nonce: 5
                last_executed_tx_nonce: 2
                possible_next_nonce: 6
                detected_missing_nonces:
                - 3
                - 4
              schema:
                $ref: '#/components/schemas/AddressNonces'
          description: Success
      summary: Get the latest nonce used by an account
      tags:
      - Accounts
  /extended/v1/address/{principal}/assets:
    get:
      description: "Retrieves a list of all assets events associated with an account\
        \ or a Contract Identifier. This includes Transfers, Mints."
      operationId: get_account_assets
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: max number of account assets to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first account assets to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "returned data representing the state at that point in time,\
          \ rather than the current block."
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                total: 0
                results:
                - event_index: 0
                  event_type: stx_asset
                  tx_id: 0xb31df5a363dad31723324cb5e0eefa04d491519fd30827a521cbc830114aa50c
                  asset:
                    asset_event_type: transfer
                    sender: STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6
                    recipient: ST2TJRHDHMYBQ417HFB0BDX430TQA5PXRX6495G1V
                    amount: "500000"
              schema:
                $ref: '#/components/schemas/AddressAssetsListResponse'
          description: Success
      summary: Get account assets
      tags:
      - Accounts
  /extended/v1/address/{principal}/stx_inbound:
    get:
      description: "Retrieves a list of STX transfers with memos to the given principal.\
        \ This includes regular transfers from a stx-transfer transaction type,\n\
        and transfers from contract-call transactions a the `send-many-memo` bulk\
        \ sending contract.\n"
      operationId: get_account_inbound
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: number of items to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Filter for transfers only at this given block height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: number
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "returned data representing the state up until that point in\
          \ time, rather than the current block."
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                total: 0
                results:
                - sender: ST1RZG804V6Y0N4XHQD3ZE2GE3XSCV3VHRKMA3GB0
                  amount: "123456789"
                  memo: 0x00000000000000000000000000000000000000000000000000000000000000000000
                  block_height: 12345
                  tx_id: 0x29e25515652dad41ef675bd0670964e3d537b80ec19cf6ca6f1dd65d5bc642c5
                  transfer_type: bulk-send
                  tx_index: 3
              schema:
                $ref: '#/components/schemas/AddressStxInboundListResponse'
          description: Success
      summary: Get inbound STX transfers
      tags:
      - Accounts
  /extended/v1/address/{principal}/nft_events:
    get:
      deprecated: true
      description: "**NOTE:** This endpoint is deprecated in favor of [Non-Fungible\
        \ Token holdings](#operation/get_nft_holdings).\n\nRetrieves a list of all\
        \ nfts owned by an address, contains the clarity value of the identifier of\
        \ the nft.\n"
      operationId: get_account_nft
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: number of items to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "returned data representing the state up until that point in\
          \ time, rather than the current block."
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 20
                offset: 0
                total: 1
                nft_events:
                - sender: none
                  recipient: ST1HB64MAJ1MBV4CQ80GF01DZS4T1DSMX20ADCRA4
                  asset_identifier: some-asset
                  value:
                    hex: 0x00
                    repr: "0"
              schema:
                $ref: '#/components/schemas/AddressNftListResponse'
          description: Success
      summary: Get nft events
      tags:
      - Accounts
  /v2/accounts/{principal}:
    get:
      description: "Retrieves the account data for a given Account or a Contract Identifier\n\
        \nWhere balance is the hex encoding of a unsigned 128-bit integer (big-endian),\
        \ nonce is an unsigned 64-bit integer, and the proofs are provided as hex\
        \ strings.\n\nFor non-existent accounts, this does not return a 404 error,\
        \ rather it returns an object with balance and nonce of 0.\n"
      operationId: get_account_info
      parameters:
      - description: Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)
        explode: false
        in: path
        name: principal
        required: true
        schema:
          type: string
        style: simple
      - description: Returns object without the proof field if set to 0
        explode: true
        in: query
        name: proof
        required: false
        schema:
          type: integer
        style: form
      - description: The Stacks chain tip to query from
        explode: true
        in: query
        name: tip
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                balance: 0x0000000000000000000000000007a120
                locked: 0x0000000000000000000000000007a120
                unlock_height: 126
                nonce: 2867
                balance_proof: 0xabce
                nonce_proof: 0xabcd
              schema:
                $ref: '#/components/schemas/AccountDataResponse'
          description: Success
      summary: Get account info
      tags:
      - Accounts
  /v2/fees/transfer:
    get:
      description: "Retrieves an estimated fee rate for STX transfer transactions.\
        \ This a a fee rate / byte, and is returned as a JSON integer"
      operationId: get_fee_transfer
      responses:
        "200":
          content:
            application/json:
              example: 1
              schema:
                additionalProperties: false
                description: GET fee estimates
                title: CoreNodeFeeResponse
                type: object
          description: Success
      summary: Get estimated fee
      tags:
      - Fees
  /v2/info:
    get:
      description: Retrieves information about the Core API including the server version
      operationId: get_core_api_info
      responses:
        "200":
          content:
            application/json:
              example:
                peer_version: 385875968
                pox_consensus: 17f76e597bab45646956f38dd39573085d72cbc0
                burn_block_height: 16
                stable_pox_consensus: 8e0561978fc5506b68a589c402dad97e862edb59
                stable_burn_block_height: 15
                server_version: "blockstack-core 0.0.1 => 23.0.0.0 (, release build,\
                  \ linux [x86_64])"
                network_id: 2147483648
                parent_network_id: 3669344250
                stacks_tip_height: 15
                stacks_tip: b1807a2d3f7f8c7922f7c1d60d7c34145ade05d789640dc7dc9ec1021e07bb54
                stacks_tip_consensus_hash: 17f76e597bab45646956f38dd39573085d72cbc0
                unanchored_tip: "0000000000000000000000000000000000000000000000000000000000000000"
                exit_at_block_height: null
              schema:
                $ref: '#/components/schemas/CoreNodeInfoResponse'
          description: Success
      summary: Get Core API info
      tags:
      - Info
  /extended/v1/status:
    get:
      description: "Retrieves the running status of the Stacks Blockchain API, including\
        \ the server version and current chain tip information."
      operationId: get_status
      responses:
        "200":
          content:
            application/json:
              example:
                server_version: stacks-blockchain-api v1.0.7 (master:77b25878)
                status: ready
                chain_tip:
                  block_height: 48902
                  block_hash: 0xa5a2923c405f8356925213bb8c479beb06d3b68ca66dd2b7397b54f8c08c5eac
                  index_block_hash: 0xf46401bf3cb6a6b6181536b7de414a1fd9e004a6ece99a05de72a781b17f9819
                  microblock_hash: 0xec89a572d3583b959e490bc45e0f521b775ed51d7ed13087b6df8eb82cbe75d3
                  microblock_sequence: 0
              schema:
                $ref: '#/components/schemas/ServerStatusResponse'
          description: Success
      summary: API status
      tags:
      - Info
  /extended/v1/info/network_block_times:
    get:
      description: Retrieves the target block times for mainnet and testnet. The block
        time is hardcoded and will change throughout the implementation phases of
        the testnet.
      operationId: get_network_block_times
      responses:
        "200":
          content:
            application/json:
              example:
                testnet:
                  target_block_time: 120
                mainnet:
                  target_block_time: 600
              schema:
                $ref: '#/components/schemas/NetworkBlockTimesResponse'
          description: Success
      summary: Get the network target block time
      tags:
      - Info
  /extended/v1/info/network_block_time/{network}:
    get:
      description: Retrieves the target block time for a given network. The network
        can be mainnet or testnet. The block time is hardcoded and will change throughout
        the implementation phases of the testnet.
      operationId: get_network_block_time_by_network
      parameters:
      - description: Which network to retrieve the target block time of
        explode: false
        in: path
        name: network
        required: true
        schema:
          enum:
          - testnet
          - mainnet
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                target_block_time: 600
              schema:
                $ref: '#/components/schemas/NetworkBlockTimeResponse'
          description: Success
      summary: Get a given network's target block time
      tags:
      - Info
  /extended/v1/stx_supply:
    get:
      description: "Retrieves the total and unlocked STX supply. More information\
        \ on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking)."
      operationId: get_stx_supply
      parameters:
      - description: "The block height at which to query supply details from, if not\
          \ provided then the latest block height is used"
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                unlocked_percent: "71.99"
                total_stx: "1352464600.000000"
                unlocked_stx: "973705260.219817"
                block_height: 3210
              schema:
                $ref: '#/components/schemas/GetStxSupplyResponse'
          description: Success
      summary: Get total and unlocked STX supply
      tags:
      - Info
  /extended/v1/stx_supply/total/plain:
    get:
      description: Retrieves the total supply for STX tokens as plain text.
      operationId: get_stx_supply_total_supply_plain
      responses:
        "200":
          content:
            text/plain:
              example: "123.456789"
              schema:
                description: GET request that returns network target block times
                title: GetStxTotalSupplyPlainResponse
                type: string
          description: success
      summary: Get total STX supply in plain text format
      tags:
      - Info
  /extended/v1/stx_supply/circulating/plain:
    get:
      description: Retrieves the STX tokens currently in circulation that have been
        unlocked as plain text.
      operationId: get_stx_supply_circulating_plain
      responses:
        "200":
          content:
            text/plain:
              example: "123.456789"
              schema:
                description: GET request that returns network target block times
                title: GetStxCirculatingSupplyPlainResponse
                type: string
          description: success
      summary: Get circulating STX supply in plain text format
      tags:
      - Info
  /extended/v1/stx_supply/legacy_format:
    get:
      description: Retrieves total supply of STX tokens including those currently
        in circulation that have been unlocked.
      operationId: get_total_stx_supply_legacy_format
      parameters:
      - description: "The block height at which to query supply details from, if not\
          \ provided then the latest block height is used"
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                unlockedPercent: "71.99"
                totalStacks: "1352464600.000000"
                totalStacksFormatted: "1,352,464,600.000000"
                unlockedSupply: "973705260.219817"
                unlockedSupplyFormatted: "973,705,260.219817"
                blockHeight: "665746"
              schema:
                $ref: '#/components/schemas/GetStxSupplyLegacyFormatResponse'
          description: Success
      summary: Get total and unlocked STX supply (results formatted the same as the
        legacy 1.0 API)
      tags:
      - Info
  /v2/pox:
    get:
      description: Retrieves Proof-of-Transfer (PoX) information. Can be used for
        Stacking.
      operationId: get_pox_info
      responses:
        "200":
          content:
            application/json:
              example:
                contract_id: ST000000000000000000002AMW42H.pox
                first_burnchain_block_height: 0
                min_amount_ustx: 150000000000
                registration_window_length: 250
                rejection_fraction: 25
                reward_cycle_id: 0
                reward_cycle_length: 1000
                rejection_votes_left_required: 1000
                total_liquid_supply_ustx: 1000000000
              schema:
                $ref: '#/components/schemas/CoreNodePoxResponse'
          description: Success
      summary: Get Proof-of-Transfer details
      tags:
      - Info
  /extended/v1/search/{id}:
    get:
      description: "Search blocks, transactions, contracts, or accounts by hash/ID"
      operationId: search_by_id
      parameters:
      - description: "The hex hash string for a block or transaction, account address,\
          \ or contract address"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: This includes the detailed data for purticular hash in the response
        explode: true
        in: query
        name: include_metadata
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                found: true
                result:
                  entity_id: ST2P7B9G6Y55QWZJ9B93DVSEG5S6Z4PFJHB3XRKHW.hello_world
                  entity_type: contract_address
                  tx_data:
                    canonical: true
                    block_hash: 0xb076fd3983e63bbf28ae615daa31c5b6084d23ceeb920c54f1ea666244415457
                    burn_block_time: 1595229199
                    block_height: 648
                    tx_type: smart_contract
              schema:
                $ref: '#/components/schemas/SearchResult'
          description: Success
        "404":
          content:
            application/json:
              example:
                found: false
                result:
                  entity_type: unknown_hash
                error: No block or transaction found with hash "0xabc123"
          description: Not found
      summary: Search
      tags:
      - Search
  /rosetta/v1/network/list:
    post:
      description: Retrieves a list of NetworkIdentifiers that the Rosetta server
        supports.
      operationId: rosetta_network_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaNetworkListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get List of Available Networks
      tags:
      - Rosetta
  /rosetta/v1/network/options:
    post:
      description: "Retrieves the version information and allowed network-specific\
        \ types for a NetworkIdentifier.\nAny NetworkIdentifier returned by /network/list\
        \ should be accessible here.\nBecause options are retrievable in the context\
        \ of a NetworkIdentifier, it is possible to define unique options for each\
        \ network.\n"
      operationId: rosetta_network_options
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaOptionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaNetworkOptionsResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Network Options
      tags:
      - Rosetta
  /rosetta/v1/network/status:
    post:
      description: |
        Retrieves the current status of the network requested.
        Any NetworkIdentifier returned by /network/list should be accessible here.
      operationId: rosetta_network_status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaNetworkStatusResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Network Status
      tags:
      - Rosetta
  /rosetta/v1/account/balance:
    post:
      description: "An AccountBalanceRequest is utilized to make a balance request\
        \ on the /account/balance endpoint.\nIf the block_identifier is populated,\
        \ a historical balance query should be performed.\n"
      operationId: rosetta_account_balance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaAccountBalanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaAccountBalanceResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get an Account Balance
      tags:
      - Rosetta
  /rosetta/v1/block:
    post:
      description: Retrieves the Block information for a given block identifier including
        a list of all transactions in the block.
      operationId: rosetta_block
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaBlockRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaBlockResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaError'
          description: Error
      summary: Get a Block
      tags:
      - Rosetta
  /rosetta/v1/block/transaction:
    post:
      description: Retrieves a Transaction included in a block that is not returned
        in a BlockResponse.
      operationId: rosetta_block_transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaBlockTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaBlockTransactionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get a Block Transaction
      tags:
      - Rosetta
  /rosetta/v1/mempool:
    post:
      description: Retrieves a list of transcations currently in the mempool for a
        given network.
      operationId: rosetta_mempool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaMempoolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaMempoolResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get All Mempool Transactions
      tags:
      - Rosetta
  /rosetta/v1/mempool/transaction:
    post:
      description: Retrieves transaction details from the mempool for a given transaction
        id from a given network.
      operationId: rosetta_mempool_transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaMempoolTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaMempoolTransactionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get a Mempool Transaction
      tags:
      - Rosetta
  /rosetta/v1/construction/derive:
    post:
      description: Retrieves the Account Identifier information based on a Public
        Key for a given network
      operationId: rosetta_construction_derive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionDeriveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaConstructionDeriveResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Derive an AccountIdentifier from a PublicKey
      tags:
      - Rosetta
  /rosetta/v1/construction/hash:
    post:
      description: Retrieves the network-specific transaction hash for a signed transaction.
      operationId: rosetta_construction_hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionHashRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaConstructionHashResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get the Hash of a Signed Transaction
      tags:
      - Rosetta
  /rosetta/v1/construction/metadata:
    post:
      description: To Do
      operationId: rosetta_construction_metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionMetadataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaConstructionMetadataResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Metadata for Transaction Construction
      tags:
      - Rosetta
  /rosetta/v1/construction/parse:
    post:
      description: TODO
      operationId: rosetta_construction_parse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionParseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaConstructionParseResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Parse a Transaction
      tags:
      - Rosetta
  /rosetta/v1/construction/preprocess:
    post:
      description: TODO
      operationId: rosetta_construction_preprocess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionPreprocessRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                options:
                  sender_address: STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6
                  type: stack_stx
                  number_of_cycles: 5
                  amount: "5000"
                  symbol: STX
                  decimals: 6
                  pox_addr: 1Xik14zRm29UsyS6DjhYg4iZeZqsDa8D3
                  suggested_fee_multiplier: 1
                  max_fee: "12380898"
                  size: 260
                  memo: SAMPLE MEMO
                required_public_keys:
                - address: STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6
              schema:
                $ref: '#/components/schemas/RosettaConstructionPreprocessResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Create a Request to Fetch Metadata
      tags:
      - Rosetta
  /rosetta/v1/construction/submit:
    post:
      description: Submit a pre-signed transaction to the node.
      operationId: rosetta_construction_submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionSubmitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaConstructionSubmitResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Submit a Signed Transaction
      tags:
      - Rosetta
  /rosetta/v1/construction/payloads:
    post:
      description: Generate and unsigned transaction from operations and metadata
      operationId: rosetta_construction_payloads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionPayloadsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaConstructionPayloadResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Generate an Unsigned Transaction and Signing Payloads
      tags:
      - Rosetta
  /rosetta/v1/construction/combine:
    post:
      description: "Take unsigned transaction and signature, combine both and return\
        \ signed transaction"
      operationId: rosetta_construction_combine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RosettaConstructionCombineRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosettaConstructionCombineResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rosetta~1v1~1block/post/responses/400/content/application~1json/schema'
          description: Error
      summary: Create Network Transaction from Signatures
      tags:
      - Rosetta
  /v2/prices/namespaces/{tld}:
    get:
      description: Retrieves the price of a namespace. The `amount` given will be
        in the smallest possible units of the currency.
      operationId: get_namespace_price
      parameters:
      - description: the namespace to fetch price for
        example: id
        explode: false
        in: path
        name: tld
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                units: STX
                amount: "4000000000"
              schema:
                $ref: '#/components/schemas/BnsGetNamespacePriceResponse'
          description: Success
      summary: Get Namespace Price
      tags:
      - Names
  /v2/prices/names/{name}:
    get:
      description: Retrieves the price of a name. The `amount` given will be in the
        smallest possible units of the currency.
      operationId: get_name_price
      parameters:
      - description: the name to query price information for
        example: muneeb.id
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                name_price:
                  units: STX
                  amount: "100000"
              schema:
                $ref: '#/components/schemas/BnsGetNamePriceResponse'
          description: Success
      summary: Get Name Price
      tags:
      - Names
  /v1/namespaces:
    get:
      description: Retrieves a list of all namespaces known to the node.
      operationId: get_all_namespaces
      responses:
        "200":
          content:
            application/json:
              example:
                namespaces:
                - id
                - helloworld
                - podcast
                - graphite
                - blockstack
              schema:
                $ref: '#/components/schemas/BnsGetAllNamespacesResponse'
          description: Success
      summary: Get All Namespaces
      tags:
      - Names
  /v1/namespaces/{tld}/names:
    get:
      description: Retrieves a list of names within a given namespace.
      operationId: get_namespace_names
      parameters:
      - description: the namespace to fetch names from
        example: id
        explode: false
        in: path
        name: tld
        required: true
        schema:
          type: string
        style: simple
      - description: "names are returned in pages of size 100, so specify the page\
          \ number."
        example: 23
        explode: true
        in: query
        name: page
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - aldenquimby.id
              - aldeoryn.id
              - alderete.id
              - aldert.id
              - aldi.id
              - aldighieri.id
              schema:
                description: Fetch a list of names from the namespace.
                items:
                  pattern: "^([a-z0-9-_.+]{3,37})$"
                  type: string
                title: BnsGetAllNamespacesNamesResponse
                type: array
          description: Success
        "400":
          content:
            application/json:
              example:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/example'
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
        "404":
          content:
            application/json:
              example:
                error: No such namespace
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Namespace Names
      tags:
      - Names
  /v1/names:
    get:
      description: Retrieves a list of all names known to the node.
      operationId: get_all_names
      parameters:
      - description: "names are returned in pages of size 100, so specify the page\
          \ number."
        example: 23
        explode: true
        in: query
        name: page
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - aldenquimby.id
              - aldeoryn.id
              - alderete.id
              - aldert.id
              - aldi.id
              - aldighieri.id
              schema:
                description: Fetch a list of all names known to the node.
                items:
                  pattern: "^([a-z0-9\\-_.+]{3,37})$"
                  type: string
                title: BnsGetAllNamesResponse
                type: array
          description: Success
        "400":
          content:
            application/json:
              example:
                error: Invalid page
              schema:
                $ref: '#/components/schemas/BnsError'
          description: Error
      summary: Get All Names
      tags:
      - Names
  /v1/names/{name}:
    get:
      description: "Retrieves details of a given name including the `address`, `status`\
        \ and last transaction id - `last_txid`."
      operationId: get_name_info
      parameters:
      - description: fully-qualified name
        example: muneeb.id
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                address: 1J3PUxY5uDShUnHRrMyU6yKtoHEUPhKULs
                blockchain: bitcoin
                expire_block: 599266
                grace_period: false
                last_txid: 1edfa419f7b83f33e00830bc9409210da6c6d1db60f99eda10c835aa339cad6b
                renewal_deadline: 604266
                resolver: null
                status: registered
                zonefile: |
                  $ORIGIN muneeb.id
                  $TTL 3600
                  _http._tcp IN URI 10 1 "https://gaia.blockstack.org/hub/1J3PUxY5uDShUnHRrMyU6yKtoHEUPhKULs/0/profile.json"
                zonefile_hash: 37aecf837c6ae9bdc9dbd98a268f263dacd00361
              schema:
                $ref: '#/components/schemas/BnsGetNameInfoResponse'
          description: Success
        "400":
          content:
            application/json:
              example:
                error: Invalid name or subdomain
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
        "404":
          content:
            application/json:
              example:
                error: No such name
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Name Details
      tags:
      - Names
  /v1/names/{name}/subdomains:
    get:
      description: Retrieves the list of subdomains for a specific name
      operationId: fetch_subdomains_list_for_name
      parameters:
      - description: fully-qualified name
        example: id.blockstack
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - address_test.id.blockstack
              - previous_subdomain.id.blockstack
              - subdomain.id.blockstack
              - zonefile_test.id.blockstack
              - zone_test.id.blockstack
              schema:
                description: Fetch a list of subdomains in a name.
                items:
                  pattern: "^([a-z0-9-_.+]{3,37})$"
                  type: string
                title: GetAllSubdomainsInName
                type: array
          description: Success
      summary: Get Name Subdomains
      tags:
      - Names
  /v1/names/{name}/zonefile:
    get:
      description: Retrieves a user’s raw zone file. This only works for RFC-compliant
        zone files. This method returns an error for names that have non-standard
        zone files.
      operationId: fetch_zone_file
      parameters:
      - description: fully-qualified name
        example: bar.test
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                zonefile: |
                  $ORIGIN bar.test
                  $TTL 3600
                  _https._tcp URI 10 1 "https://gaia.blockstack.org/hub/17Zijx61Sp7SbVfRTdETo7PhizJHYEUxbY/profile.json"
              schema:
                $ref: '#/components/schemas/BnsFetchFileZoneResponse'
          description: Success
        "400":
          content:
            application/json:
              example:
                $ref: '#/paths/~1v1~1names~1%7Bname%7D/get/responses/400/content/application~1json/example'
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
        "404":
          content:
            application/json:
              example:
                error: No zone file for name
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Zone File
      tags:
      - Names
  /v1/names/{name}/zonefile/{zoneFileHash}:
    get:
      description: Retrieves the historical zonefile specified by the username and
        zone hash.
      operationId: get_historical_zone_file
      parameters:
      - description: fully-qualified name
        example: muneeb.id
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: zone file hash
        example: b100a68235244b012854a95f9114695679002af9
        explode: false
        in: path
        name: zoneFileHash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                title: BnsFetchHistoricalZoneFileResponse
                description: Fetches the historical zonefile specified by the username
                  and zone hash.
                anyOf:
                - type: object
                  properties:
                    zonefile:
                      type: string
                - type: object
                  properties:
                    error:
                      type: string
              schema:
                $ref: '#/components/schemas/BnsFetchHistoricalZoneFileResponse'
          description: Success
        "400":
          content:
            application/json:
              example:
                $ref: '#/paths/~1v1~1names~1%7Bname%7D/get/responses/400/content/application~1json/example'
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
        "404":
          content:
            application/json:
              example:
                $ref: '#/paths/~1v1~1names~1%7Bname%7D~1zonefile/get/responses/404/content/application~1json/example'
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Historical Zone File
      tags:
      - Names
  /v1/addresses/{blockchain}/{address}:
    get:
      description: Retrieves a list of names owned by the address provided.
      operationId: get_names_owned_by_address
      parameters:
      - description: the layer-1 blockchain for the address
        example: bitcoin
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          type: string
        style: simple
      - description: the address to lookup
        example: 1QJQxDas5JhdiXhEbNS14iNjr8auFT96GP
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                names:
                - muneeb.id
              schema:
                $ref: '#/components/schemas/BnsNamesOwnByAddressResponse'
          description: Success
        "404":
          content:
            application/json:
              example:
                error: Unsupported blockchain
              schema:
                $ref: '#/paths/~1v1~1names/get/responses/400/content/application~1json/schema'
          description: Error
      summary: Get Names Owned by Address
      tags:
      - Names
  /extended/v1/tx/block/{block_hash}:
    get:
      description: Retrieves a list of all transactions within a block for a given
        block hash.
      operationId: get_transactions_by_block_hash
      parameters:
      - description: Hash of block
        explode: false
        in: path
        name: block_hash
        required: true
        schema:
          type: string
        style: simple
      - description: max number of transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema'
          description: List of Transactions
      summary: Transactions by block hash
      tags:
      - Transactions
  /extended/v1/tx/block_height/{height}:
    get:
      description: Retrieves all transactions within a block at a given height
      operationId: get_transactions_by_block_height
      parameters:
      - description: Height of block
        explode: false
        in: path
        name: height
        required: true
        schema:
          type: integer
        style: simple
      - description: max number of transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema'
          description: List of Transactions
      summary: Transactions by block height
      tags:
      - Transactions
  /extended/v1/address/{address}/mempool:
    get:
      description: Retrieves all transactions for a given address that are currently
        in mempool
      operationId: get_address_mempool_transactions
      parameters:
      - description: Transactions for the address
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: max number of transactions to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first transaction to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Include transaction data from unanchored (i.e. unconfirmed) microblocks
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/example'
              schema:
                $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema'
          description: List of Transactions
      summary: Transactions for address
      tags:
      - Transactions
  /extended/v1/tokens/ft/metadata:
    get:
      description: "Retrieves list of fungible tokens with their metadata. More information\
        \ on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens)."
      operationId: get_ft_metadata_list
      parameters:
      - description: max number of tokens to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first tokens to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 1
                offset: 0
                total: 500
                results:
                - token_uri: https://heystack.xyz/token-metadata.json
                  name: Heystack
                  description: "Heystack is a SIP-010-compliant fungible token on\
                    \ the Stacks Blockchain, used on the Heystack app"
                  image_uri: https://heystack.xyz/assets/Stacks128w.png
                  image_canonical_uri: https://heystack.xyz/assets/Stacks128w.png
                  tx_id: 0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0
                  sender_address: ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA
                  symbol: HEY
                  decimals: 5
              schema:
                $ref: '#/components/schemas/FungibleTokensMetadataList'
          description: List of fungible tokens metadata
      summary: Fungible tokens metadata list
      tags:
      - Fungible Tokens
  /extended/v1/tokens/nft/holdings:
    get:
      description: "Retrieves the list of Non-Fungible Tokens owned by the given principal\
        \ (STX address or Smart Contract ID).\nResults can be filtered by one or more\
        \ asset identifiers and can include metadata about the transaction that made\
        \ the principal own each token.\n\nMore information on Non-Fungible Tokens\
        \ on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n"
      operationId: get_nft_holdings
      parameters:
      - description: token owner's STX address or Smart Contract ID
        example: SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v3
        explode: true
        in: query
        name: principal
        required: true
        schema:
          type: string
        style: form
      - description: identifiers of the token asset classes to filter for
        example: SPQZF23W7SEYBFG5JQ496NMY0G7379SRYEDREMSV.Candy::candy
        explode: true
        in: query
        name: asset_identifiers
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: max number of tokens to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          type: integer
        style: form
      - description: index of first tokens to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: whether or not to include tokens from unconfirmed transactions
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: whether or not to include the complete transaction metadata instead
          of just `tx_id`. Enabling this option can affect performance and response
          times.
        explode: true
        in: query
        name: tx_metadata
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  value:
                    limit: 50
                    offset: 0
                    total: 3
                    results:
                    - asset_identifier: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild
                      value:
                        hex: 0x0100000000000000000000000000000803
                        repr: u2051
                      block_height: 36442
                      tx_id: 0x12e6f88724d0e630de26c376f172cf1781e25435e2b4ee54d36a949b244e429c
                    - asset_identifier: SP2BE8TZATXEVPGZ8HAFZYE5GKZ02X0YDKAN7ZTGW.arties::arties
                      value:
                        hex: 0x01000000000000000000000000000004f3
                        repr: u1267
                      block_height: 37477
                      tx_id: 0xddc464c5e20a78dc5ac351913e0d9b9cce76fc955cc4599e0cccad960998f130
                    - asset_identifier: SP000000000000000000002Q6VF78.bns::names
                      value:
                        hex: 0x0c00000002046e616d65020000000672616661656c096e616d6573706163650200000003627463
                        repr: (tuple (name 0x72616661656c) (namespace 0x627463))
                      block_height: 17250
                      tx_id: 0x0153a41ed24a0e1d32f66ea98338df09f942571ca66359e28bdca79ccd0305cf
                with transaction metadata:
                  value:
                    limit: 50
                    offset: 0
                    total: 3
                    results:
                    - asset_identifier: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild
                      value:
                        hex: 0x0100000000000000000000000000000803
                        repr: u2051
                      block_height: 36442
                      tx:
                        tx_id: 0x12e6f88724d0e630de26c376f172cf1781e25435e2b4ee54d36a949b244e429c
                        nonce: 7
                        fee_rate: "812000"
                        sender_address: SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_equal_to
                          amount: "100000000"
                          principal:
                            type_id: principal_standard
                            address: SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0x8a809916e35577337c3f9812a57d61666fde63932b1bdd1c4d1e2f24fb72d46c
                        parent_block_hash: 0xacf8dd56e08bd7986a5bae5e0f13d8dca8cb3a2dc5a1c4d739fda3b3b378b01d
                        block_height: 36442
                        burn_block_time: 1635994340
                        burn_block_time_iso: 2021-11-04T02:52:20.000Z
                        parent_burn_block_time: 1635994054
                        parent_burn_block_time_iso: 2021-11-04T02:47:34.000Z
                        canonical: true
                        tx_index: 4
                        tx_status: success
                        tx_result:
                          hex: 0x070100000000000000000000000000000803
                          repr: (ok u2051)
                        microblock_hash: ""
                        microblock_sequence: 2147483647
                        microblock_canonical: true
                        event_count: 2
                        events: []
                        execution_cost_read_count: 14
                        execution_cost_read_length: 91190
                        execution_cost_runtime: 92297000
                        execution_cost_write_count: 3
                        execution_cost_write_length: 19
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint
                          function_name: claim
                          function_signature: (define-public (claim ))
                    - asset_identifier: SP2BE8TZATXEVPGZ8HAFZYE5GKZ02X0YDKAN7ZTGW.arties::arties
                      value:
                        hex: 0x01000000000000000000000000000004f3
                        repr: u1267
                      block_height: 37477
                      tx:
                        tx_id: 0xddc464c5e20a78dc5ac351913e0d9b9cce76fc955cc4599e0cccad960998f130
                        nonce: 10
                        fee_rate: "148800"
                        sender_address: SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_less_than_or_equal_to
                          amount: "98000000"
                          principal:
                            type_id: principal_standard
                            address: SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0xe69b275471bd199f957d82af1c36114695dbc9aa350e012c6326af4d9e4f3e9c
                        parent_block_hash: 0xe3f50b1c2ef72d44ee5ab84063f49b5662062a62160c783c1c2cc5ca424dcdeb
                        block_height: 37477
                        burn_block_time: 1636668151
                        burn_block_time_iso: 2021-11-11T22:02:31.000Z
                        parent_burn_block_time: 1636666649
                        parent_burn_block_time_iso: 2021-11-11T21:37:29.000Z
                        canonical: true
                        tx_index: 38
                        tx_status: success
                        tx_result:
                          hex: 0x0703
                          repr: (ok true)
                        microblock_hash: 0x92cb7e692a486210dc50a380e458cdf93c77d90b69d2a9cf29f09383b8b77937
                        microblock_sequence: 0
                        microblock_canonical: true
                        event_count: 5
                        events: []
                        execution_cost_read_count: 18
                        execution_cost_read_length: 6832
                        execution_cost_runtime: 8339000
                        execution_cost_write_count: 6
                        execution_cost_write_length: 22
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2BE8TZATXEVPGZ8HAFZYE5GKZ02X0YDKAN7ZTGW.arties
                          function_name: claim
                          function_signature: (define-public (claim ))
                    - asset_identifier: SP000000000000000000002Q6VF78.bns::names
                      value:
                        hex: 0x0c00000002046e616d65020000000672616661656c096e616d6573706163650200000003627463
                        repr: (tuple (name 0x72616661656c) (namespace 0x627463))
                      block_height: 17250
                      tx:
                        tx_id: 0x0153a41ed24a0e1d32f66ea98338df09f942571ca66359e28bdca79ccd0305cf
                        nonce: 4
                        fee_rate: "228"
                        sender_address: SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions: []
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0xb0a0832ece862e9b0d4a02e5f5ef427b09e9880fd3c834fcf63cb2617eac899c
                        parent_block_hash: 0xc3a3a6866cd8bd01b80f28d158eb14e0bd6e11d4b3de2f13f15c5c5b3721c4f0
                        block_height: 17250
                        burn_block_time: 1622650415
                        burn_block_time_iso: 2021-06-02T16:13:35.000Z
                        parent_burn_block_time: 1622649808
                        parent_burn_block_time_iso: 2021-06-02T16:03:28.000Z
                        canonical: true
                        tx_index: 74
                        tx_status: success
                        tx_result:
                          hex: 0x0703
                          repr: (ok true)
                        microblock_hash: ""
                        microblock_sequence: 2147483647
                        microblock_canonical: true
                        event_count: 2
                        events: []
                        execution_cost_read_count: 17
                        execution_cost_read_length: 44630
                        execution_cost_runtime: 56773000
                        execution_cost_write_count: 4
                        execution_cost_write_length: 604
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP000000000000000000002Q6VF78.bns
                          function_name: name-register
                          function_signature: (define-public (name-register (namespace
                            (buff 20)) (name (buff 48)) (salt (buff 20)) (zonefile-hash
                            (buff 20))))
                          function_args:
                          - hex: 0x0200000003627463
                            repr: 0x627463
                            name: namespace
                            type: (buff 20)
                          - hex: 0x020000000672616661656c
                            repr: 0x72616661656c
                            name: name
                            type: (buff 48)
                          - hex: 0x020000001419db1f02d2b7ac9cddc8f98b6065d3fad558dcf4
                            repr: 0x19db1f02d2b7ac9cddc8f98b6065d3fad558dcf4
                            name: salt
                            type: (buff 20)
                          - hex: 0x0200000014ab4ef66dae18da2ecfe7826bc7d8eaf0b19950c4
                            repr: 0xab4ef66dae18da2ecfe7826bc7d8eaf0b19950c4
                            name: zonefile-hash
                            type: (buff 20)
              schema:
                $ref: '#/components/schemas/NonFungibleTokenHoldingsList'
          description: List of Non-Fungible Token holdings
      summary: Non-Fungible Token holdings
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/nft/history:
    get:
      description: "Retrieves all events relevant to a Non-Fungible Token. Useful\
        \ to determine the ownership history of a particular asset.\n\nMore information\
        \ on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n"
      operationId: get_nft_history
      parameters:
      - description: token asset class identifier
        example: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild
        explode: true
        in: query
        name: asset_identifier
        required: true
        schema:
          type: string
        style: form
      - description: hex representation of the token's unique value
        example: 0x0100000000000000000000000000000803
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      - description: max number of events to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          type: integer
        style: form
      - description: index of first event to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: whether or not to include events from unconfirmed transactions
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: whether or not to include the complete transaction metadata instead
          of just `tx_id`. Enabling this option can affect performance and response
          times.
        explode: true
        in: query
        name: tx_metadata
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  value:
                    limit: 50
                    offset: 0
                    total: 2
                    results:
                    - sender: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                      recipient: SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v4
                      event_index: 0
                      asset_event_type: transfer
                      tx_id: 0x4510e6cff6414747f402126b92e35d90165f9f5e1f2750f50ed2b8e052b25108
                    - sender: null
                      recipient: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                      event_index: 1
                      asset_event_type: mint
                      tx_id: 0x3ab1ac33ba0a4fb473ee5a2e9d73208a7aceef2d40fea283e3126bda61524ad0
                with transaction metadata:
                  value:
                    limit: 50
                    offset: 0
                    results:
                    - sender: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                      recipient: SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v4
                      event_index: 0
                      asset_event_type: transfer
                      tx:
                        tx_id: 0x4510e6cff6414747f402126b92e35d90165f9f5e1f2750f50ed2b8e052b25108
                        nonce: 44
                        fee_rate: "143600"
                        sender_address: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: non_fungible
                          condition_code: sent
                          principal:
                            type_id: principal_standard
                            address: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                          asset:
                            contract_name: the-explorer-guild
                            asset_name: The-Explorer-Guild
                            contract_address: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173
                          asset_value:
                            hex: 0x01000000000000000000000000000009c5
                            repr: u2501
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0x236721170b99d5dc0be2e77b5f5e0394ffe49af7862c3e82b91245b50e28d191
                        parent_block_hash: 0xdf9e6a371ef6706ed9e5362f61981d3e9e1b985acb67495490bacc40391d7372
                        block_height: 37482
                        burn_block_time: 1636673415
                        burn_block_time_iso: 2021-11-11T23:30:15.000Z
                        parent_burn_block_time: 1636672174
                        parent_burn_block_time_iso: 2021-11-11T23:09:34.000Z
                        canonical: true
                        tx_index: 35
                        tx_status: success
                        tx_result:
                          hex: 0x0703
                          repr: (ok true)
                        microblock_hash: ""
                        microblock_sequence: 2147483647
                        microblock_canonical: true
                        event_count: 1
                        events: []
                        execution_cost_read_count: 17
                        execution_cost_read_length: 50450
                        execution_cost_runtime: 54533000
                        execution_cost_write_count: 2
                        execution_cost_write_length: 685
                        tx_type: contract_call
                        contract_call:
                          contract_id: SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v4
                          function_name: list-asset
                          function_signature: (define-public (list-asset (tradables
                            trait_reference) (tradable-id uint) (price uint) (commission
                            uint)))
                          function_args:
                          - hex: 0x061605d06be54b4b9fa14cb9bd464635c0bf5287e313127468652d6578706c6f7265722d6775696c64
                            repr: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild
                            name: tradables
                            type: trait_reference
                          - hex: 0x01000000000000000000000000000009c5
                            repr: u2501
                            name: tradable-id
                            type: uint
                          - hex: 0x0100000000000000000000000005f5e100
                            repr: u100000000
                            name: price
                            type: uint
                          - hex: 0x0100000000000000000000000000000064
                            repr: u100
                            name: commission
                            type: uint
                    - sender: null
                      recipient: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                      event_index: 1
                      asset_event_type: mint
                      tx:
                        tx_id: 0x3ab1ac33ba0a4fb473ee5a2e9d73208a7aceef2d40fea283e3126bda61524ad0
                        nonce: 37
                        fee_rate: "81200"
                        sender_address: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_equal_to
                          amount: "100000000"
                          principal:
                            type_id: principal_standard
                            address: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0xe90233fb36b6a932de91af1b030723ca71335eed7b0792f2c382a827beb5c2f3
                        parent_block_hash: 0x3c5657455ed593f16b85619814b10e32040dd13d263f1a423ba04a2c234f8ee9
                        block_height: 36776
                        burn_block_time: 1636211530
                        burn_block_time_iso: 2021-11-06T15:12:10.000Z
                        parent_burn_block_time: 1636211109
                        parent_burn_block_time_iso: 2021-11-06T15:05:09.000Z
                        canonical: true
                        tx_index: 15
                        tx_status: success
                        tx_result:
                          hex: 0x0701000000000000000000000000000009c5
                          repr: (ok u2501)
                        microblock_hash: ""
                        microblock_sequence: 2147483647
                        microblock_canonical: true
                        event_count: 2
                        events: []
                        execution_cost_read_count: 14
                        execution_cost_read_length: 91190
                        execution_cost_runtime: 92297000
                        execution_cost_write_count: 3
                        execution_cost_write_length: 19
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint
                          function_name: claim
                          function_signature: (define-public (claim ))
              schema:
                $ref: '#/components/schemas/NonFungibleTokenHistoryEventList'
          description: Non-Fungible Token event history
      summary: Non-Fungible Token history
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/nft/mints:
    get:
      description: "Retrieves all mint events for a Non-Fungible Token asset class.\
        \ Useful to determine which NFTs of a particular collection have been claimed.\n\
        \nMore information on Non-Fungible Tokens on the Stacks blockchain can be\
        \ found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n"
      operationId: get_nft_mints
      parameters:
      - description: token asset class identifier
        example: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild
        explode: true
        in: query
        name: asset_identifier
        required: true
        schema:
          type: string
        style: form
      - description: max number of events to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          type: integer
        style: form
      - description: index of first event to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: whether or not to include events from unconfirmed transactions
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: whether or not to include the complete transaction metadata instead
          of just `tx_id`. Enabling this option can affect performance and response
          times.
        explode: true
        in: query
        name: tx_metadata
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  value:
                    limit: 5
                    offset: 0
                    total: 2503
                    results:
                    - recipient: SP25KJH4N4YNKTVXSWSHDPVCWDFAN2BA4H2VQVN0G
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009c7
                        repr: u2503
                      tx_id: 0xd5c199447bc5f08d1821350455f4c103ad769976c7a6b745182782d53b5c7922
                    - recipient: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009c5
                        repr: u2501
                      tx_id: 0x3ab1ac33ba0a4fb473ee5a2e9d73208a7aceef2d40fea283e3126bda61524ad0
                    - recipient: SPYZ2K1ZTG8NGKNY8VCX8NDKCGCCE9WZT85AGQR
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009c6
                        repr: u2502
                      tx_id: 0xaaff669db77380600b069fbd3ba481e5764e3672246f952bdd976cd3528019e8
                    - recipient: SP2EV985DXEHEB2FKW3Z642R0QWQGXTRDYXNRVCYY
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009b6
                        repr: u2486
                      tx_id: 0xc416218ed09e2252888a620d89a5e8fdff43188c1c4ef46b6bbc4e1901609ef6
                    - recipient: SPP1VDQKF2H90QZVRBN0K6Z90EKES9NSMYKXHVGH
                      event_index: 9
                      value:
                        hex: 0x01000000000000000000000000000009bb
                        repr: u2491
                      tx_id: 0xbd272748e0d632f8122126f8b000fa0f84c96f464e6fb91b03bb8b9c5c12ed12
                with transaction metadata:
                  value:
                    limit: 5
                    offset: 0
                    total: 2503
                    results:
                    - recipient: SP25KJH4N4YNKTVXSWSHDPVCWDFAN2BA4H2VQVN0G
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009c7
                        repr: u2503
                      tx:
                        tx_id: 0xd5c199447bc5f08d1821350455f4c103ad769976c7a6b745182782d53b5c7922
                        nonce: 4
                        fee_rate: "81200"
                        sender_address: SP25KJH4N4YNKTVXSWSHDPVCWDFAN2BA4H2VQVN0G
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_equal_to
                          amount: "100000000"
                          principal:
                            type_id: principal_standard
                            address: SP25KJH4N4YNKTVXSWSHDPVCWDFAN2BA4H2VQVN0G
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0xde60b4b100b1828dc6383db869b1e051fe68ac3fb0a72fffaae1b18af3e3c675
                        parent_block_hash: 0xe90233fb36b6a932de91af1b030723ca71335eed7b0792f2c382a827beb5c2f3
                        block_height: 36777
                        burn_block_time: 1636213080
                        burn_block_time_iso: 2021-11-06T15:38:00.000Z
                        parent_burn_block_time: 1636211530
                        parent_burn_block_time_iso: 2021-11-06T15:12:10.000Z
                        canonical: true
                        tx_index: 11
                        tx_status: success
                        tx_result:
                          hex: 0x0701000000000000000000000000000009c7
                          repr: (ok u2503)
                        microblock_hash: ""
                        microblock_sequence: 2147483647
                        microblock_canonical: true
                        event_count: 2
                        events: []
                        execution_cost_read_count: 14
                        execution_cost_read_length: 91190
                        execution_cost_runtime: 92297000
                        execution_cost_write_count: 3
                        execution_cost_write_length: 19
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint
                          function_name: claim
                          function_signature: (define-public (claim ))
                    - recipient: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009c5
                        repr: u2501
                      tx:
                        tx_id: 0x3ab1ac33ba0a4fb473ee5a2e9d73208a7aceef2d40fea283e3126bda61524ad0
                        nonce: 37
                        fee_rate: "81200"
                        sender_address: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_equal_to
                          amount: "100000000"
                          principal:
                            type_id: principal_standard
                            address: SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0xe90233fb36b6a932de91af1b030723ca71335eed7b0792f2c382a827beb5c2f3
                        parent_block_hash: 0x3c5657455ed593f16b85619814b10e32040dd13d263f1a423ba04a2c234f8ee9
                        block_height: 36776
                        burn_block_time: 1636211530
                        burn_block_time_iso: 2021-11-06T15:12:10.000Z
                        parent_burn_block_time: 1636211109
                        parent_burn_block_time_iso: 2021-11-06T15:05:09.000Z
                        canonical: true
                        tx_index: 15
                        tx_status: success
                        tx_result:
                          hex: 0x0701000000000000000000000000000009c5
                          repr: (ok u2501)
                        microblock_hash: ""
                        microblock_sequence: 2147483647
                        microblock_canonical: true
                        event_count: 2
                        events: []
                        execution_cost_read_count: 14
                        execution_cost_read_length: 91190
                        execution_cost_runtime: 92297000
                        execution_cost_write_count: 3
                        execution_cost_write_length: 19
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint
                          function_name: claim
                          function_signature: (define-public (claim ))
                    - recipient: SPYZ2K1ZTG8NGKNY8VCX8NDKCGCCE9WZT85AGQR
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009c6
                        repr: u2502
                      tx:
                        tx_id: 0xaaff669db77380600b069fbd3ba481e5764e3672246f952bdd976cd3528019e8
                        nonce: 240
                        fee_rate: "81200"
                        sender_address: SPYZ2K1ZTG8NGKNY8VCX8NDKCGCCE9WZT85AGQR
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_equal_to
                          amount: "100000000"
                          principal:
                            type_id: principal_standard
                            address: SPYZ2K1ZTG8NGKNY8VCX8NDKCGCCE9WZT85AGQR
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0xe90233fb36b6a932de91af1b030723ca71335eed7b0792f2c382a827beb5c2f3
                        parent_block_hash: 0x3c5657455ed593f16b85619814b10e32040dd13d263f1a423ba04a2c234f8ee9
                        block_height: 36776
                        burn_block_time: 1636211530
                        burn_block_time_iso: 2021-11-06T15:12:10.000Z
                        parent_burn_block_time: 1636211109
                        parent_burn_block_time_iso: 2021-11-06T15:05:09.000Z
                        canonical: true
                        tx_index: 16
                        tx_status: success
                        tx_result:
                          hex: 0x0701000000000000000000000000000009c6
                          repr: (ok u2502)
                        microblock_hash: ""
                        microblock_sequence: 2147483647
                        microblock_canonical: true
                        event_count: 2
                        events: []
                        execution_cost_read_count: 14
                        execution_cost_read_length: 91190
                        execution_cost_runtime: 92297000
                        execution_cost_write_count: 3
                        execution_cost_write_length: 19
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint
                          function_name: claim
                          function_signature: (define-public (claim ))
                    - recipient: SP2EV985DXEHEB2FKW3Z642R0QWQGXTRDYXNRVCYY
                      event_index: 1
                      value:
                        hex: 0x01000000000000000000000000000009b6
                        repr: u2486
                      tx:
                        tx_id: 0xc416218ed09e2252888a620d89a5e8fdff43188c1c4ef46b6bbc4e1901609ef6
                        nonce: 66
                        fee_rate: "1110000"
                        sender_address: SP2EV985DXEHEB2FKW3Z642R0QWQGXTRDYXNRVCYY
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_equal_to
                          amount: "100000000"
                          principal:
                            type_id: principal_standard
                            address: SP2EV985DXEHEB2FKW3Z642R0QWQGXTRDYXNRVCYY
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0x97d152c9de27295ebbecf1c5f89b8f693b868f0759ebaa848fe3ce773d7a6576
                        parent_block_hash: 0x93391aee7c5241a73dbe905f56856743ec14a0bb679c0dfd1f2bf31daa515e13
                        block_height: 36774
                        burn_block_time: 1636209852
                        burn_block_time_iso: 2021-11-06T14:44:12.000Z
                        parent_burn_block_time: 1636209581
                        parent_burn_block_time_iso: 2021-11-06T14:39:41.000Z
                        canonical: true
                        tx_index: 1
                        tx_status: success
                        tx_result:
                          hex: 0x0701000000000000000000000000000009b6
                          repr: (ok u2486)
                        microblock_hash: 0x7c1b380d2cea9c0966a66c35aa90c2ad047ea41aa8ab436d78fb780949140407
                        microblock_sequence: 0
                        microblock_canonical: true
                        event_count: 2
                        events: []
                        execution_cost_read_count: 14
                        execution_cost_read_length: 91190
                        execution_cost_runtime: 92297000
                        execution_cost_write_count: 3
                        execution_cost_write_length: 19
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint
                          function_name: claim
                          function_signature: (define-public (claim ))
                    - recipient: SPP1VDQKF2H90QZVRBN0K6Z90EKES9NSMYKXHVGH
                      event_index: 9
                      value:
                        hex: 0x01000000000000000000000000000009bb
                        repr: u2491
                      tx:
                        tx_id: 0xbd272748e0d632f8122126f8b000fa0f84c96f464e6fb91b03bb8b9c5c12ed12
                        nonce: 45
                        fee_rate: "166400"
                        sender_address: SPP1VDQKF2H90QZVRBN0K6Z90EKES9NSMYKXHVGH
                        sponsored: false
                        post_condition_mode: deny
                        post_conditions:
                        - type: stx
                          condition_code: sent_equal_to
                          amount: "500000000"
                          principal:
                            type_id: principal_standard
                            address: SPP1VDQKF2H90QZVRBN0K6Z90EKES9NSMYKXHVGH
                        anchor_mode: any
                        is_unanchored: false
                        block_hash: 0x97d152c9de27295ebbecf1c5f89b8f693b868f0759ebaa848fe3ce773d7a6576
                        parent_block_hash: 0x93391aee7c5241a73dbe905f56856743ec14a0bb679c0dfd1f2bf31daa515e13
                        block_height: 36774
                        burn_block_time: 1636209852
                        burn_block_time_iso: 2021-11-06T14:44:12.000Z
                        parent_burn_block_time: 1636209581
                        parent_burn_block_time_iso: 2021-11-06T14:39:41.000Z
                        canonical: true
                        tx_index: 12
                        tx_status: success
                        tx_result:
                          hex: 0x0703
                          repr: (ok true)
                        microblock_hash: 0x7c1b380d2cea9c0966a66c35aa90c2ad047ea41aa8ab436d78fb780949140407
                        microblock_sequence: 0
                        microblock_canonical: true
                        event_count: 10
                        events: []
                        execution_cost_read_count: 58
                        execution_cost_read_length: 139642
                        execution_cost_runtime: 145197000
                        execution_cost_write_count: 15
                        execution_cost_write_length: 95
                        tx_type: contract_call
                        contract_call:
                          contract_id: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint
                          function_name: claim-five
                          function_signature: (define-public (claim-five ))
              schema:
                $ref: '#/components/schemas/NonFungibleTokenMintList'
          description: Non-Fungible Token mints
      summary: Non-Fungible Token mints
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/nft/metadata:
    get:
      description: "Retrieves a list of non fungible tokens with their metadata. More\
        \ information on Non-Fungible Tokens on the Stacks blockchain can be found\
        \ [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts)."
      operationId: get_nft_metadata_list
      parameters:
      - description: max number of tokens to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: index of first tokens to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 1
                offset: 0
                total: 500
                results:
                - token_uri: https://pool.friedger.de/nft.json
                  name: Friedger Pool
                  description: Enjoying the stacking pool.
                  image_uri: https://pool.friedger.de/nft.webp
                  image_canonical_uri: https://pool.friedger.de/nft.webp
                  tx_id: 0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0
                  sender_address: ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA
              schema:
                $ref: '#/components/schemas/NonFungibleTokensMetadataList'
          description: List of non fungible tokens metadata
      summary: Non fungible tokens metadata list
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/{contractId}/nft/metadata:
    get:
      description: "Retrieves metadata for non fungible tokens for a given contract\
        \ id. More information on Non-Fungible Tokens on the Stacks blockchain can\
        \ be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts)."
      operationId: get_contract_nft_metadata
      parameters:
      - description: token's contract id
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                token_uri: https://pool.friedger.de/nft.json
                name: Friedger Pool
                description: Enjoying the stacking pool.
                image_uri: https://pool.friedger.de/nft.webp
                image_canonical_uri: https://pool.friedger.de/nft.webp
                tx_id: 0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0
                sender_address: ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA
              schema:
                $ref: '#/components/schemas/NonFungibleTokenMetadata'
          description: Non fungible tokens metadata for contract id
      summary: Non fungible tokens metadata for contract id
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/{contractId}/ft/metadata:
    get:
      description: Retrieves the metadata for fungible tokens for a given contract
        id
      operationId: get_contract_ft_metadata
      parameters:
      - description: token's contract id
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                token_uri: https://heystack.xyz/token-metadata.json
                name: Heystack
                description: "Heystack is a SIP-010-compliant fungible token on the\
                  \ Stacks Blockchain, used on the Heystack app"
                image_uri: https://heystack.xyz/assets/Stacks128w.png
                image_canonical_uri: https://heystack.xyz/assets/Stacks128w.png
                tx_id: 0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0
                sender_address: ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA
                symbol: HEY
                decimals: 5
              schema:
                $ref: '#/components/schemas/FungibleTokenMetadata'
          description: Fungible tokens metadata for contract id
      summary: Fungible tokens metadata for contract id
      tags:
      - Fungible Tokens
  /extended/v1/fee_rate:
    post:
      deprecated: true
      description: "**NOTE:** This endpoint is deprecated in favor of [Get approximate\
        \ fees for the given transaction](#operation/post_fee_transaction).\n\nRetrieves\
        \ estimated fee rate.\n"
      operationId: fetch_fee_rate
      requestBody:
        content:
          application/json:
            example:
              transaction: 0x5e9f3933e358df6a73fec0d47ce3e1062c20812c129f5294e6f37a8d27c051d9
            schema:
              $ref: '#/components/schemas/FeeRateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                fee_rate: 360
              schema:
                $ref: '#/components/schemas/FeeRate'
          description: Transaction fee rate
      summary: Fetch fee rate
      tags:
      - Fees
  /v2/fees/transaction:
    post:
      description: "Get an estimated fee for the supplied transaction.  This\nestimates\
        \ the execution cost of the transaction, the current\nfee rate of the network,\
        \ and returns estimates for fee\namounts.\n* `transaction_payload` is a hex-encoded\
        \ serialization of\n  the TransactionPayload for the transaction.\n* `estimated_len`\
        \ is an optional argument that provides the\n  endpoint with an estimation\
        \ of the final length (in bytes)\n  of the transaction, including any post-conditions\
        \ and\n  signatures\nIf the node cannot provide an estimate for the transaction\n\
        (e.g., if the node has never seen a contract-call for the\ngiven contract\
        \ and function) or if estimation is not\nconfigured on this node, a 400 response\
        \ is returned.\nThe 400 response will be a JSON error containing a `reason`\n\
        field which can be one of the following:\n* `DatabaseError` - this Stacks\
        \ node has had an internal\n  database error while trying to estimate the\
        \ costs of the\n  supplied transaction.\n* `NoEstimateAvailable` - this Stacks\
        \ node has not seen this\n  kind of contract-call before, and it cannot provide\
        \ an\n  estimate yet.\n* `CostEstimationDisabled` - this Stacks node does\
        \ not perform\n  fee or cost estimation, and it cannot respond on this\n \
        \ endpoint.\nThe 200 response contains the following data:\n* `estimated_cost`\
        \ - the estimated multi-dimensional cost of\n  executing the Clarity VM on\
        \ the provided transaction.\n* `estimated_cost_scalar` - a unitless integer\
        \ that the Stacks\n  node uses to compare how much of the block limit is consumed\n\
        \  by different transactions. This value incorporates the\n  estimated length\
        \ of the transaction and the estimated\n  execution cost of the transaction.\
        \ The range of this integer\n  may vary between different Stacks nodes. In\
        \ order to compute\n  an estimate of total fee amount for the transaction,\
        \ this\n  value is multiplied by the same Stacks node's estimated fee\n  rate.\n\
        * `cost_scalar_change_by_byte` - a float value that indicates how\n  much\
        \ the `estimated_cost_scalar` value would increase for every\n  additional\
        \ byte in the final transaction.\n* `estimations` - an array of estimated\
        \ fee rates and total fees to\n  pay in microSTX for the transaction. This\
        \ array provides a range of\n  estimates (default: 3) that may be used. Each\
        \ element of the array\n  contains the following fields:\n    * `fee_rate`\
        \ - the estimated value for the current fee\n      rates in the network\n\
        \    * `fee` - the estimated value for the total fee in\n      microSTX that\
        \ the given transaction should pay. These\n      values are the result of\
        \ computing:\n      `fee_rate` x `estimated_cost_scalar`.\n      If the estimated\
        \ fees are less than the minimum relay\n      fee `(1 ustx x estimated_len)`,\
        \ then that minimum relay\n      fee will be returned here instead.\nNote:\
        \ If the final transaction's byte size is larger than\nsupplied to `estimated_len`,\
        \ then applications should increase\nthis fee amount by:\n  `fee_rate` x `cost_scalar_change_by_byte`\
        \ x (`final_size` - `estimated_size`)\n"
      operationId: post_fee_transaction
      requestBody:
        content:
          application/json:
            example:
              estimated_len: 350
              transaction_payload: 021af942874ce525e87f21bbe8c121b12fac831d02f4086765742d696e666f0b7570646174652d696e666f00000000
            schema:
              $ref: '#/components/schemas/TransactionFeeEstimateRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                cost_scalar_change_by_byte: 0.00476837158203125
                estimated_cost:
                  read_count: 19
                  read_length: 4814
                  runtime: 7175000
                  write_count: 2
                  write_length: 1020
                estimated_cost_scalar: 14
                estimations:
                - fee: 17
                  fee_rate: 1.2410714285714286
                - fee: 125
                  fee_rate: 8.958333333333332
                - fee: 140
                  fee_rate: 10
              schema:
                $ref: '#/components/schemas/TransactionFeeEstimateResponse'
          description: Estimated fees for the transaction
      summary: Get approximate fees for the given transaction
      tags:
      - Fees
  /extended/v1/tx/events:
    get:
      description: "Retrieves the list of events filtered by principal (STX address\
        \ or Smart Contract ID), transaction id or event types. The list of event\
        \ types is ('smart_contract_log', 'stx_lock', 'stx_asset', 'fungible_token_asset',\
        \ 'non_fungible_token_asset')."
      operationId: get_filtered_events
      parameters:
      - description: Hash of transaction
        explode: true
        in: query
        name: tx_id
        required: false
        schema:
          example: 0x29e25515652dad41ef675bd0670964e3d537b80ec19cf6ca6f1dd65d5bc642c5
          type: string
        style: form
      - description: Stacks address or a Contract identifier
        explode: true
        in: query
        name: address
        required: false
        schema:
          example: ST1HB64MAJ1MBV4CQ80GF01DZS4T1DSMX20ADCRA4
          type: string
        style: form
      - description: number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          example: 100
          type: integer
        style: form
      - description: number of items to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          example: 50
          type: integer
        style: form
      - description: Filter the events on event type
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            enum:
            - smart_contract_log
            - stx_lock
            - stx_asset
            - fungible_token_asset
            - non_fungible_token_asset
            example: stx_lock
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                limit: 96
                offset: 0
                events:
                - event_index: 0
                  event_type: non_fungible_token_asset
                  tx_id: 0x05ccc123db703a2808afaaf88b6b3240f14391d14fde701bd20d7206c9133af6
                  asset:
                    asset_event_type: transfer
                    asset_id: ST000000000000000000002AMW42H.bns::names
                    sender: STKVDRCTN8C81T22QHR9PG9GPD3V3WPQYBYFHPT4
                    recipient: STRWN68C36Z7WTDD1TJERTAZ4SXDRMMDB29M4VNQ
                    value:
                      hex: 0x0c00000002046e616d65020000000a62696c616c7465737435096e616d6573706163650200000003627463
                      repr: (tuple (name 0x62696c616c7465737435) (namespace 0x627463))
                - event_index: 1
                  event_type: smart_contract_log
                  tx_id: 0x05ccc123db703a2808afaaf88b6b3240f14391d14fde701bd20d7206c9133af6
                  contract_log:
                    contract_id: ST000000000000000000002AMW42H.bns
                    topic: print
                    value:
                      hex: 0x0c000000010a6174746163686d656e740c00000003106174746163686d656e742d696e646578010000000000000000000000000000028304686173680200000014b472a266d0bd89c13706a4132ccfb16f7c3b9fcb086d657461646174610c00000004046e616d65020000000a62696c616c7465737435096e616d6573706163650200000003627463026f700d0000000d6e616d652d7472616e736665720974782d73656e646572051a27b6e19aaa1880e842bc709b4130b347b1f2d7f2
                      repr: (tuple (attachment (tuple (attachment-index u643) (hash
                        0xb472a266d0bd89c13706a4132ccfb16f7c3b9fcb) (metadata (tuple
                        (name 0x62696c616c7465737435) (namespace 0x627463) (op "name-transfer")
                        (tx-sender STKVDRCTN8C81T22QHR9PG9GPD3V3WPQYBYFHPT4))))))
              schema:
                $ref: '#/components/schemas/TransactionEventsResponse'
          description: Success
      summary: Transaction Events
      tags:
      - Transactions
components:
  schemas:
    RosettaConstructionMetadataRequest:
      additionalProperties: false
      description: "A ConstructionMetadataRequest is utilized to get information required\
        \ to construct a transaction. The Options object used to specify which metadata\
        \ to return is left purposely unstructured to allow flexibility for implementers.\
        \ Optionally, the request can also include an array of PublicKeys associated\
        \ with the AccountIdentifiers returned in ConstructionPreprocessResponse."
      example:
        public_keys:
        - "{}"
        - "{}"
        options:
          gas_price: 1.4658129805029452
          symbol: symbol
          amount: amount
          fee: fee
          memo: memo
          number_of_cycles: 2
          contract_name: contract_name
          delegate_to: delegate_to
          type: type
          token_transfer_recipient_address: token_transfer_recipient_address
          contract_address: contract_address
          burn_block_height: 7
          sender_address: sender_address
          pox_addr: pox_addr
          gas_limit: 6.027456183070403
          size: 5
          decimals: 0
          suggested_fee_multiplier: 5.962133916683182
          max_fee: max_fee
          status: status
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        options:
          $ref: '#/components/schemas/RosettaOptions'
        public_keys:
          items:
            $ref: '#/paths/~1rosetta~1v1~1construction~1derive/post/requestBody/content/application~1json/schema/properties/public_key'
          type: array
      required:
      - network_identifier
      - options
      title: RosettaConstructionMetadataRequest
      type: object
    PostConditionNonFungible_allOf:
      additionalProperties: false
      properties:
        condition_code:
          description: "A non-fungible condition code encodes a statement being made\
            \ about a non-fungible token, with respect to whether or not the particular\
            \ non-fungible token is owned by the account."
          enum:
          - sent
          - not_sent
          title: PostConditionNonFungibleConditionCode
          type: string
        type:
          enum:
          - non_fungible
          type: string
        asset_value:
          $ref: '#/components/schemas/PostConditionNonFungible_allOf_asset_value'
        asset:
          $ref: '#/components/schemas/PostConditionFungible_allOf_1_asset'
      required:
      - asset
      - asset_value
      - condition_code
      - type
      type: object
    RosettaConstructionPayloadResponse:
      additionalProperties: false
      description: RosettaConstructionPayloadResponse is returned by /construction/payloads.
        It contains an unsigned transaction blob (that is usually needed to construct
        the a network transaction from a collection of signatures) and an array of
        payloads that must be signed by the caller.
      example:
        unsigned_transaction: unsigned_transaction
        payloads:
        - address: address
          account_identifier: "{}"
          hex_bytes: hex_bytes
          signature_type: ecdsa
        - address: address
          account_identifier: "{}"
          hex_bytes: hex_bytes
          signature_type: ecdsa
      properties:
        unsigned_transaction:
          description: This is an unsigned transaction blob (that is usually needed
            to construct the a network transaction from a collection of signatures)
          type: string
        payloads:
          description: An array of payloads that must be signed by the caller
          items:
            $ref: '#/components/schemas/SigningPayload'
          type: array
      required:
      - payloads
      - unsigned_transaction
      title: RosettaConstructionPayloadResponse
      type: object
    RosettaNetworkOptionsResponse_version:
      additionalProperties: false
      description: The Version object is utilized to inform the client of the versions
        of different components of the Rosetta implementation.
      example:
        metadata: "{}"
        rosetta_version: rosetta_version
        node_version: node_version
        middleware_version: middleware_version
      properties:
        rosetta_version:
          description: The rosetta_version is the version of the Rosetta interface
            the implementation adheres to. This can be useful for clients looking
            to reliably parse responses.
          type: string
        node_version:
          description: The node_version is the canonical version of the node runtime.
            This can help clients manage deployments.
          type: string
        middleware_version:
          description: "When a middleware server is used to adhere to the Rosetta\
            \ interface, it should return its version here. This can help clients\
            \ manage deployments."
          type: string
        metadata:
          description: Any other information that may be useful about versioning of
            dependent services should be returned here.
          type: object
      required:
      - node_version
      - rosetta_version
      type: object
    RosettaBlockRequest:
      additionalProperties: false
      description: A BlockRequest is utilized to make a block request on the /block
        endpoint.
      example:
        network_identifier:
          blockchain: blockchain
          sub_network_identifier:
            metadata:
              producer: producer
            network: network
          network: network
        block_identifier: null
      properties:
        network_identifier:
          $ref: '#/components/schemas/NetworkIdentifier'
        block_identifier:
          $ref: '#/components/schemas/RosettaPartialBlockIdentifier'
      required:
      - block_identifier
      - network_identifier
      title: RosettaBlockRequest
      type: object
    run_faucet_stx_request:
      example:
        address: ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ
        stacking: false
      properties:
        address:
          description: STX testnet address
          type: string
        stacking:
          description: Use required number of tokens for stacking
          type: boolean
      type: object
    TxSearchResult:
      additionalProperties: false
      description: Transaction search result
      properties:
        found:
          default: true
          description: Indicates if the requested object was found or not
          type: boolean
        result:
          $ref: '#/components/schemas/TxSearchResult_result'
      required:
      - found
      - result
      title: TxSearchResult
      type: object
    TransactionEventSmartContractLog_allOf:
      additionalProperties: false
      properties:
        event_type:
          enum:
          - smart_contract_log
          type: string
        tx_id:
          type: string
        contract_log:
          $ref: '#/components/schemas/TransactionEventSmartContractLog_allOf_contract_log'
      required:
      - contract_log
      - event_type
      - tx_id
      type: object
    MicroblockListResponse:
      additionalProperties: false
      description: GET request that returns microblocks
      example:
        total: 1
        offset: 6
        limit: 2
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          description: The number of microblocks to return
          maximum: 30
          type: integer
        offset:
          default: 0
          description: The number to microblocks to skip (starting at `0`)
          type: integer
        total:
          description: The number of microblocks available
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1microblock~1%7Bhash%7D/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: MicroblockListResponse
      type: object
    RosettaOptions:
      additionalProperties: false
      description: The options that will be sent directly to /construction/metadata
        by the caller.
      example:
        gas_price: 1.4658129805029452
        symbol: symbol
        amount: amount
        fee: fee
        memo: memo
        number_of_cycles: 2
        contract_name: contract_name
        delegate_to: delegate_to
        type: type
        token_transfer_recipient_address: token_transfer_recipient_address
        contract_address: contract_address
        burn_block_height: 7
        sender_address: sender_address
        pox_addr: pox_addr
        gas_limit: 6.027456183070403
        size: 5
        decimals: 0
        suggested_fee_multiplier: 5.962133916683182
        max_fee: max_fee
        status: status
      properties:
        sender_address:
          description: 'sender''s address '
          type: string
        type:
          description: Type of operation e.g transfer
          type: string
        status:
          description: This value indicates the state of the operations
          type: string
        token_transfer_recipient_address:
          description: Recipient's address
          type: string
        amount:
          description: Amount to be transfered.
          type: string
        symbol:
          description: Currency symbol e.g STX
          type: string
        decimals:
          description: Number of decimal places
          type: integer
        gas_limit:
          description: Maximum price a user is willing to pay.
          type: number
        gas_price:
          description: Cost necessary to perform a transaction on the network
          type: number
        suggested_fee_multiplier:
          description: ' A suggested fee multiplier to indicate that the suggested
            fee should be scaled. This may be used to set higher fees for urgent transactions
            or to pay lower fees when there is less urgency.'
          type: number
        max_fee:
          description: Maximum fee user is willing to pay
          type: string
        fee:
          description: Fee for this transaction
          type: string
        size:
          description: Transaction approximative size (used to calculate total fee).
          type: integer
        memo:
          description: STX token transfer memo.
          type: string
        number_of_cycles:
          description: Number of cycles when stacking.
          type: integer
        contract_address:
          description: Address of the contract to call.
          type: string
        contract_name:
          description: Name of the contract to call.
          type: string
        burn_block_height:
          description: Set the burnchain (BTC) block for stacking lock to start.
          type: integer
        delegate_to:
          description: Delegator address for when calling `delegate-stacking`.
          type: string
        pox_addr:
          description: The reward address for stacking transaction. It should be a
            valid Bitcoin address
          type: string
      title: RosettaOptions
      type: object
    RosettaConstructionPreprocessResponse:
      additionalProperties: false
      description: "RosettaConstructionPreprocessResponse contains options that will\
        \ be sent unmodified to /construction/metadata. If it is not necessary to\
        \ make a request to /construction/metadata, options should be omitted. Some\
        \ blockchains require the PublicKey of particular AccountIdentifiers to construct\
        \ a valid transaction. To fetch these PublicKeys, populate required_public_keys\
        \ with the AccountIdentifiers associated with the desired PublicKeys. If it\
        \ is not necessary to retrieve any PublicKeys for construction, required_public_keys\
        \ should be omitted."
      example:
        options: "{}"
        required_public_keys:
        - "{}"
        - "{}"
      properties:
        options:
          $ref: '#/paths/~1rosetta~1v1~1construction~1metadata/post/requestBody/content/application~1json/schema/properties/options'
        required_public_keys:
          items:
            $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/requestBody/content/application~1json/schema/properties/account_identifier'
          type: array
      title: RosettaConstructionPreprocessResponse
      type: object
    RosettaAmount:
      additionalProperties: false
      description: Amount is some Value of a Currency. It is considered invalid to
        specify a Value without a Currency.
      example:
        metadata: "{}"
        currency: "{}"
        value: value
      properties:
        value:
          description: "Value of the transaction in atomic units represented as an\
            \ arbitrary-sized signed integer. For example, 1 BTC would be represented\
            \ by a value of 100000000."
          type: string
        currency:
          $ref: '#/paths/~1rosetta~1v1~1construction~1preprocess/post/requestBody/content/application~1json/schema/properties/max_fee/items/properties/currency'
        metadata:
          description: ""
          type: object
      required:
      - currency
      - value
      title: RosettaAmount
      type: object
    AddressUnlockSchedule:
      additionalProperties: false
      description: Unlock schedule amount and block height
      example:
        amount: amount
        block_height: 0.8008281904610115
      properties:
        amount:
          description: Micro-STX amount locked at this block height.
          type: string
        block_height:
          type: number
      required:
      - amount
      - block_height
      title: AddressUnlockSchedule
      type: object
    NftEvent:
      additionalProperties: false
      example:
        sender: sender
        asset_identifier: asset_identifier
        recipient: recipient
        block_height: 5.962133916683182
        tx_id: tx_id
        value:
          repr: repr
          hex: hex
      properties:
        sender:
          type: string
        recipient:
          type: string
        asset_identifier:
          type: string
        value:
          $ref: '#/components/schemas/NftEvent_value'
        tx_id:
          type: string
        block_height:
          type: number
      required:
      - asset_identifier
      - block_height
      - recipient
      - sender
      - tx_id
      - value
      title: NftEvent
      type: object
    RosettaBlockTransactionRequest:
      additionalProperties: false
      description: A BlockTransactionRequest is used to fetch a Transaction included
        in a block that is not returned in a BlockResponse.
      example:
        transaction_identifier:
          hash: hash
        network_identifier: "{}"
        block_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        block_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/block_identifier'
        transaction_identifier:
          $ref: '#/components/schemas/TransactionIdentifier'
      required:
      - block_identifier
      - network_identifier
      - transaction_identifier
      title: RosettaBlockTransactionRequest
      type: object
    RosettaBlockTransactionResponse:
      additionalProperties: false
      description: A BlockTransactionResponse contains information about a block transaction.
      example:
        transaction:
          metadata:
            size: 0
            lockTime: 6
            memo: memo
          operations:
          - "{}"
          - "{}"
          transaction_identifier: "{}"
      properties:
        transaction:
          $ref: '#/components/schemas/RosettaTransaction'
      required:
      - transaction
      title: RosettaBlockTransactionResponse
      type: object
    RosettaAccountBalanceResponse_metadata:
      description: Account-based blockchains that utilize a nonce or sequence number
        should include that number in the metadata. This number could be unique to
        the identifier or global across the account address.
      example:
        sequence_number: 0
      properties:
        sequence_number:
          type: integer
      required:
      - sequence_number
      type: object
    ContractSearchResult_result:
      additionalProperties: false
      description: This object carries the search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - contract_address
          type: string
        tx_data:
          $ref: '#/components/schemas/ContractSearchResult_result_tx_data'
        metadata:
          $ref: '#/components/schemas/AddressTransactionsListResponse_results_inner'
      required:
      - entity_id
      - entity_type
      type: object
    NonFungibleTokenMetadata:
      additionalProperties: false
      example:
        token_uri: token_uri
        sender_address: sender_address
        image_uri: image_uri
        name: name
        description: description
        image_canonical_uri: image_canonical_uri
        tx_id: tx_id
      properties:
        token_uri:
          description: An optional string that is a valid URI which resolves to this
            token's metadata. Can be empty.
          type: string
        name:
          description: Identifies the asset to which this token represents
          type: string
        description:
          description: Describes the asset to which this token represents
          type: string
        image_uri:
          description: "A URI pointing to a resource with mime type image/* representing\
            \ the asset to which this token represents. The API may provide a URI\
            \ to a cached resource, dependending on configuration. Otherwise, this\
            \ can be the same value as the canonical image URI."
          type: string
        image_canonical_uri:
          description: The original image URI specified by the contract. A URI pointing
            to a resource with mime type image/* representing the asset to which this
            token represents. Consider making any images at a width between 320 and
            1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.
          type: string
        tx_id:
          description: Tx id that deployed the contract
          type: string
        sender_address:
          description: principle that deployed the contract
          type: string
      required:
      - description
      - image_canonical_uri
      - image_uri
      - name
      - sender_address
      - token_uri
      - tx_id
      title: NonFungibleTokenMetadata
      type: object
    RosettaCurrency:
      additionalProperties: false
      description: Currency is composed of a canonical Symbol and Decimals. This Decimals
        value is used to convert an Amount.Value from atomic units (Satoshis) to standard
        units (Bitcoins).
      example:
        symbol: symbol
        metadata: "{}"
        decimals: 0
      properties:
        symbol:
          description: Canonical symbol associated with a currency.
          type: string
        decimals:
          description: "Number of decimal places in the standard unit representation\
            \ of the amount. For example, BTC has 8 decimals. Note that it is not\
            \ possible to represent the value of some currency in atomic units that\
            \ is not base 10."
          type: integer
        metadata:
          description: "Any additional information related to the currency itself.\
            \ For example, it would be useful to populate this object with the contract\
            \ address of an ERC-20 token."
          type: object
      required:
      - decimals
      - symbol
      title: RosettaCurrency
      type: object
    BlockSearchResult_result_block_data:
      additionalProperties: false
      description: Returns basic search result information about the requested id
      properties:
        canonical:
          description: If the block lies within the canonical chain
          type: boolean
        hash:
          description: Refers to the hash of the block
          type: string
        parent_block_hash:
          type: string
        burn_block_time:
          type: integer
        height:
          type: integer
      required:
      - burn_block_time
      - canonical
      - hash
      - height
      - parent_block_hash
      type: object
    TokenTransferTransaction:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D/get/responses/200/content/application~1json/schema/allOf/0'
      - $ref: '#/components/schemas/TokenTransferTransactionMetadata'
      description: Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset
      title: TokenTransferTransaction
      type: object
    AddressTokenOfferingLocked:
      additionalProperties: false
      description: Token Offering Locked
      example:
        unlock_schedule:
        - amount: amount
          block_height: 0.8008281904610115
        - amount: amount
          block_height: 0.8008281904610115
        total_locked: total_locked
        total_unlocked: total_unlocked
      properties:
        total_locked:
          description: Micro-STX amount still locked at current block height.
          type: string
        total_unlocked:
          description: Micro-STX amount unlocked at current block height.
          type: string
        unlock_schedule:
          items:
            $ref: '#/components/schemas/AddressUnlockSchedule'
          type: array
      required:
      - total_locked
      - total_unlocked
      - unlock_schedule
      title: AddressTokenOfferingLocked
      type: object
    BlockSearchResult_result:
      additionalProperties: false
      description: This object carries the search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - block_hash
          type: string
        block_data:
          $ref: '#/components/schemas/BlockSearchResult_result_block_data'
        metadata:
          $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/schema'
      required:
      - block_data
      - entity_id
      - entity_type
      type: object
    PostConditionStx:
      allOf:
      - $ref: '#/components/schemas/PostConditionStx_allOf'
      - $ref: '#/components/schemas/PostConditionStx_allOf_1'
      title: PostConditionStx
      type: object
    NonFungibleTokenMintWithTxMetadata:
      additionalProperties: false
      description: Non-Fungible Token mint event with transaction metadata
      properties:
        recipient:
          type: string
        event_index:
          type: integer
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        tx:
          $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
      required:
      - event_index
      - tx
      - value
      title: NonFungibleTokenMintWithTxMetadata
      type: object
    SigningPayload:
      additionalProperties: false
      description: SigningPayload is signed by the client with the keypair associated
        with an address using the specified SignatureType. SignatureType can be optionally
        populated if there is a restriction on the signature scheme that can be used
        to sign the payload.
      example:
        address: address
        account_identifier: "{}"
        hex_bytes: hex_bytes
        signature_type: ecdsa
      properties:
        address:
          description: "[DEPRECATED by account_identifier in v1.4.4] The network-specific\
            \ address of the account that should sign the payload."
          type: string
        account_identifier:
          $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/requestBody/content/application~1json/schema/properties/account_identifier'
        hex_bytes:
          type: string
        signature_type:
          description: SignatureType is the type of a cryptographic signature.
          enum:
          - ecdsa
          - ecdsa_recovery
          - ed25519
          - schnorr_1
          - schnorr_poseidon
          type: string
      required:
      - hex_bytes
      title: SigningPayload
      type: object
    SmartContractTransactionMetadata:
      additionalProperties: false
      description: Metadata associated with a contract-deploy type transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract
      properties:
        tx_type:
          enum:
          - smart_contract
          type: string
        smart_contract:
          $ref: '#/components/schemas/SmartContractTransactionMetadata_smart_contract'
      required:
      - smart_contract
      - tx_type
      title: SmartContractTransactionMetadata
      type: object
    ContractSearchResult_result_tx_data:
      additionalProperties: false
      description: Returns basic search result information about the requested id
      properties:
        canonical:
          description: If the transaction lies within the canonical chain
          type: boolean
        block_hash:
          description: Refers to the hash of the block for searched transaction
          type: string
        burn_block_time:
          type: integer
        block_height:
          type: integer
        tx_type:
          type: string
        tx_id:
          description: Corresponding tx_id for smart_contract
          type: string
      type: object
    BnsGetAllNamespacesResponse:
      additionalProperties: false
      description: Fetch a list of all namespaces known to the node.
      example:
        namespaces:
        - namespaces
        - namespaces
      properties:
        namespaces:
          items:
            type: string
          type: array
      required:
      - namespaces
      title: BnsGetAllNamespacesResponse
      type: object
    BnsNamesOwnByAddressResponse:
      additionalProperties: false
      description: Retrieves a list of names owned by the address provided.
      example:
        names:
        - names
        - names
      properties:
        names:
          items:
            pattern: "^([a-z0-9-_.+]{3,37})$"
            type: string
          type: array
      required:
      - names
      title: BnsNamesOwnByAddressResponse
      type: object
    RosettaConstructionMetadataResponse_metadata:
      example:
        account_sequence: 0
        recent_block_hash: recent_block_hash
      properties:
        account_sequence:
          type: integer
        recent_block_hash:
          type: string
      type: object
    BnsFetchFileZoneResponse_anyOf_1:
      additionalProperties: false
      properties:
        error:
          pattern: .+
          type: string
      type: object
    NonFungibleTokenMint:
      additionalProperties: false
      anyOf:
      - $ref: '#/components/schemas/NonFungibleTokenMintWithTxId'
      - $ref: '#/components/schemas/NonFungibleTokenMintWithTxMetadata'
      description: Describes the minting of a Non-Fungible Token
      title: NonFungibleTokenMint
      type: object
    RosettaGenesisBlockIdentifier:
      additionalProperties: false
      description: The block_identifier uniquely identifies a block in a particular
        network.
      example:
        index: 6
        hash: hash
      properties:
        index:
          description: This is also known as the block height.
          type: integer
        hash:
          description: Block hash
          type: string
      required:
      - hash
      - index
      title: RosettaGenesisBlockIdentifier
      type: object
    AbstractTransaction:
      allOf:
      - $ref: '#/components/schemas/BaseTransaction'
      - $ref: '#/components/schemas/AbstractTransaction_allOf'
      description: Anchored transaction metadata. All mined/anchored Stacks transactions
        have these properties.
      title: AbstractTransaction
      type: object
    RosettaConstructionHashRequest:
      additionalProperties: false
      description: TransactionHash returns the network-specific transaction hash for
        a signed transaction.
      example:
        signed_transaction: signed_transaction
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        signed_transaction:
          description: Signed transaction
          type: string
      required:
      - network_identifier
      - signed_transaction
      title: RosettaConstructionHashRequest
      type: object
    NonFungibleTokenHolding:
      additionalProperties: false
      anyOf:
      - $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId'
      - $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxMetadata'
      description: Describes the ownership of a Non-Fungible Token
      title: NonFungibleTokenHolding
      type: object
    MempoolTransactionListResponse:
      additionalProperties: false
      description: GET request that returns transactions
      example:
        total: 1
        offset: 6
        limit: 0
        results:
        - null
        - null
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        results:
          items:
            $ref: '#/components/schemas/MempoolTransaction'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: MempoolTransactionListResponse
      type: object
    RosettaSignature:
      additionalProperties: false
      description: "Signature contains the payload that was signed, the public keys\
        \ of the keypairs used to produce the signature, the signature (encoded in\
        \ hex), and the SignatureType. PublicKey is often times not known during construction\
        \ of the signing payloads but may be needed to combine signatures properly."
      example:
        public_key: "{}"
        signing_payload: "{}"
        hex_bytes: hex_bytes
        signature_type: ecdsa
      properties:
        signing_payload:
          $ref: '#/paths/~1rosetta~1v1~1construction~1payloads/post/responses/200/content/application~1json/schema/properties/payloads/items'
        public_key:
          $ref: '#/paths/~1rosetta~1v1~1construction~1derive/post/requestBody/content/application~1json/schema/properties/public_key'
        signature_type:
          description: SignatureType is the type of a cryptographic signature.
          enum:
          - ecdsa
          - ecdsa_recovery
          - ed25519
          - schnorr_1
          - schnorr_poseidon
          title: SignatureType
          type: string
        hex_bytes:
          type: string
      required:
      - hex_bytes
      - public_key
      - signature_type
      - signing_payload
      title: RosettaSignature
      type: object
    RosettaConstructionParseResponse:
      additionalProperties: false
      description: RosettaConstructionParseResponse contains an array of operations
        that occur in a transaction blob. This should match the array of operations
        provided to /construction/preprocess and /construction/payloads.
      example:
        signers:
        - null
        - null
        metadata: "{}"
        operations:
        - "{}"
        - "{}"
        account_identifier_signers:
        - "{}"
        - "{}"
      properties:
        operations:
          items:
            $ref: '#/paths/~1rosetta~1v1~1construction~1payloads/post/requestBody/content/application~1json/schema/properties/operations/items'
          type: array
        signers:
          description: "[DEPRECATED by account_identifier_signers in v1.4.4] All signers\
            \ (addresses) of a particular transaction. If the transaction is unsigned,\
            \ it should be empty."
          items:
            $ref: '#/components/schemas/RosettaNetworkOptionsResponse_allow_operation_types_inner'
          type: array
        account_identifier_signers:
          items:
            $ref: '#/paths/~1rosetta~1v1~1construction~1derive/post/responses/200/content/application~1json/schema/properties/account_identifier'
          type: array
        metadata:
          type: object
      required:
      - operations
      title: RosettaConstructionParseResponse
      type: object
    SmartContract:
      additionalProperties: false
      description: A Smart Contract Detail
      example:
        abi: abi
        canonical: true
        block_height: 1
        tx_id: tx_id
        source_code: source_code
      properties:
        tx_id:
          type: string
        canonical:
          type: boolean
        block_height:
          type: integer
        source_code:
          type: string
        abi:
          type: string
      required:
      - abi
      - block_height
      - canonical
      - source_code
      - tx_id
      title: SmartContract
      type: object
    SearchErrorResult:
      additionalProperties: false
      description: Error search result
      properties:
        found:
          default: false
          description: Indicates if the requested object was found or not
          type: boolean
        result:
          $ref: '#/components/schemas/SearchErrorResult_result'
        error:
          type: string
      required:
      - error
      - found
      - result
      title: SearchErrorResult
      type: object
    NetworkBlockTimeResponse:
      additionalProperties: false
      description: GET request that target block time for a given network
      example:
        target_block_time: 0
      properties:
        target_block_time:
          type: integer
      required:
      - target_block_time
      title: NetworkBlockTimeResponse
      type: object
    TransactionEventNonFungibleAsset_allOf:
      additionalProperties: false
      properties:
        event_type:
          enum:
          - non_fungible_token_asset
          type: string
        tx_id:
          type: string
        asset:
          $ref: '#/components/schemas/TransactionEventNonFungibleAsset_allOf_asset'
      required:
      - asset
      - event_type
      - tx_id
      type: object
    RosettaBlock:
      additionalProperties: false
      description: "Blocks contain an array of Transactions that occurred at a particular\
        \ BlockIdentifier. A hard requirement for blocks returned by Rosetta implementations\
        \ is that they MUST be inalterable: once a client has requested and received\
        \ a block identified by a specific BlockIndentifier, all future calls for\
        \ that same BlockIdentifier must return the same block contents."
      example:
        metadata:
          difficulty: difficulty
          transactions_root: transactions_root
        parent_block_identifier:
          index: 0
          hash: hash
        transactions:
        - "{}"
        - "{}"
        block_identifier: "{}"
        timestamp: 6
      properties:
        block_identifier:
          $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/responses/200/content/application~1json/schema/properties/block_identifier'
        parent_block_identifier:
          $ref: '#/components/schemas/RosettaParentBlockIdentifier'
        timestamp:
          description: The timestamp of the block in milliseconds since the Unix Epoch.
            The timestamp is stored in milliseconds because some blockchains produce
            blocks more often than once a second.
          type: integer
        transactions:
          description: All the transactions in the block
          items:
            $ref: '#/paths/~1rosetta~1v1~1block~1transaction/post/responses/200/content/application~1json/schema/properties/transaction'
          type: array
        metadata:
          $ref: '#/components/schemas/RosettaBlock_metadata'
      required:
      - block_identifier
      - parent_block_identifier
      - timestamp
      - transactions
      title: RosettaBlock
      type: object
    GetStxSupplyResponse:
      additionalProperties: false
      description: GET request that returns network target block times
      example:
        unlocked_percent: unlocked_percent
        total_stx: total_stx
        unlocked_stx: unlocked_stx
        block_height: 0
      properties:
        unlocked_percent:
          description: String quoted decimal number of the percentage of STX that
            have unlocked
          type: string
        total_stx:
          description: String quoted decimal number of the total possible number of
            STX
          type: string
        unlocked_stx:
          description: String quoted decimal number of the STX that have been mined
            or unlocked
          type: string
        block_height:
          description: The block height at which this information was queried
          type: integer
      required:
      - block_height
      - total_stx
      - unlocked_percent
      - unlocked_stx
      title: GetStxSupplyResponse
      type: object
    FungibleTokenMetadata:
      additionalProperties: false
      example:
        symbol: symbol
        token_uri: token_uri
        sender_address: sender_address
        image_uri: image_uri
        decimals: 0.8008281904610115
        name: name
        description: description
        image_canonical_uri: image_canonical_uri
        tx_id: tx_id
      properties:
        token_uri:
          description: An optional string that is a valid URI which resolves to this
            token's metadata. Can be empty.
          type: string
        name:
          description: Identifies the asset to which this token represents
          type: string
        description:
          description: Describes the asset to which this token represents
          type: string
        image_uri:
          description: "A URI pointing to a resource with mime type image/* representing\
            \ the asset to which this token represents. The API may provide a URI\
            \ to a cached resource, dependending on configuration. Otherwise, this\
            \ can be the same value as the canonical image URI."
          type: string
        image_canonical_uri:
          description: The original image URI specified by the contract. A URI pointing
            to a resource with mime type image/* representing the asset to which this
            token represents. Consider making any images at a width between 320 and
            1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.
          type: string
        symbol:
          description: "A shorter representation of a token. This is sometimes referred\
            \ to as a \"ticker\". Examples: \"STX\", \"COOL\", etc. Typically, a token\
            \ could be referred to as $SYMBOL when referencing it in writing."
          type: string
        decimals:
          description: The number of decimal places in a token.
          type: number
        tx_id:
          description: Tx id that deployed the contract
          type: string
        sender_address:
          description: principle that deployed the contract
          type: string
      required:
      - decimals
      - description
      - image_canonical_uri
      - image_uri
      - name
      - sender_address
      - symbol
      - token_uri
      - tx_id
      title: FungibleTokenMetadata
      type: object
    FeeRate:
      additionalProperties: false
      description: Get fee rate information.
      example:
        fee_rate: 0
      properties:
        fee_rate:
          type: integer
      required:
      - fee_rate
      title: FeeRate
      type: object
    TransactionNotFound:
      additionalProperties: false
      description: This object returns the id for not found transaction
      properties:
        found:
          enum:
          - false
          type: boolean
        result:
          $ref: '#/components/schemas/TransactionNotFound_result'
      required:
      - found
      - result
      title: TransactionNotFound
      type: object
    ReadOnlyFunctionSuccessResponse:
      additionalProperties: false
      description: GET request to get contract source
      example:
        okay: true
        result: result
        cause: cause
      properties:
        okay:
          type: boolean
        result:
          type: string
        cause:
          type: string
      required:
      - okay
      title: ReadOnlyFunctionSuccessResponse
      type: object
    BnsFetchHistoricalZoneFileResponse:
      anyOf:
      - $ref: '#/components/schemas/BnsFetchHistoricalZoneFileResponse_anyOf'
      - $ref: '#/components/schemas/BnsFetchHistoricalZoneFileResponse_anyOf_1'
      description: Fetches the historical zonefile specified by the username and zone
        hash.
      title: BnsFetchHistoricalZoneFileResponse
    ContractListResponse:
      additionalProperties: false
      description: GET list of contracts
      example:
        offset: 6
        limit: 0
        results:
        - abi: abi
          canonical: true
          block_height: 1
          tx_id: tx_id
          source_code: source_code
        - abi: abi
          canonical: true
          block_height: 1
          tx_id: tx_id
          source_code: source_code
      properties:
        limit:
          description: The number of contracts to return
          type: integer
        offset:
          default: 0
          description: The number to contracts to skip (starting at `0`)
          type: integer
        results:
          items:
            $ref: '#/components/schemas/SmartContract'
          type: array
      required:
      - limit
      - offset
      - results
      title: ContractListResponse
      type: object
    SearchResult:
      additionalProperties: false
      anyOf:
      - $ref: '#/components/schemas/SearchErrorResult'
      - $ref: '#/components/schemas/SearchSuccessResult'
      description: complete search result for terms
      title: SearchResult
      type: object
    PoisonMicroblockTransactionMetadata:
      additionalProperties: false
      description: Metadata associated with a poison-microblock type transaction
      properties:
        tx_type:
          enum:
          - poison_microblock
          type: string
        poison_microblock:
          $ref: '#/components/schemas/PoisonMicroblockTransactionMetadata_poison_microblock'
      required:
      - poison_microblock
      - tx_type
      title: PoisonMicroblockTransactionMetadata
      type: object
    GetStxSupplyLegacyFormatResponse:
      additionalProperties: false
      description: GET request that returns network target block times
      example:
        unlockedSupply: unlockedSupply
        unlockedSupplyFormatted: unlockedSupplyFormatted
        blockHeight: blockHeight
        unlockedPercent: unlockedPercent
        totalStacksFormatted: totalStacksFormatted
        totalStacks: totalStacks
      properties:
        unlockedPercent:
          description: String quoted decimal number of the percentage of STX that
            have unlocked
          type: string
        totalStacks:
          description: String quoted decimal number of the total possible number of
            STX
          type: string
        totalStacksFormatted:
          description: Same as `totalStacks` but formatted with comma thousands separators
          type: string
        unlockedSupply:
          description: String quoted decimal number of the STX that have been mined
            or unlocked
          type: string
        unlockedSupplyFormatted:
          description: Same as `unlockedSupply` but formatted with comma thousands
            separators
          type: string
        blockHeight:
          description: The block height at which this information was queried
          type: string
      required:
      - blockHeight
      - totalStacks
      - totalStacksFormatted
      - unlockedPercent
      - unlockedSupply
      - unlockedSupplyFormatted
      title: GetStxSupplyLegacyFormatResponse
      type: object
    RosettaConstructionHashResponse:
      additionalProperties: false
      description: TransactionIdentifier contains the transaction_identifier of a
        transaction that was submitted to either /construction/hash or /construction/submit.
      example:
        metadata: "{}"
        transaction_identifier: "{}"
      properties:
        transaction_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block~1transaction/post/requestBody/content/application~1json/schema/properties/transaction_identifier'
        metadata:
          type: object
      required:
      - transaction_identifier
      title: RosettaConstructionHashResponse
      type: object
    RunFaucetResponse:
      additionalProperties: false
      description: POST request that initiates a transfer of tokens to a specified
        testnet address
      example:
        success: true
        txId: txId
        txRaw: txRaw
      properties:
        success:
          description: Indicates if the faucet call was successful
          type: boolean
        txId:
          description: The transaction ID for the faucet call
          type: string
        txRaw:
          description: Raw transaction in hex string representation
          type: string
      required:
      - success
      title: RunFaucetResponse
      type: object
    MempoolTokenTransferTransaction:
      allOf:
      - $ref: '#/components/schemas/AbstractMempoolTransaction'
      - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/1'
      description: Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset
      title: MempoolTokenTransferTransaction
      type: object
    PostConditionNonFungible_allOf_asset_value:
      additionalProperties: false
      properties:
        hex:
          type: string
        repr:
          type: string
      required:
      - hex
      - repr
      type: object
    AddressSearchResult_result_metadata:
      anyOf:
      - $ref: '#/paths/~1extended~1v1~1address~1%7Bprincipal%7D~1stx/get/responses/200/content/application~1json/schema'
      type: object
    PostConditionStx_allOf_1:
      additionalProperties: false
      properties:
        condition_code:
          description: "A fungible condition code encodes a statement being made for\
            \ either STX or a fungible token, with respect to the originating account."
          enum:
          - sent_equal_to
          - sent_greater_than
          - sent_greater_than_or_equal_to
          - sent_less_than
          - sent_less_than_or_equal_to
          title: PostConditionFungibleConditionCode
          type: string
        amount:
          type: string
        type:
          enum:
          - stx
          type: string
      required:
      - amount
      - condition_code
      - type
      type: object
    InboundStxTransfer:
      additionalProperties: false
      description: A inbound STX transfer with a memo
      example:
        amount: amount
        sender: sender
        memo: memo
        block_height: 5.962133916683182
        transfer_type: bulk-send
        tx_id: tx_id
        tx_index: 5.637376656633329
      properties:
        sender:
          description: Principal that sent this transfer
          type: string
        amount:
          description: Transfer amount in micro-STX as integer string
          type: string
        memo:
          description: Hex encoded memo bytes associated with the transfer
          type: string
        block_height:
          description: Block height at which this transfer occurred
          type: number
        tx_id:
          description: The transaction ID in which this transfer occurred
          type: string
        transfer_type:
          description: Indicates if the transfer is from a stx-transfer transaction
            or a contract-call transaction
          enum:
          - bulk-send
          - stx-transfer
          type: string
        tx_index:
          description: Index of the transaction within a block
          type: number
      required:
      - amount
      - block_height
      - memo
      - sender
      - transfer_type
      - tx_id
      - tx_index
      title: InboundStxTransfer
      type: object
    NonFungibleTokenHoldingsList:
      additionalProperties: false
      description: List of Non-Fungible Token holdings
      example:
        total: 1
        offset: 6
        limit: 16
        results:
        - null
        - null
      properties:
        limit:
          description: The number of Non-Fungible Token holdings to return
          maximum: 200
          type: integer
        offset:
          description: The number to Non-Fungible Token holdings to skip (starting
            at `0`)
          type: integer
        total:
          description: The number of Non-Fungible Token holdings available
          type: integer
        results:
          items:
            $ref: '#/components/schemas/NonFungibleTokenHolding'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: NonFungibleTokenHoldingsList
      type: object
    AddressBalanceResponse_fungible_tokens_value:
      anyOf:
      - $ref: '#/components/schemas/FtBalance'
    PostConditionNonFungible:
      allOf:
      - $ref: '#/components/schemas/PostConditionFungible_allOf'
      - $ref: '#/components/schemas/PostConditionNonFungible_allOf'
      title: PostConditionNonFungible
      type: object
    RosettaBlockIdentifierHash:
      additionalProperties: false
      description: This is also known as the block hash.
      properties:
        hash:
          description: This is also known as the block hash.
          type: string
      required:
      - hash
      title: RosettaBlockIdentifierHash
      type: object
    TargetBlockTime:
      additionalProperties: false
      example:
        target_block_time: 0
      properties:
        target_block_time:
          type: integer
      required:
      - target_block_time
      title: TargetBlockTime
      type: object
    RosettaConstructionDeriveResponse:
      additionalProperties: false
      description: ConstructionDeriveResponse is returned by the /construction/derive
        endpoint.
      example:
        metadata: "{}"
        address: address
        account_identifier:
          metadata: "{}"
          address: address
          sub_account: "{}"
      properties:
        address:
          description: "[DEPRECATED by account_identifier in v1.4.4] Address in network-specific\
            \ format."
          type: string
        account_identifier:
          $ref: '#/components/schemas/RosettaAccountIdentifier'
        metadata:
          type: object
      title: RosettaConstructionDeriveResponse
      type: object
    NonFungibleTokenMintList:
      additionalProperties: false
      description: List of Non-Fungible Token mint events for an asset identifier
      example:
        total: 1
        offset: 6
        limit: 16
        results:
        - null
        - null
      properties:
        limit:
          description: The number of mint events to return
          maximum: 200
          type: integer
        offset:
          description: The number to mint events to skip (starting at `0`)
          type: integer
        total:
          description: The number of mint events available
          type: integer
        results:
          items:
            $ref: '#/components/schemas/NonFungibleTokenMint'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: NonFungibleTokenMintList
      type: object
    RosettaOperationIdentifier:
      additionalProperties: false
      description: The operation_identifier uniquely identifies an operation within
        a transaction.
      example:
        index: 0
        network_index: 6
      properties:
        index:
          description: "The operation index is used to ensure each operation has a\
            \ unique identifier within a transaction. This index is only relative\
            \ to the transaction and NOT GLOBAL. The operations in each transaction\
            \ should start from index 0. To clarify, there may not be any notion of\
            \ an operation index in the blockchain being described."
          type: integer
        network_index:
          description: "Some blockchains specify an operation index that is essential\
            \ for client use. For example, Bitcoin uses a network_index to identify\
            \ which UTXO was used in a transaction. network_index should not be populated\
            \ if there is no notion of an operation index in a blockchain (typically\
            \ most account-based blockchains)."
          type: integer
      required:
      - index
      title: RosettaOperationIdentifier
      type: object
    AddressStxBalanceResponse:
      allOf:
      - $ref: '#/components/schemas/StxBalance'
      - $ref: '#/components/schemas/AddressStxBalanceResponse_allOf'
      description: GET request that returns address balances
      title: AddressStxBalanceResponse
      type: object
    OtherTransactionIdentifier:
      additionalProperties: false
      description: The transaction_identifier uniquely identifies a transaction in
        a particular network and block or in the mempool.
      example:
        hash: hash
      properties:
        hash:
          description: "Any transactions that are attributable only to a block (ex:\
            \ a block event) should use the hash of the block as the identifier."
          type: string
      required:
      - hash
      title: OtherTransactionIdentifier
      type: object
    NetworkIdentifier_sub_network_identifier:
      additionalProperties: false
      description: "In blockchains with sharded state, the SubNetworkIdentifier is\
        \ required to query some object on a specific shard. This identifier is optional\
        \ for all non-sharded blockchains."
      example:
        metadata:
          producer: producer
        network: network
      properties:
        network:
          description: Network name
          type: string
        metadata:
          $ref: '#/components/schemas/NetworkIdentifier_sub_network_identifier_metadata'
      required:
      - network
      type: object
    AbstractMempoolTransaction:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0/allOf/0'
      - $ref: '#/components/schemas/AbstractMempoolTransaction_allOf'
      description: Abstract transaction. This schema makes up all properties common
        between all Stacks 2.0 transaction types
      title: AbstractMempoolTransaction
      type: object
    TransactionEventAsset:
      additionalProperties: false
      properties:
        asset_event_type:
          enum:
          - transfer
          - mint
          - burn
          title: TransactionEventAssetType
          type: string
        asset_id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: string
        value:
          type: string
      title: TransactionEventAsset
      type: object
    SmartContractTransaction:
      allOf:
      - $ref: '#/components/schemas/AbstractTransaction'
      - $ref: '#/components/schemas/SmartContractTransactionMetadata'
      description: Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract
      title: SmartContractTransaction
      type: object
    TransactionEventNonFungibleAsset:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0/allOf/1/properties/events/items/anyOf/0/allOf/0'
      - $ref: '#/components/schemas/TransactionEventNonFungibleAsset_allOf'
      title: TransactionEventNonFungibleAsset
      type: object
    BnsFetchHistoricalZoneFileResponse_anyOf:
      additionalProperties: false
      properties:
        zonefile:
          type: string
      type: object
    TransactionFeeEstimateRequest:
      additionalProperties: false
      description: POST request for estimated fee
      example:
        estimated_len: 0
        transaction_payload: transaction_payload
      properties:
        transaction_payload:
          type: string
        estimated_len:
          type: integer
      required:
      - transaction_payload
      title: TransactionFeeEstimateRequest
      type: object
    RosettaNetworkOptionsResponse_allow_operation_types_inner:
      anyOf:
      - type: string
    RosettaCoin:
      additionalProperties: false
      description: "If a blockchain is UTXO-based, all unspent Coins owned by an account_identifier\
        \ should be returned alongside the balance. It is highly recommended to populate\
        \ this field so that users of the Rosetta API implementation don't need to\
        \ maintain their own indexer to track their UTXOs."
      example:
        amount: "{}"
        coin_identifier:
          identifier: identifier
      properties:
        coin_identifier:
          $ref: '#/components/schemas/RosettaCoin_coin_identifier'
        amount:
          $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/responses/200/content/application~1json/schema/properties/balances/items'
      required:
      - amount
      - coin_identifier
      title: RosettaCoin
      type: object
    PostConditionPrincipal:
      anyOf:
      - $ref: '#/components/schemas/PostConditionPrincipal_anyOf'
      - $ref: '#/components/schemas/PostConditionPrincipal_anyOf_1'
      - $ref: '#/components/schemas/PostConditionPrincipal_anyOf_2'
      title: PostConditionPrincipal
      type: object
    AddressTransactionsWithTransfersListResponse:
      additionalProperties: false
      description: GET request that returns account transactions
      example:
        total: 1
        offset: 6
        limit: 2
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          maximum: 30
          type: integer
        offset:
          type: integer
        total:
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1address~1%7Bprincipal%7D~1%7Btx_id%7D~1with_transfers/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressTransactionsWithTransfersListResponse
      type: object
    RosettaCoin_coin_identifier:
      additionalProperties: false
      description: CoinIdentifier uniquely identifies a Coin.
      example:
        identifier: identifier
      properties:
        identifier:
          description: "Identifier should be populated with a globally unique identifier\
            \ of a Coin. In Bitcoin, this identifier would be transaction_hash:index."
          type: string
      required:
      - identifier
      type: object
    RosettaBlockIdentifierHeight:
      additionalProperties: false
      description: This is also known as the block height.
      properties:
        index:
          description: This is also known as the block height.
          type: integer
      required:
      - index
      title: RosettaBlockIdentifierHeight
      type: object
    RosettaBlockResponse:
      additionalProperties: false
      description: "A BlockResponse includes a fully-populated block or a partially-populated\
        \ block with a list of other transactions to fetch (other_transactions). As\
        \ a result of the consensus algorithm of some blockchains, blocks can be omitted\
        \ (i.e. certain block indexes can be skipped). If a query for one of these\
        \ omitted indexes is made, the response should not include a Block object.\
        \ It is VERY important to note that blocks MUST still form a canonical, connected\
        \ chain of blocks where each block has a unique index. In other words, the\
        \ PartialBlockIdentifier of a block after an omitted block should reference\
        \ the last non-omitted block."
      example:
        block:
          metadata:
            difficulty: difficulty
            transactions_root: transactions_root
          parent_block_identifier:
            index: 0
            hash: hash
          transactions:
          - "{}"
          - "{}"
          block_identifier: "{}"
          timestamp: 6
        other_transactions:
        - hash: hash
        - hash: hash
      properties:
        block:
          $ref: '#/components/schemas/RosettaBlock'
        other_transactions:
          description: "Some blockchains may require additional transactions to be\
            \ fetched that weren't returned in the block response (ex: block only\
            \ returns transaction hashes). For blockchains with a lot of transactions\
            \ in each block, this can be very useful as consumers can concurrently\
            \ fetch all transactions returned."
          items:
            $ref: '#/components/schemas/OtherTransactionIdentifier'
          type: array
      title: RosettaBlockResponse
      type: object
    ContractCallTransactionMetadata:
      additionalProperties: false
      description: Metadata associated with a contract-call type transaction
      properties:
        tx_type:
          enum:
          - contract_call
          type: string
        contract_call:
          $ref: '#/components/schemas/ContractCallTransactionMetadata_contract_call'
      required:
      - contract_call
      - tx_type
      title: ContractCallTransactionMetadata
      type: object
    AddressSearchResult_result:
      additionalProperties: false
      description: This object carries the search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - standard_address
          type: string
        metadata:
          $ref: '#/components/schemas/AddressSearchResult_result_metadata'
      required:
      - entity_id
      - entity_type
      type: object
    RosettaMempoolResponse:
      additionalProperties: false
      description: A MempoolResponse contains all transaction identifiers in the mempool
        for a particular network_identifier.
      example:
        metadata: "{}"
        transaction_identifiers:
        - "{}"
        - "{}"
      properties:
        transaction_identifiers:
          description: ""
          items:
            $ref: '#/paths/~1rosetta~1v1~1block~1transaction/post/requestBody/content/application~1json/schema/properties/transaction_identifier'
          type: array
        metadata:
          type: object
      required:
      - transaction_identifiers
      title: RosettaMempoolResponse
      type: object
    RosettaOperation:
      additionalProperties: false
      description: Operations contain all balance-changing information within a transaction.
        They are always one-sided (only affect 1 AccountIdentifier) and can succeed
        or fail independently from a Transaction.
      example:
        amount: "{}"
        metadata: "{}"
        related_operations:
        - index: 1
          network_index: 5
        - index: 1
          network_index: 5
        type: type
        coin_change:
          coin_identifier:
            identifier: identifier
          coin_action: coin_created
        account: "{}"
        operation_identifier:
          index: 0
          network_index: 6
        status: status
      properties:
        operation_identifier:
          $ref: '#/components/schemas/RosettaOperationIdentifier'
        related_operations:
          description: "Restrict referenced related_operations to identifier indexes\
            \ < the current operation_identifier.index. This ensures there exists\
            \ a clear DAG-structure of relations. Since operations are one-sided,\
            \ one could imagine relating operations in a single transfer or linking\
            \ operations in a call tree."
          items:
            $ref: '#/components/schemas/RosettaRelatedOperation'
          type: array
        type:
          description: The network-specific type of the operation. Ensure that any
            type that can be returned here is also specified in the NetworkStatus.
            This can be very useful to downstream consumers that parse all block data.
          type: string
        status:
          description: The network-specific status of the operation. Status is not
            defined on the transaction object because blockchains with smart contracts
            may have transactions that partially apply. Blockchains with atomic transactions
            (all operations succeed or all operations fail) will have the same status
            for each operation.
          type: string
        account:
          $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/requestBody/content/application~1json/schema/properties/account_identifier'
        amount:
          $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/responses/200/content/application~1json/schema/properties/balances/items'
        coin_change:
          $ref: '#/components/schemas/RosettaCoinChange'
        metadata:
          description: Operations Meta Data
          type: object
      required:
      - operation_identifier
      - type
      title: RosettaOperation
      type: object
    RosettaNetworkListResponse:
      additionalProperties: false
      description: A NetworkListResponse contains all NetworkIdentifiers that the
        node can serve information for.
      example:
        network_identifiers:
        - "{}"
        - "{}"
      properties:
        network_identifiers:
          description: The network_identifier specifies which network a particular
            object is associated with.
          items:
            $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
          type: array
      required:
      - network_identifiers
      title: RosettaNetworkListResponse
      type: object
    GetRawTransactionResult:
      additionalProperties: false
      description: GET raw transaction
      example:
        raw_tx: raw_tx
      properties:
        raw_tx:
          description: A hex encoded serialized transaction
          type: string
      required:
      - raw_tx
      title: GetRawTransactionResult
      type: object
    AbstractTransactionEvent:
      additionalProperties: false
      properties:
        event_index:
          type: integer
      required:
      - event_index
      title: AbstractTransactionEvent
      type: object
    ChainTip:
      additionalProperties: false
      description: Current chain tip information
      example:
        index_block_hash: index_block_hash
        microblock_sequence: 6
        block_hash: block_hash
        microblock_hash: microblock_hash
        block_height: 0
      properties:
        block_height:
          description: the current block height
          type: integer
        block_hash:
          description: the current block hash
          type: string
        index_block_hash:
          description: the current index block hash
          type: string
        microblock_hash:
          description: the current microblock hash
          type: string
        microblock_sequence:
          description: the current microblock sequence number
          type: integer
      required:
      - block_hash
      - block_height
      - index_block_hash
      title: ChainTip
      type: object
    TransactionNotFound_result:
      additionalProperties: false
      properties:
        tx_id:
          type: string
      required:
      - tx_id
      type: object
    ReadOnlyFunctionArgs:
      additionalProperties: false
      description: Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset
      example:
        sender: SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info
        arguments:
        - 0x0011...
        - 0x00231...
      properties:
        sender:
          description: The simulated tx-sender
          type: string
        arguments:
          description: An array of hex serialized Clarity values
          items:
            type: string
          type: array
      required:
      - arguments
      - sender
      title: ReadOnlyFunctionArgs
      type: object
    CoreNodePoxResponse:
      additionalProperties: false
      description: Get Proof of Transfer (PoX) information
      example:
        registration_window_length: 1
        rejection_fraction: 5
        reward_cycle_id: 5
        contract_id: contract_id
        reward_cycle_length: 2
        first_burnchain_block_height: 0
        rejection_votes_left_required: 7
        min_amount_ustx: 6
        total_liquid_supply_ustx: 9
      properties:
        contract_id:
          type: string
        first_burnchain_block_height:
          type: integer
        min_amount_ustx:
          type: integer
        registration_window_length:
          type: integer
        rejection_fraction:
          type: integer
        reward_cycle_id:
          type: integer
        reward_cycle_length:
          type: integer
        rejection_votes_left_required:
          type: integer
        total_liquid_supply_ustx:
          type: integer
      required:
      - contract_id
      - first_burnchain_block_height
      - min_amount_ustx
      - registration_window_length
      - rejection_fraction
      - rejection_votes_left_required
      - reward_cycle_id
      - reward_cycle_length
      - total_liquid_supply_ustx
      title: CoreNodePoxResponse
      type: object
    TransactionEvent:
      anyOf:
      - $ref: '#/components/schemas/TransactionEventSmartContractLog'
      - $ref: '#/components/schemas/TransactionEventStxLock'
      - $ref: '#/components/schemas/TransactionEventStxAsset'
      - $ref: '#/components/schemas/TransactionEventFungibleAsset'
      - $ref: '#/components/schemas/TransactionEventNonFungibleAsset'
      title: TransactionEvent
      type: object
    TokenTransferTransactionMetadata_token_transfer:
      additionalProperties: false
      properties:
        recipient_address:
          type: string
        amount:
          description: Transfer amount as Integer string (64-bit unsigned integer)
          type: string
        memo:
          description: "Hex encoded arbitrary message, up to 34 bytes length (should\
            \ try decoding to an ASCII string)"
          type: string
      required:
      - amount
      - memo
      - recipient_address
      type: object
    RosettaErrorNoDetails:
      additionalProperties: false
      description: "Instead of utilizing HTTP status codes to describe node errors\
        \ (which often do not have a good analog), rich errors are returned using\
        \ this object. Both the code and message fields can be individually used to\
        \ correctly identify an error. Implementations MUST use unique values for\
        \ both fields."
      example:
        retriable: true
        code: 0
        message: message
      properties:
        code:
          description: "Code is a network-specific error code. If desired, this code\
            \ can be equivalent to an HTTP status code."
          type: integer
        message:
          description: "Message is a network-specific error message. The message MUST\
            \ NOT change for a given code. In particular, this means that any contextual\
            \ information should be included in the details field."
          type: string
        retriable:
          description: An error is retriable if the same request may succeed if submitted
            again.
          type: boolean
      required:
      - code
      - message
      - retriable
      title: RosettaErrorNoDetails
      type: object
    RosettaPeers:
      additionalProperties: false
      description: A Peer is a representation of a node's peer.
      example:
        metadata: "{}"
        peer_id: peer_id
      properties:
        peer_id:
          description: peer id
          type: string
        metadata:
          description: meta data
          type: object
      required:
      - peer_id
      title: RosettaPeers
      type: object
    RosettaTransaction:
      additionalProperties: false
      description: Transactions contain an array of Operations that are attributable
        to the same TransactionIdentifier.
      example:
        metadata:
          size: 0
          lockTime: 6
          memo: memo
        operations:
        - "{}"
        - "{}"
        transaction_identifier: "{}"
      properties:
        transaction_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block~1transaction/post/requestBody/content/application~1json/schema/properties/transaction_identifier'
        operations:
          description: List of operations
          items:
            $ref: '#/paths/~1rosetta~1v1~1construction~1payloads/post/requestBody/content/application~1json/schema/properties/operations/items'
          type: array
        metadata:
          $ref: '#/components/schemas/RosettaTransaction_metadata'
      required:
      - operations
      - transaction_identifier
      title: RosettaTransaction
      type: object
    RosettaConstructionCombineRequest:
      additionalProperties: false
      description: RosettaConstructionCombineRequest is the input to the /construction/combine
        endpoint. It contains the unsigned transaction blob returned by /construction/payloads
        and all required signatures to create a network transaction.
      example:
        unsigned_transaction: unsigned_transaction
        signatures:
        - public_key: "{}"
          signing_payload: "{}"
          hex_bytes: hex_bytes
          signature_type: ecdsa
        - public_key: "{}"
          signing_payload: "{}"
          hex_bytes: hex_bytes
          signature_type: ecdsa
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        unsigned_transaction:
          type: string
        signatures:
          items:
            $ref: '#/components/schemas/RosettaSignature'
          type: array
      required:
      - network_identifier
      - signatures
      - unsigned_transaction
      title: RosettaConstructionCombineRequest
      type: object
    AddressTransactionWithTransfers_nft_transfers_inner:
      additionalProperties: false
      example:
        sender: sender
        asset_identifier: asset_identifier
        recipient: recipient
        value:
          repr: repr
          hex: hex
      properties:
        asset_identifier:
          description: Non Fungible Token asset identifier.
          type: string
        value:
          $ref: '#/components/schemas/AddressTransactionWithTransfers_nft_transfers_inner_value'
        sender:
          description: Principal that sent the asset.
          type: string
        recipient:
          description: Principal that received the asset.
          type: string
      required:
      - asset_identifier
      - value
      type: object
    RosettaNetworkOptionsResponse:
      additionalProperties: false
      description: "NetworkOptionsResponse contains information about the versioning\
        \ of the node and the allowed operation statuses, operation types, and errors."
      example:
        allow:
          operation_types:
          - null
          - null
          historical_balance_lookup: true
          operation_statuses:
          - status: status
            successful: true
          - status: status
            successful: true
          errors:
          - retriable: true
            code: 0
            message: message
          - retriable: true
            code: 0
            message: message
        version:
          metadata: "{}"
          rosetta_version: rosetta_version
          node_version: node_version
          middleware_version: middleware_version
      properties:
        version:
          $ref: '#/components/schemas/RosettaNetworkOptionsResponse_version'
        allow:
          $ref: '#/components/schemas/RosettaNetworkOptionsResponse_allow'
      required:
      - allow
      - version
      title: RosettaNetworkOptionsResponse
      type: object
    BnsFetchFileZoneResponse_anyOf:
      additionalProperties: false
      properties:
        zonefile:
          pattern: .+
          type: string
      type: object
    PostCoreNodeTransactionsError:
      additionalProperties: false
      description: GET request that returns transactions
      properties:
        error:
          description: The error
          type: string
        reason:
          description: The reason for the error
          type: string
        reason_data:
          description: More details about the reason
          type: object
        txid:
          description: The relevant transaction id
          type: string
      required:
      - error
      - reason
      - reason_data
      - txid
      title: PostCoreNodeTransactionsError
      type: object
    RosettaConstructionCombineResponse:
      additionalProperties: false
      description: RosettaConstructionCombineResponse is returned by /construction/combine.
        The network payload will be sent directly to the construction/submit endpoint.
      example:
        signed_transaction: signed_transaction
      properties:
        signed_transaction:
          description: Signed transaction bytes in hex
          type: string
      required:
      - signed_transaction
      title: RosettaConstructionCombineResponse
      type: object
    RosettaError:
      additionalProperties: false
      description: "Instead of utilizing HTTP status codes to describe node errors\
        \ (which often do not have a good analog), rich errors are returned using\
        \ this object. Both the code and message fields can be individually used to\
        \ correctly identify an error. Implementations MUST use unique values for\
        \ both fields."
      properties:
        code:
          description: "Code is a network-specific error code. If desired, this code\
            \ can be equivalent to an HTTP status code."
          type: integer
        message:
          description: "Message is a network-specific error message. The message MUST\
            \ NOT change for a given code. In particular, this means that any contextual\
            \ information should be included in the details field."
          type: string
        retriable:
          description: An error is retriable if the same request may succeed if submitted
            again.
          type: boolean
        details:
          $ref: '#/components/schemas/RosettaError_details'
      required:
      - code
      - message
      - retriable
      title: RosettaError
      type: object
    RosettaSubAccount:
      additionalProperties: false
      description: An account may have state specific to a contract address (ERC-20
        token) and/or a stake (delegated balance). The sub_account_identifier should
        specify which state (if applicable) an account instantiation refers to.
      example:
        metadata: "{}"
        address: address
      properties:
        address:
          description: The address may be a cryptographic public key (or some encoding
            of it) or a provided username.
          type: string
        metadata:
          description: "If the SubAccount address is not sufficient to uniquely specify\
            \ a SubAccount, any other identifying information can be stored here.\
            \ It is important to note that two SubAccounts with identical addresses\
            \ but differing metadata will not be considered equal by clients."
          type: object
      required:
      - address
      title: RosettaSubAccount
      type: object
    NonFungibleTokenHoldingWithTxMetadata:
      additionalProperties: false
      description: Ownership of a Non-Fungible Token with transaction metadata
      properties:
        asset_identifier:
          type: string
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        block_height:
          type: number
        tx:
          $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
      required:
      - asset_identifier
      - block_height
      - tx
      - value
      title: NonFungibleTokenHoldingWithTxMetadata
      type: object
    NftEvent_value:
      additionalProperties: false
      description: Identifier of the NFT
      example:
        repr: repr
        hex: hex
      properties:
        hex:
          description: Hex string representing the identifier of the NFT
          type: string
        repr:
          description: Readable string of the NFT identifier
          type: string
      required:
      - hex
      - repr
      type: object
    NetworkIdentifier:
      additionalProperties: false
      description: The network_identifier specifies which network a particular object
        is associated with.
      example:
        blockchain: blockchain
        sub_network_identifier:
          metadata:
            producer: producer
          network: network
        network: network
      properties:
        blockchain:
          description: Blockchain name
          type: string
        network:
          description: "If a blockchain has a specific chain-id or network identifier,\
            \ it should go in this field. It is up to the client to determine which\
            \ network-specific identifier is mainnet or testnet."
          type: string
        sub_network_identifier:
          $ref: '#/components/schemas/NetworkIdentifier_sub_network_identifier'
      required:
      - blockchain
      - network
      title: NetworkIdentifier
      type: object
    MempoolTxSearchResult_result_tx_data:
      additionalProperties: false
      description: Returns basic search result information about the requested id
      properties:
        tx_type:
          type: string
      required:
      - tx_type
      type: object
    TransactionFeeEstimateResponse:
      additionalProperties: false
      description: POST response for estimated fee
      example:
        cost_scalar_change_by_byte: 6.027456183070403
        estimated_cost:
          write_length: 7
          runtime: 5
          write_count: 2
          read_length: 5
          read_count: 1
        estimated_cost_scalar: 0
        estimations:
        - fee: 3.616076749251911
          fee_rate: 9.301444243932576
        - fee: 3.616076749251911
          fee_rate: 9.301444243932576
      properties:
        estimated_cost_scalar:
          type: integer
        cost_scalar_change_by_byte:
          type: number
        estimated_cost:
          $ref: '#/components/schemas/TransactionFeeEstimateResponse_estimated_cost'
        estimations:
          items:
            $ref: '#/components/schemas/TransactionFeeEstimateResponse_estimations_inner'
          type: array
      required:
      - estimated_cost
      - estimated_cost_scalar
      title: TransactionFeeEstimateResponse
      type: object
    CoinbaseTransactionMetadata_coinbase_payload:
      additionalProperties: false
      properties:
        data:
          description: Hex encoded 32-byte scratch space for block leader's use
          type: string
      required:
      - data
      type: object
    BnsFetchHistoricalZoneFileResponse_anyOf_1:
      additionalProperties: false
      properties:
        error:
          type: string
      type: object
    MapEntryResponse:
      additionalProperties: false
      description: Response of get data map entry request
      example:
        data: data
        proof: proof
      properties:
        data:
          description: Hex-encoded string of clarity value. It is always an optional
            tuple.
          type: string
        proof:
          description: Hex-encoded string of the MARF proof for the data
          type: string
      required:
      - data
      title: MapEntryResponse
      type: object
    NetworkIdentifier_sub_network_identifier_metadata:
      description: Meta data from subnetwork identifier
      example:
        producer: producer
      properties:
        producer:
          description: producer
          type: string
      required:
      - producer
      type: object
    PostConditionPrincipal_anyOf:
      additionalProperties: false
      description: Principal Origin
      properties:
        type_id:
          description: String literal of type `PostConditionPrincipalType`
          enum:
          - principal_origin
          type: string
      required:
      - type_id
      type: object
    AddressStxInboundListResponse:
      additionalProperties: false
      description: GET request that returns a list of inbound STX transfers with a
        memo
      example:
        total: 1
        offset: 6
        limit: 2
        results:
        - amount: amount
          sender: sender
          memo: memo
          block_height: 5.962133916683182
          transfer_type: bulk-send
          tx_id: tx_id
          tx_index: 5.637376656633329
        - amount: amount
          sender: sender
          memo: memo
          block_height: 5.962133916683182
          transfer_type: bulk-send
          tx_id: tx_id
          tx_index: 5.637376656633329
      properties:
        limit:
          maximum: 30
          type: integer
        offset:
          type: integer
        total:
          type: integer
        results:
          items:
            $ref: '#/components/schemas/InboundStxTransfer'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressStxInboundListResponse
      type: object
    RosettaMempoolRequest:
      additionalProperties: false
      description: Get all Transaction Identifiers in the mempool
      example:
        metadata: "{}"
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        metadata:
          type: object
      required:
      - network_identifier
      title: RosettaMempoolRequest
      type: object
    RosettaCoinChange_coin_identifier:
      description: CoinIdentifier uniquely identifies a Coin.
      example:
        identifier: identifier
      properties:
        identifier:
          description: "Identifier should be populated with a globally unique identifier\
            \ of a Coin. In Bitcoin, this identifier would be transaction_hash:index."
          type: string
      required:
      - identifier
      type: object
    AbstractMempoolTransaction_allOf:
      additionalProperties: false
      properties:
        tx_status:
          description: Status of the transaction
          enum:
          - pending
          - dropped_replace_by_fee
          - dropped_replace_across_fork
          - dropped_too_expensive
          - dropped_stale_garbage_collect
          title: MempoolTransactionStatus
          type: string
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: number
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
      required:
      - receipt_time
      - receipt_time_iso
      - tx_status
      type: object
    NftBalance:
      additionalProperties: false
      properties:
        count:
          type: string
        total_sent:
          type: string
        total_received:
          type: string
      required:
      - count
      - total_received
      - total_sent
      title: NftBalance
      type: object
    NonFungibleTokenHistoryEventList:
      additionalProperties: false
      description: List of Non-Fungible Token history events
      example:
        total: 1
        offset: 6
        limit: 16
        results:
        - null
        - null
      properties:
        limit:
          description: The number of events to return
          maximum: 200
          type: integer
        offset:
          description: The number to events to skip (starting at `0`)
          type: integer
        total:
          description: The number of events available
          type: integer
        results:
          items:
            $ref: '#/components/schemas/NonFungibleTokenHistoryEvent'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: NonFungibleTokenHistoryEventList
      type: object
    BlockListResponse:
      additionalProperties: false
      description: GET request that returns blocks
      example:
        total: 1
        offset: 6
        limit: 2
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          description: The number of blocks to return
          maximum: 30
          type: integer
        offset:
          default: 0
          description: The number to blocks to skip (starting at `0`)
          type: integer
        total:
          description: The number of blocks available
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1block~1%7Bhash%7D/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: BlockListResponse
      type: object
    PostConditionFungible_allOf_1:
      additionalProperties: false
      properties:
        condition_code:
          $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0/allOf/0/properties/post_conditions/items/anyOf/0/allOf/1/properties/condition_code'
        type:
          enum:
          - fungible
          type: string
        amount:
          type: string
        asset:
          $ref: '#/components/schemas/PostConditionFungible_allOf_1_asset'
      required:
      - amount
      - asset
      - condition_code
      - type
      type: object
    TransactionEventFungibleAsset_allOf_asset:
      additionalProperties: false
      properties:
        asset_event_type:
          type: string
        asset_id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: string
      required:
      - amount
      - asset_event_type
      - asset_id
      - recipient
      - sender
      type: object
    RosettaOldestBlockIdentifier:
      additionalProperties: false
      description: The block_identifier uniquely identifies a block in a particular
        network.
      example:
        index: 1
        hash: hash
      properties:
        index:
          description: This is also known as the block height.
          type: integer
        hash:
          description: Block hash
          type: string
      required:
      - hash
      - index
      title: RosettaOldestBlockIdentifier
      type: object
    RosettaMempoolTransactionRequest:
      additionalProperties: false
      description: A MempoolTransactionRequest is utilized to retrieve a transaction
        from the mempool.
      example:
        transaction_identifier: "{}"
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        transaction_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block~1transaction/post/requestBody/content/application~1json/schema/properties/transaction_identifier'
      required:
      - network_identifier
      - transaction_identifier
      title: RosettaMempoolTransactionRequest
      type: object
    BurnchainRewardsTotal:
      additionalProperties: false
      description: Total burnchain rewards made to a recipient
      example:
        reward_amount: reward_amount
        reward_recipient: reward_recipient
      properties:
        reward_recipient:
          description: "The recipient address that received the burnchain rewards,\
            \ in the format native to the burnchain (e.g. B58 encoded for Bitcoin)"
          type: string
        reward_amount:
          description: "The total amount of burnchain tokens rewarded to the recipient,\
            \ in the smallest unit (e.g. satoshis for Bitcoin)"
          type: string
      required:
      - reward_amount
      - reward_recipient
      title: BurnchainRewardsTotal
      type: object
    RosettaPartialBlockIdentifier:
      anyOf:
      - $ref: '#/components/schemas/RosettaBlockIdentifierHash'
      - $ref: '#/components/schemas/RosettaBlockIdentifierHeight'
      - type: object
      description: "When fetching data by BlockIdentifier, it may be possible to only\
        \ specify the index or hash. If neither property is specified, it is assumed\
        \ that the client is making a request at the current block."
      title: RosettaPartialBlockIdentifier
      type: object
    RosettaTransaction_metadata:
      description: Transactions that are related to other transactions (like a cross-shard
        transaction) should include the tranaction_identifier of these transactions
        in the metadata.
      example:
        size: 0
        lockTime: 6
        memo: memo
      properties:
        memo:
          description: STX token transfer memo.
          type: string
        size:
          description: The Size
          type: integer
        lockTime:
          description: The locktime
          type: integer
      type: object
    CoinbaseTransactionMetadata:
      additionalProperties: false
      description: "Describes representation of a Type 3 Stacks 2.0 transaction: Poison\
        \ Microblock"
      properties:
        tx_type:
          enum:
          - coinbase
          type: string
        coinbase_payload:
          $ref: '#/components/schemas/CoinbaseTransactionMetadata_coinbase_payload'
      required:
      - coinbase_payload
      - tx_type
      title: CoinbaseTransactionMetadata
      type: object
    PostCondition:
      anyOf:
      - $ref: '#/components/schemas/PostConditionStx'
      - $ref: '#/components/schemas/PostConditionFungible'
      - $ref: '#/components/schemas/PostConditionNonFungible'
      description: Post-conditionscan limit the damage done to a user's assets
      title: PostCondition
    RosettaConstructionPayloadsRequest:
      additionalProperties: false
      description: "ConstructionPayloadsRequest is the request to /construction/payloads.\
        \ It contains the network, a slice of operations, and arbitrary metadata that\
        \ was returned by the call to /construction/metadata. Optionally, the request\
        \ can also include an array of PublicKeys associated with the AccountIdentifiers\
        \ returned in ConstructionPreprocessResponse."
      example:
        public_keys:
        - "{}"
        - "{}"
        metadata:
          account_sequence: 0
          recent_block_hash: recent_block_hash
        operations:
        - amount: "{}"
          metadata: "{}"
          related_operations:
          - index: 1
            network_index: 5
          - index: 1
            network_index: 5
          type: type
          coin_change:
            coin_identifier:
              identifier: identifier
            coin_action: coin_created
          account: "{}"
          operation_identifier:
            index: 0
            network_index: 6
          status: status
        - amount: "{}"
          metadata: "{}"
          related_operations:
          - index: 1
            network_index: 5
          - index: 1
            network_index: 5
          type: type
          coin_change:
            coin_identifier:
              identifier: identifier
            coin_action: coin_created
          account: "{}"
          operation_identifier:
            index: 0
            network_index: 6
          status: status
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        operations:
          items:
            $ref: '#/components/schemas/RosettaOperation'
          type: array
        public_keys:
          items:
            $ref: '#/paths/~1rosetta~1v1~1construction~1derive/post/requestBody/content/application~1json/schema/properties/public_key'
          type: array
        metadata:
          $ref: '#/components/schemas/RosettaConstructionMetadataResponse_metadata'
      required:
      - network_identifier
      - operations
      title: RosettaConstructionPayloadsRequest
      type: object
    RosettaAccount:
      additionalProperties: false
      description: "The account_identifier uniquely identifies an account within a\
        \ network. All fields in the account_identifier are utilized to determine\
        \ this uniqueness (including the metadata field, if populated)."
      example:
        metadata: "{}"
        address: address
        sub_account:
          metadata: "{}"
          address: address
      properties:
        address:
          description: The address may be a cryptographic public key (or some encoding
            of it) or a provided username.
          type: string
        sub_account:
          $ref: '#/components/schemas/RosettaSubAccount'
        metadata:
          description: Blockchains that utilize a username model (where the address
            is not a derivative of a cryptographic public key) should specify the
            public key(s) owned by the address in metadata.
          type: object
      required:
      - address
      title: RosettaAccount
      type: object
    PoisonMicroblockTransactionMetadata_poison_microblock:
      additionalProperties: false
      properties:
        microblock_header_1:
          description: Hex encoded microblock header
          type: string
        microblock_header_2:
          description: Hex encoded microblock header
          type: string
      required:
      - microblock_header_1
      - microblock_header_2
      type: object
    RosettaAccountIdentifier:
      description: "The account_identifier uniquely identifies an account within a\
        \ network. All fields in the account_identifier are utilized to determine\
        \ this uniqueness (including the metadata field, if populated)."
      example:
        metadata: "{}"
        address: address
        sub_account: "{}"
      properties:
        address:
          description: The address may be a cryptographic public key (or some encoding
            of it) or a provided username.
          type: string
        sub_account:
          $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/requestBody/content/application~1json/schema/properties/account_identifier/properties/sub_account'
        metadata:
          description: Blockchains that utilize a username model (where the address
            is not a derivative of a cryptographic public key) should specify the
            public key(s) owned by the address in metadata.
          type: object
      required:
      - address
      title: RosettaAccountIdentifier
      type: object
    MempoolTransaction:
      anyOf:
      - $ref: '#/components/schemas/MempoolTokenTransferTransaction'
      - allOf:
        - $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0'
        - $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D/get/responses/200/content/application~1json/schema/allOf/1'
        description: Describes representation of a Type-1 Stacks 2.0 transaction.
          https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract
        title: MempoolSmartContractTransaction
        type: object
      - allOf:
        - $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0'
        - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/2/allOf/1'
        description: "Describes representation of a Type 2 Stacks 2.0 transaction:\
          \ Contract Call"
        title: MempoolContractCallTransaction
        type: object
      - allOf:
        - $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0'
        - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/3/allOf/1'
        description: "Describes representation of a Type 3 Stacks 2.0 transaction:\
          \ Poison Microblock"
        title: MempoolPoisonMicroblockTransaction
        type: object
      - allOf:
        - $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0'
        - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/4/allOf/1'
        description: "Describes representation of a Type 3 Stacks 2.0 transaction:\
          \ Poison Microblock"
        title: MempoolCoinbaseTransaction
        type: object
      description: Describes all transaction types on Stacks 2.0 blockchain
      title: MempoolTransaction
      type: object
    run_faucet_btc_request:
      example:
        address: 2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts
      properties:
        address:
          description: BTC testnet address
          type: string
      type: object
    AbstractTransaction_allOf_tx_result:
      additionalProperties: false
      description: "Result of the transaction. For contract calls, this will show\
        \ the value returned by the call. For other transaction types, this will return\
        \ a boolean indicating the success of the transaction."
      properties:
        hex:
          description: Hex string representing the value fo the transaction result
          type: string
        repr:
          description: Readable string of the transaction result
          type: string
      required:
      - hex
      - repr
      type: object
    TransactionEventFungibleAsset:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0/allOf/1/properties/events/items/anyOf/0/allOf/0'
      - $ref: '#/components/schemas/TransactionEventFungibleAsset_allOf'
      title: TransactionEventFungibleAsset
      type: object
    RosettaRelatedOperation:
      additionalProperties: false
      description: "Restrict referenced related_operations to identifier indexes <\
        \ the current operation_identifier.index. This ensures there exists a clear\
        \ DAG-structure of relations. Since operations are one-sided, one could imagine\
        \ relating operations in a single transfer or linking operations in a call\
        \ tree."
      example:
        index: 1
        network_index: 5
      properties:
        index:
          description: Describes the index of related operation.
          type: integer
        network_index:
          description: Some blockchains specify an operation index that is essential
            for client use. network_index should not be populated if there is no notion
            of an operation index in a blockchain (typically most account-based blockchains).
          type: integer
      required:
      - index
      title: RosettaRelatedOperation
      type: object
    TransactionEventStxAsset_allOf:
      additionalProperties: false
      properties:
        event_type:
          enum:
          - stx_asset
          type: string
        tx_id:
          type: string
        asset:
          $ref: '#/components/schemas/TransactionEventAsset'
      required:
      - asset
      - event_type
      - tx_id
      type: object
    SearchErrorResult_result:
      additionalProperties: false
      properties:
        entity_type:
          description: Shows the currenty category of entity it is searched in.
          enum:
          - standard_address
          - unknown_hash
          - contract_address
          - invalid_term
          type: string
      required:
      - entity_type
      type: object
    CoinbaseTransaction:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D/get/responses/200/content/application~1json/schema/allOf/0'
      - $ref: '#/components/schemas/CoinbaseTransactionMetadata'
      description: "Describes representation of a Type 3 Stacks 2.0 transaction: Poison\
        \ Microblock"
      title: CoinbaseTransaction
      type: object
    NonFungibleTokenHistoryEventWithTxMetadata:
      additionalProperties: false
      description: Non-Fungible Token history event with transaction metadata
      properties:
        sender:
          nullable: true
          type: string
        recipient:
          type: string
        event_index:
          type: integer
        asset_event_type:
          type: string
        tx:
          $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
      required:
      - asset_event_type
      - event_index
      - tx
      title: NonFungibleTokenHistoryEventWithTxMetadata
      type: object
    AddressTransactionWithTransfers_stx_transfers_inner:
      additionalProperties: false
      example:
        amount: amount
        sender: sender
        recipient: recipient
      properties:
        amount:
          description: Amount transferred in micro-STX as an integer string.
          type: string
        sender:
          description: Principal that sent STX. This is unspecified if the STX were
            minted.
          type: string
        recipient:
          description: Principal that received STX. This is unspecified if the STX
            were burned.
          type: string
      required:
      - amount
      type: object
    AddressBalanceResponse:
      additionalProperties: false
      description: GET request that returns address balances
      example:
        token_offering_locked:
          unlock_schedule:
          - amount: amount
            block_height: 0.8008281904610115
          - amount: amount
            block_height: 0.8008281904610115
          total_locked: total_locked
          total_unlocked: total_unlocked
        stx: "{}"
        non_fungible_tokens:
          key: null
        fungible_tokens:
          key: null
      properties:
        stx:
          $ref: '#/paths/~1extended~1v1~1address~1%7Bprincipal%7D~1stx/get/responses/200/content/application~1json/schema/allOf/0'
        fungible_tokens:
          additionalProperties:
            $ref: '#/components/schemas/AddressBalanceResponse_fungible_tokens_value'
          type: object
        non_fungible_tokens:
          additionalProperties:
            $ref: '#/components/schemas/AddressBalanceResponse_non_fungible_tokens_value'
          type: object
        token_offering_locked:
          $ref: '#/components/schemas/AddressTokenOfferingLocked'
      required:
      - fungible_tokens
      - non_fungible_tokens
      - stx
      title: AddressBalanceResponse
      type: object
    TransactionFeeEstimateResponse_estimated_cost:
      additionalProperties: false
      example:
        write_length: 7
        runtime: 5
        write_count: 2
        read_length: 5
        read_count: 1
      properties:
        read_count:
          type: integer
        read_length:
          type: integer
        runtime:
          type: integer
        write_count:
          type: integer
        write_length:
          type: integer
      required:
      - read_count
      - read_length
      - runtime
      - write_count
      - write_length
      type: object
    TransactionEventStxAsset:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0/allOf/1/properties/events/items/anyOf/0/allOf/0'
      - $ref: '#/components/schemas/TransactionEventStxAsset_allOf'
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: TransactionEventStxAsset
      type: object
    AddressAssetsListResponse:
      additionalProperties: false
      description: GET request that returns address assets
      example:
        total: 1
        offset: 6
        limit: 2
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          maximum: 30
          type: integer
        offset:
          type: integer
        total:
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D~1events/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressAssetsListResponse
      type: object
    AddressTransactionWithTransfers:
      additionalProperties: false
      description: Transaction with STX transfers for a given address
      example:
        stx_sent: stx_sent
        nft_transfers:
        - sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
          value:
            repr: repr
            hex: hex
        - sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
          value:
            repr: repr
            hex: hex
        tx: "{}"
        stx_received: stx_received
        stx_transfers:
        - amount: amount
          sender: sender
          recipient: recipient
        - amount: amount
          sender: sender
          recipient: recipient
        ft_transfers:
        - amount: amount
          sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
        - amount: amount
          sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
      properties:
        tx:
          $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
        stx_sent:
          description: "Total sent from the given address, including the tx fee, in\
            \ micro-STX as an integer string."
          type: string
        stx_received:
          description: Total received by the given address in micro-STX as an integer
            string.
          type: string
        stx_transfers:
          items:
            $ref: '#/components/schemas/AddressTransactionWithTransfers_stx_transfers_inner'
          type: array
        ft_transfers:
          items:
            $ref: '#/components/schemas/AddressTransactionWithTransfers_ft_transfers_inner'
          type: array
        nft_transfers:
          items:
            $ref: '#/components/schemas/AddressTransactionWithTransfers_nft_transfers_inner'
          type: array
      required:
      - stx_received
      - stx_sent
      - stx_transfers
      - tx
      title: AddressTransactionWithTransfers
      type: object
    TransactionEventNonFungibleAsset_allOf_asset:
      additionalProperties: false
      properties:
        asset_event_type:
          type: string
        asset_id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        value:
          $ref: '#/components/schemas/PostConditionNonFungible_allOf_asset_value'
      required:
      - asset_event_type
      - asset_id
      - recipient
      - sender
      - value
      type: object
    ContractCallTransactionMetadata_contract_call_function_args_inner:
      additionalProperties: false
      properties:
        hex:
          type: string
        repr:
          type: string
        name:
          type: string
        type:
          type: string
      required:
      - hex
      - name
      - repr
      - type
      type: object
    MempoolTxSearchResult:
      additionalProperties: false
      description: Contract search result
      properties:
        found:
          default: true
          description: Indicates if the requested object was found or not
          type: boolean
        result:
          $ref: '#/components/schemas/MempoolTxSearchResult_result'
      required:
      - found
      - result
      title: MempoolTxSearchResult
      type: object
    BurnchainRewardSlotHolder:
      additionalProperties: false
      description: Reward slot holder on the burnchain
      example:
        burn_block_hash: burn_block_hash
        address: address
        slot_index: 5
        canonical: true
        burn_block_height: 5
      properties:
        canonical:
          description: Set to `true` if block corresponds to the canonical burchchain
            tip
          type: boolean
        burn_block_hash:
          description: The hash representing the burnchain block
          type: string
        burn_block_height:
          description: Height of the burnchain block
          type: integer
        address:
          description: "The recipient address that validly received PoX commitments,\
            \ in the format native to the burnchain (e.g. B58 encoded for Bitcoin)"
          type: string
        slot_index:
          description: "The index position of the reward entry, useful for ordering\
            \ when there's more than one slot per burnchain block"
          type: integer
      required:
      - address
      - burn_block_hash
      - burn_block_height
      - canonical
      - slot_index
      title: BurnchainRewardSlotHolder
      type: object
    TxSearchResult_result:
      additionalProperties: false
      description: This object carries the search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - tx_id
          type: string
        tx_data:
          $ref: '#/components/schemas/TxSearchResult_result_tx_data'
        metadata:
          $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
      required:
      - entity_id
      - entity_type
      - tx_data
      type: object
    RosettaAccountBalanceRequest:
      additionalProperties: false
      description: "An AccountBalanceRequest is utilized to make a balance request\
        \ on the /account/balance endpoint. If the block_identifier is populated,\
        \ a historical balance query should be performed."
      example:
        account_identifier:
          metadata: "{}"
          address: address
          sub_account:
            metadata: "{}"
            address: address
        network_identifier: "{}"
        block_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        account_identifier:
          $ref: '#/components/schemas/RosettaAccount'
        block_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/block_identifier'
      required:
      - account_identifier
      - network_identifier
      title: RosettaAccountBalanceRequest
      type: object
    TransactionEventSmartContractLog:
      allOf:
      - $ref: '#/components/schemas/AbstractTransactionEvent'
      - $ref: '#/components/schemas/TransactionEventSmartContractLog_allOf'
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: TransactionEventSmartContractLog
      type: object
    AddressTransactionWithTransfers_ft_transfers_inner:
      additionalProperties: false
      example:
        amount: amount
        sender: sender
        asset_identifier: asset_identifier
        recipient: recipient
      properties:
        asset_identifier:
          description: Fungible Token asset identifier.
          type: string
        amount:
          description: Amount transferred as an integer string. This balance does
            not factor in possible SIP-010 decimals.
          type: string
        sender:
          description: Principal that sent the asset.
          type: string
        recipient:
          description: Principal that received the asset.
          type: string
      required:
      - amount
      - asset_identifier
      type: object
    TxSearchResult_result_tx_data:
      additionalProperties: false
      description: Returns basic search result information about the requested id
      properties:
        canonical:
          description: If the transaction lies within the canonical chain
          type: boolean
        block_hash:
          description: Refers to the hash of the block for searched transaction
          type: string
        burn_block_time:
          type: integer
        block_height:
          type: integer
        tx_type:
          type: string
      required:
      - block_hash
      - block_height
      - burn_block_time
      - canonical
      - tx_type
      type: object
    BnsGetNameInfoResponse:
      additionalProperties: false
      description: Get name details
      example:
        expire_block: 0
        resolver: resolver
        address: address
        blockchain: blockchain
        last_txid: last_txid
        grace_period: 0
        zonefile_hash: zonefile_hash
        status: status
        zonefile: zonefile
      properties:
        address:
          type: string
        blockchain:
          pattern: ^stacks$
          type: string
        expire_block:
          minimum: 0
          type: integer
        grace_period:
          minimum: 0
          type: integer
        last_txid:
          type: string
        resolver:
          type: string
        status:
          type: string
        zonefile:
          type: string
        zonefile_hash:
          type: string
      required:
      - address
      - blockchain
      - last_txid
      - status
      - zonefile
      - zonefile_hash
      title: BnsGetNameInfoResponse
      type: object
    RosettaSyncStatus:
      additionalProperties: false
      description: "SyncStatus is used to provide additional context about an implementation's\
        \ sync status. It is often used to indicate that an implementation is healthy\
        \ when it cannot be queried until some sync phase occurs. If an implementation\
        \ is immediately queryable, this model is often not populated."
      example:
        target_index: 5
        synced: true
        stage: stage
        current_index: 5
      properties:
        current_index:
          description: CurrentIndex is the index of the last synced block in the current
            stage.
          type: integer
        target_index:
          description: TargetIndex is the index of the block that the implementation
            is attempting to sync to in the current stage.
          type: integer
        stage:
          description: Stage is the phase of the sync process.
          type: string
        synced:
          description: Synced indicates if an implementation has synced up to the
            most recent block.
          type: boolean
      required:
      - current_index
      title: RosettaSyncStatus
      type: object
    RosettaOperationStatus:
      additionalProperties: false
      description: OperationStatus is utilized to indicate which Operation status
        are considered successful.
      example:
        status: status
        successful: true
      properties:
        status:
          description: The status is the network-specific status of the operation.
          type: string
        successful:
          description: "An Operation is considered successful if the Operation.Amount\
            \ should affect the Operation.Account. Some blockchains (like Bitcoin)\
            \ only include successful operations in blocks but other blockchains (like\
            \ Ethereum) include unsuccessful operations that incur a fee. To reconcile\
            \ the computed balance from the stream of Operations, it is critical to\
            \ understand which Operation.Status indicate an Operation is successful\
            \ and should affect an Account."
          type: boolean
      required:
      - status
      - successful
      title: RosettaOperationStatus
      type: object
    RosettaNetworkOptionsResponse_allow:
      additionalProperties: false
      description: "Allow specifies supported Operation status, Operation types, and\
        \ all possible error statuses. This Allow object is used by clients to validate\
        \ the correctness of a Rosetta Server implementation. It is expected that\
        \ these clients will error if they receive some response that contains any\
        \ of the above information that is not specified here."
      example:
        operation_types:
        - null
        - null
        historical_balance_lookup: true
        operation_statuses:
        - status: status
          successful: true
        - status: status
          successful: true
        errors:
        - retriable: true
          code: 0
          message: message
        - retriable: true
          code: 0
          message: message
      properties:
        operation_statuses:
          description: All Operation.Status this implementation supports. Any status
            that is returned during parsing that is not listed here will cause client
            validation to error.
          items:
            $ref: '#/components/schemas/RosettaOperationStatus'
          type: array
        operation_types:
          description: All Operation.Type this implementation supports. Any type that
            is returned during parsing that is not listed here will cause client validation
            to error.
          items:
            $ref: '#/components/schemas/RosettaNetworkOptionsResponse_allow_operation_types_inner'
          type: array
        errors:
          description: All Errors that this implementation could return. Any error
            that is returned during parsing that is not listed here will cause client
            validation to error.
          items:
            $ref: '#/components/schemas/RosettaErrorNoDetails'
          type: array
        historical_balance_lookup:
          description: Any Rosetta implementation that supports querying the balance
            of an account at any height in the past should set this to true.
          type: boolean
      required:
      - errors
      - historical_balance_lookup
      - operation_statuses
      - operation_types
      type: object
    RosettaConstructionSubmitResponse:
      additionalProperties: false
      description: TransactionIdentifier contains the transaction_identifier of a
        transaction that was submitted to either /construction/submit.
      example:
        metadata: "{}"
        transaction_identifier: "{}"
      properties:
        transaction_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block~1transaction/post/requestBody/content/application~1json/schema/properties/transaction_identifier'
        metadata:
          type: object
      required:
      - transaction_identifier
      title: RosettaConstructionSubmitResponse
      type: object
    RosettaConstructionParseRequest:
      additionalProperties: false
      description: Parse is called on both unsigned and signed transactions to understand
        the intent of the formulated transaction. This is run as a sanity check before
        signing (after /construction/payloads) and before broadcast (after /construction/combine).
      example:
        signed: true
        transaction: transaction
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        signed:
          description: Signed is a boolean indicating whether the transaction is signed.
          type: boolean
        transaction:
          description: This must be either the unsigned transaction blob returned
            by /construction/payloads or the signed transaction blob returned by /construction/combine.
          type: string
      required:
      - network_identifier
      - signed
      - transaction
      title: RosettaConstructionParseRequest
      type: object
    BlockSearchResult:
      additionalProperties: false
      description: Block search result
      properties:
        found:
          default: true
          description: Indicates if the requested object was found or not
          type: boolean
        result:
          $ref: '#/components/schemas/BlockSearchResult_result'
      required:
      - found
      - result
      title: BlockSearchResult
      type: object
    TransactionResults:
      additionalProperties: false
      description: GET request that returns transactions
      example:
        total: 1
        offset: 6
        limit: 16
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          description: The number of transactions to return
          maximum: 200
          type: integer
        offset:
          description: The number to transactions to skip (starting at `0`)
          type: integer
        total:
          description: The number of transactions available
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: TransactionResults
      type: object
    SmartContractTransactionMetadata_smart_contract:
      additionalProperties: false
      properties:
        contract_id:
          description: Contract identifier formatted as `<principaladdress>.<contract_name>`
          type: string
        source_code:
          description: Clarity code of the smart contract being deployed
          type: string
      required:
      - contract_id
      - source_code
      type: object
    RosettaAccountBalanceResponse:
      additionalProperties: false
      description: "An AccountBalanceResponse is returned on the /account/balance\
        \ endpoint. If an account has a balance for each AccountIdentifier describing\
        \ it (ex: an ERC-20 token balance on a few smart contracts), an account balance\
        \ request must be made with each AccountIdentifier."
      example:
        balances:
        - metadata: "{}"
          currency: "{}"
          value: value
        - metadata: "{}"
          currency: "{}"
          value: value
        metadata:
          sequence_number: 0
        coins:
        - amount: "{}"
          coin_identifier:
            identifier: identifier
        - amount: "{}"
          coin_identifier:
            identifier: identifier
        block_identifier: ""
      properties:
        block_identifier:
          allOf:
          - $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/block_identifier/anyOf/0'
          - $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/block_identifier/anyOf/1'
          description: The block_identifier uniquely identifies a block in a particular
            network.
          title: RosettaBlockIdentifier
        balances:
          description: A single account balance may have multiple currencies
          items:
            $ref: '#/components/schemas/RosettaAmount'
          type: array
        coins:
          description: "If a blockchain is UTXO-based, all unspent Coins owned by\
            \ an account_identifier should be returned alongside the balance. It is\
            \ highly recommended to populate this field so that users of the Rosetta\
            \ API implementation don't need to maintain their own indexer to track\
            \ their UTXOs."
          items:
            $ref: '#/components/schemas/RosettaCoin'
          type: array
        metadata:
          $ref: '#/components/schemas/RosettaAccountBalanceResponse_metadata'
      required:
      - balances
      - block_identifier
      title: RosettaAccountBalanceResponse
      type: object
    PostConditionFungible_allOf_1_asset:
      additionalProperties: false
      properties:
        asset_name:
          type: string
        contract_address:
          type: string
        contract_name:
          type: string
      required:
      - asset_name
      - contract_address
      - contract_name
      type: object
    AddressNftListResponse:
      additionalProperties: false
      example:
        total: 1
        offset: 6
        limit: 0
        nft_events:
        - sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
          block_height: 5.962133916683182
          tx_id: tx_id
          value:
            repr: repr
            hex: hex
        - sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
          block_height: 5.962133916683182
          tx_id: tx_id
          value:
            repr: repr
            hex: hex
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        nft_events:
          items:
            $ref: '#/components/schemas/NftEvent'
          type: array
      required:
      - limit
      - nft_events
      - offset
      - total
      title: AddressNftListResponse
      type: object
    RosettaConstructionDeriveRequest:
      additionalProperties: false
      description: Network is provided in the request because some blockchains have
        different address formats for different networks
      example:
        public_key:
          curve_type: secp256k1
          hex_bytes: hex_bytes
        metadata: "{}"
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        public_key:
          $ref: '#/components/schemas/RosettaPublicKey'
        metadata:
          type: object
      required:
      - network_identifier
      - public_key
      title: RosettaConstructionDeriveRequest
      type: object
    TransactionEventStxLock:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0/allOf/1/properties/events/items/anyOf/0/allOf/0'
      - $ref: '#/components/schemas/TransactionEventStxLock_allOf'
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: TransactionEventStxLock
      type: object
    TransactionFeeEstimateResponse_estimations_inner:
      example:
        fee: 3.616076749251911
        fee_rate: 9.301444243932576
      properties:
        fee_rate:
          type: number
        fee:
          type: number
      type: object
    TransactionFound_result:
      anyOf:
      - $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema/properties/results/items'
      - $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
    BurnchainRewardListResponse:
      additionalProperties: false
      description: GET request that returns blocks
      example:
        offset: 6
        limit: 2
        results:
        - burn_block_hash: burn_block_hash
          reward_amount: reward_amount
          reward_index: 5
          burn_amount: burn_amount
          canonical: true
          burn_block_height: 1
          reward_recipient: reward_recipient
        - burn_block_hash: burn_block_hash
          reward_amount: reward_amount
          reward_index: 5
          burn_amount: burn_amount
          canonical: true
          burn_block_height: 1
          reward_recipient: reward_recipient
      properties:
        limit:
          description: The number of burnchain rewards to return
          maximum: 30
          type: integer
        offset:
          default: 0
          description: The number to burnchain rewards to skip (starting at `0`)
          type: integer
        results:
          items:
            $ref: '#/components/schemas/BurnchainReward'
          type: array
      required:
      - limit
      - offset
      - results
      title: BurnchainRewardListResponse
      type: object
    NonFungibleTokenHistoryEvent:
      additionalProperties: false
      anyOf:
      - $ref: '#/components/schemas/NonFungibleTokenHistoryEventWithTxId'
      - $ref: '#/components/schemas/NonFungibleTokenHistoryEventWithTxMetadata'
      description: Describes an event from the history of a Non-Fungible Token
      title: NonFungibleTokenHistoryEvent
      type: object
    AccountDataResponse:
      additionalProperties: false
      description: GET request for account data
      example:
        balance: balance
        balance_proof: balance_proof
        unlock_height: 0
        locked: locked
        nonce: 6
        nonce_proof: nonce_proof
      properties:
        balance:
          type: string
        locked:
          type: string
        unlock_height:
          type: integer
        nonce:
          type: integer
        balance_proof:
          type: string
        nonce_proof:
          type: string
      required:
      - balance
      - balance_proof
      - locked
      - nonce
      - nonce_proof
      - unlock_height
      title: AccountDataResponse
      type: object
    PostConditionFungible:
      allOf:
      - $ref: '#/components/schemas/PostConditionFungible_allOf'
      - $ref: '#/components/schemas/PostConditionFungible_allOf_1'
      title: PostConditionFungible
      type: object
    AddressBalanceResponse_non_fungible_tokens_value:
      anyOf:
      - $ref: '#/components/schemas/NftBalance'
    RosettaPublicKey:
      additionalProperties: false
      description: PublicKey contains a public key byte array for a particular CurveType
        encoded in hex. Note that there is no PrivateKey struct as this is NEVER the
        concern of an implementation.
      example:
        curve_type: secp256k1
        hex_bytes: hex_bytes
      properties:
        hex_bytes:
          description: Hex-encoded public key bytes in the format specified by the
            CurveType.
          type: string
        curve_type:
          description: CurveType is the type of cryptographic curve associated with
            a PublicKey.
          enum:
          - secp256k1
          - edwards25519
          type: string
      required:
      - curve_type
      - hex_bytes
      title: RosettaPublicKey
      type: object
    TransactionEventStxLock_allOf:
      additionalProperties: false
      properties:
        event_type:
          enum:
          - stx_lock
          type: string
        tx_id:
          type: string
        stx_lock_event:
          $ref: '#/components/schemas/TransactionEventStxLock_allOf_stx_lock_event'
      required:
      - event_type
      - stx_lock_event
      - tx_id
      type: object
    CoreNodeInfoResponse:
      additionalProperties: false
      description: GET request that core node information
      example:
        pox_consensus: pox_consensus
        stable_burn_block_height: 1
        unanchored_tip: unanchored_tip
        server_version: server_version
        burn_block_height: 6
        peer_version: 0
        network_id: 5
        stacks_tip: stacks_tip
        stacks_tip_consensus_hash: stacks_tip_consensus_hash
        parent_network_id: 5
        stacks_tip_height: 2
        stable_pox_consensus: stable_pox_consensus
        exit_at_block_height: 7
      properties:
        peer_version:
          description: "identifies the version number for the networking communication,\
            \ this should not change while a node is running, and will only change\
            \ if there's an upgrade"
          type: integer
        pox_consensus:
          description: is a hash used to identify the burnchain view for a node. it
            incorporates bitcoin chain information and PoX information. nodes that
            disagree on this value will appear to each other as forks. this value
            will change after every block
          type: string
        burn_block_height:
          description: latest bitcoin chain height
          type: integer
        stable_pox_consensus:
          description: "same as burn_consensus, but evaluated at stable_burn_block_height"
          type: string
        stable_burn_block_height:
          description: "leftover from stacks 1.0, basically always burn_block_height\
            \ - 1"
          type: integer
        server_version:
          description: is a version descriptor
          type: string
        network_id:
          description: "is similar to peer_version and will be used to differentiate\
            \ between different testnets. this value will be different between mainnet\
            \ and testnet. once launched, this value will not change"
          type: integer
        parent_network_id:
          description: "same as network_id, but for bitcoin"
          type: integer
        stacks_tip_height:
          description: "the latest Stacks chain height. Stacks forks can occur independent\
            \ of the Bitcoin chain, that height doesn't increase 1-to-1 with the Bitcoin\
            \ height"
          type: integer
        stacks_tip:
          description: the best known block hash for the Stack chain (not including
            any pending microblocks)
          type: string
        stacks_tip_consensus_hash:
          description: "the burn chain (i.e., bitcoin) consensus hash at the time\
            \ that stacks_tip was mined"
          type: string
        unanchored_tip:
          description: "the latest microblock hash if any microblocks were processed.\
            \ if no microblock has been processed for the current block, a 000..,\
            \ hex array is returned"
          type: string
        exit_at_block_height:
          description: the block height at which the testnet network will be reset.
            not applicable for mainnet
          type: integer
      required:
      - burn_block_height
      - exit_at_block_height
      - network_id
      - parent_network_id
      - peer_version
      - pox_consensus
      - server_version
      - stable_burn_block_height
      - stable_pox_consensus
      - stacks_tip
      - stacks_tip_consensus_hash
      - stacks_tip_height
      - unanchored_tip
      title: CoreNodeInfoResponse
      type: object
    ContractCallTransaction:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D/get/responses/200/content/application~1json/schema/allOf/0'
      - $ref: '#/components/schemas/ContractCallTransactionMetadata'
      description: "Describes representation of a Type 2 Stacks 2.0 transaction: Contract\
        \ Call"
      title: ContractCallTransaction
      type: object
    BnsGetNamePriceResponse:
      additionalProperties: false
      description: Fetch price for name.
      example:
        amount: amount
        units: units
      properties:
        units:
          type: string
        amount:
          pattern: "^[0-9]+$"
          type: string
      required:
      - amount
      - units
      title: BnsGetNamePriceResponse
      type: object
    StxBalance:
      additionalProperties: false
      properties:
        balance:
          type: string
        total_sent:
          type: string
        total_received:
          type: string
        total_fees_sent:
          type: string
        total_miner_rewards_received:
          type: string
        lock_tx_id:
          description: The transaction where the lock event occurred. Empty if no
            tokens are locked.
          type: string
        locked:
          description: "The amount of locked STX, as string quoted micro-STX. Zero\
            \ if no tokens are locked."
          type: string
        lock_height:
          description: The STX chain block height of when the lock event occurred.
            Zero if no tokens are locked.
          type: integer
        burnchain_lock_height:
          description: The burnchain block height of when the lock event occurred.
            Zero if no tokens are locked.
          type: integer
        burnchain_unlock_height:
          description: The burnchain block height of when the tokens unlock. Zero
            if no tokens are locked.
          type: integer
      required:
      - balance
      - burnchain_lock_height
      - burnchain_unlock_height
      - lock_height
      - lock_tx_id
      - locked
      - total_fees_sent
      - total_miner_rewards_received
      - total_received
      - total_sent
      title: StxBalance
      type: object
    PostConditionStx_allOf:
      additionalProperties: false
      properties:
        principal:
          $ref: '#/components/schemas/PostConditionPrincipal'
      required:
      - principal
      type: object
    RosettaNetworkStatusResponse:
      additionalProperties: false
      description: "NetworkStatusResponse contains basic information about the node's\
        \ view of a blockchain network. It is assumed that any BlockIdentifier.Index\
        \ less than or equal to CurrentBlockIdentifier.Index can be queried. If a\
        \ Rosetta implementation prunes historical state, it should populate the optional\
        \ oldest_block_identifier field with the oldest block available to query.\
        \ If this is not populated, it is assumed that the genesis_block_identifier\
        \ is the oldest queryable block. If a Rosetta implementation performs some\
        \ pre-sync before it is possible to query blocks, sync_status should be populated\
        \ so that clients can still monitor healthiness. Without this field, it may\
        \ appear that the implementation is stuck syncing and needs to be terminated."
      example:
        oldest_block_identifier:
          index: 1
          hash: hash
        current_block_identifier: "{}"
        peers:
        - metadata: "{}"
          peer_id: peer_id
        - metadata: "{}"
          peer_id: peer_id
        sync_status:
          target_index: 5
          synced: true
          stage: stage
          current_index: 5
        current_block_timestamp: 0
        genesis_block_identifier:
          index: 6
          hash: hash
      properties:
        current_block_identifier:
          $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/responses/200/content/application~1json/schema/properties/block_identifier'
        current_block_timestamp:
          description: The timestamp of the block in milliseconds since the Unix Epoch.
            The timestamp is stored in milliseconds because some blockchains produce
            blocks more often than once a second.
          type: integer
        genesis_block_identifier:
          $ref: '#/components/schemas/RosettaGenesisBlockIdentifier'
        oldest_block_identifier:
          $ref: '#/components/schemas/RosettaOldestBlockIdentifier'
        sync_status:
          $ref: '#/components/schemas/RosettaSyncStatus'
        peers:
          description: Peers information
          items:
            $ref: '#/components/schemas/RosettaPeers'
          type: array
      required:
      - current_block_identifier
      - current_block_timestamp
      - genesis_block_identifier
      - peers
      title: RosettaNetworkStatusResponse
      type: object
    TransactionList:
      anyOf:
      - $ref: '#/components/schemas/TransactionFound'
      - $ref: '#/components/schemas/TransactionNotFound'
    FeeRateRequest:
      additionalProperties: false
      description: Request to fetch fee for a transaction
      example:
        transaction: transaction
      properties:
        transaction:
          description: A serialized transaction
          type: string
      required:
      - transaction
      title: FeeRateRequest
      type: object
    Microblock:
      additionalProperties: false
      description: A microblock
      example:
        microblock_sequence: 0
        parent_burn_block_hash: parent_burn_block_hash
        microblock_parent_hash: microblock_parent_hash
        block_hash: block_hash
        parent_block_hash: parent_block_hash
        canonical: true
        block_height: 6
        parent_burn_block_time_iso: parent_burn_block_time_iso
        txs:
        - txs
        - txs
        parent_burn_block_height: 5
        parent_block_height: 1
        microblock_hash: microblock_hash
        parent_burn_block_time: 5
        microblock_canonical: true
      properties:
        canonical:
          description: Set to `true` if the microblock corresponds to the canonical
            chain tip.
          type: boolean
        microblock_canonical:
          description: Set to `true` if the microblock was not orphaned in a following
            anchor block. Defaults to `true` if the following anchor block has not
            yet been created.
          type: boolean
        microblock_hash:
          description: The SHA512/256 hash of this microblock.
          type: string
        microblock_sequence:
          description: A hint to describe how to order a set of microblocks. Starts
            at 0.
          type: integer
        microblock_parent_hash:
          description: The SHA512/256 hash of the previous signed microblock in this
            stream.
          type: string
        block_height:
          description: The anchor block height that confirmed this microblock.
          type: integer
        parent_block_height:
          description: The height of the anchor block that preceded this microblock.
          type: integer
        parent_block_hash:
          description: The hash of the anchor block that preceded this microblock.
          type: string
        parent_burn_block_hash:
          description: The hash of the Bitcoin block that preceded this microblock.
          type: string
        parent_burn_block_time:
          description: The block timestamp of the Bitcoin block that preceded this
            microblock.
          type: integer
        parent_burn_block_time_iso:
          description: The ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) formatted block time
            of the bitcoin block that preceded this microblock.
          type: string
        parent_burn_block_height:
          description: The height of the Bitcoin block that preceded this microblock.
          type: integer
        block_hash:
          description: The hash of the anchor block that confirmed this microblock.
            This wil be empty for unanchored microblocks
          nullable: true
          type: string
        txs:
          description: List of transactions included in the microblock
          items:
            description: Transaction ID
            type: string
          type: array
      required:
      - block_hash
      - block_height
      - canonical
      - microblock_canonical
      - microblock_hash
      - microblock_parent_hash
      - microblock_sequence
      - parent_block_hash
      - parent_block_height
      - parent_burn_block_hash
      - parent_burn_block_height
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - txs
      title: Microblock
      type: object
    FtBalance:
      additionalProperties: false
      properties:
        balance:
          type: string
        total_sent:
          type: string
        total_received:
          type: string
      required:
      - balance
      - total_received
      - total_sent
      title: FtBalance
      type: object
    RosettaConstructionMetadataResponse:
      additionalProperties: false
      description: "The ConstructionMetadataResponse returns network-specific metadata\
        \ used for transaction construction. Optionally, the implementer can return\
        \ the suggested fee associated with the transaction being constructed. The\
        \ caller may use this info to adjust the intent of the transaction or to create\
        \ a transaction with a different account that can pay the suggested fee. Suggested\
        \ fee is an array in case fee payment must occur in multiple currencies."
      example:
        metadata:
          account_sequence: 0
          recent_block_hash: recent_block_hash
        suggested_fee:
        - "{}"
        - "{}"
      properties:
        metadata:
          $ref: '#/components/schemas/RosettaConstructionMetadataResponse_metadata'
        suggested_fee:
          items:
            $ref: '#/paths/~1rosetta~1v1~1account~1balance/post/responses/200/content/application~1json/schema/properties/balances/items'
          type: array
      required:
      - metadata
      title: RosettaConstructionMetadataResponse
      type: object
    NonFungibleTokenHoldingWithTxId:
      additionalProperties: false
      description: Ownership of a Non-Fungible Token
      properties:
        asset_identifier:
          type: string
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        block_height:
          type: number
        tx_id:
          type: string
      required:
      - asset_identifier
      - block_height
      - tx_id
      - value
      title: NonFungibleTokenHoldingWithTxId
      type: object
    RosettaConstructionPreprocessRequest:
      additionalProperties: false
      description: ConstructionPreprocessRequest is passed to the /construction/preprocess
        endpoint so that a Rosetta implementation can determine which metadata it
        needs to request for construction
      example:
        metadata: "{}"
        operations:
        - "{}"
        - "{}"
        suggested_fee_multiplier: 6
        max_fee:
        - metadata: "{}"
          currency:
            symbol: symbol
            metadata: "{}"
            decimals: 0
          value: value
        - metadata: "{}"
          currency:
            symbol: symbol
            metadata: "{}"
            decimals: 0
          value: value
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        operations:
          items:
            $ref: '#/paths/~1rosetta~1v1~1construction~1payloads/post/requestBody/content/application~1json/schema/properties/operations/items'
          type: array
        metadata:
          type: object
        max_fee:
          items:
            $ref: '#/components/schemas/RosettaMaxFeeAmount'
          type: array
        suggested_fee_multiplier:
          description: " The caller can also provide a suggested fee multiplier to\
            \ indicate that the suggested fee should be scaled. This may be used to\
            \ set higher fees for urgent transactions or to pay lower fees when there\
            \ is less urgency. It is assumed that providing a very low multiplier\
            \ (like 0.0001) will never lead to a transaction being created with a\
            \ fee less than the minimum network fee (if applicable). In the case that\
            \ the caller provides both a max fee and a suggested fee multiplier, the\
            \ max fee will set an upper bound on the suggested fee (regardless of\
            \ the multiplier provided)."
          type: integer
      required:
      - network_identifier
      - operations
      title: RosettaConstructionPreprocessRequest
      type: object
    Transaction:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferTransaction'
      - $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D/get/responses/200/content/application~1json/schema'
      - $ref: '#/components/schemas/ContractCallTransaction'
      - $ref: '#/components/schemas/PoisonMicroblockTransaction'
      - $ref: '#/components/schemas/CoinbaseTransaction'
      description: Describes all transaction types on Stacks 2.0 blockchain
      title: Transaction
      type: object
    PostConditionFungible_allOf:
      additionalProperties: false
      properties:
        principal:
          $ref: '#/paths/~1extended~1v1~1tx/get/responses/200/content/application~1json/schema/properties/results/items/anyOf/0/allOf/0/allOf/0/properties/post_conditions/items/anyOf/0/allOf/0/properties/principal'
      required:
      - principal
      type: object
    RosettaOptionsRequest:
      additionalProperties: false
      description: "This endpoint returns the version information and allowed network-specific\
        \ types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list\
        \ should be accessible here. Because options are retrievable in the context\
        \ of a NetworkIdentifier, it is possible to define unique options for each\
        \ network."
      example:
        metadata: "{}"
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        metadata:
          type: object
      required:
      - network_identifier
      title: RosettaOptionsRequest
      type: object
    Block:
      additionalProperties: false
      description: A block
      example:
        execution_cost_write_count: 9
        burn_block_time_iso: burn_block_time_iso
        burn_block_hash: burn_block_hash
        execution_cost_read_length: 2
        parent_microblock_hash: parent_microblock_hash
        parent_block_hash: parent_block_hash
        canonical: true
        burn_block_height: 1
        txs:
        - txs
        - txs
        microblocks_accepted:
        - microblocks_accepted
        - microblocks_accepted
        microblocks_streamed:
        - microblocks_streamed
        - microblocks_streamed
        parent_microblock_sequence: 5
        execution_cost_runtime: 7
        execution_cost_read_count: 5
        burn_block_time: 6.027456183070403
        miner_txid: miner_txid
        execution_cost_write_length: 3
        hash: hash
        height: 0
      properties:
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        height:
          description: Height of the block
          type: integer
        hash:
          description: Hash representing the block
          type: string
        parent_block_hash:
          description: Hash of the parent block
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_hash:
          description: Hash of the anchor chain block
          type: string
        burn_block_height:
          description: Height of the anchor chain block
          type: integer
        miner_txid:
          description: Anchor chain transaction ID
          type: string
        parent_microblock_hash:
          description: "The hash of the last streamed block that precedes this block\
            \ to which this block is to be appended. Not every anchored block will\
            \ have a parent microblock stream. An anchored block that does not have\
            \ a parent microblock stream has the parent microblock hash set to an\
            \ empty string, and the parent microblock sequence number set to -1."
          type: string
        parent_microblock_sequence:
          description: "The hash of the last streamed block that precedes this block\
            \ to which this block is to be appended. Not every anchored block will\
            \ have a parent microblock stream. An anchored block that does not have\
            \ a parent microblock stream has the parent microblock hash set to an\
            \ empty string, and the parent microblock sequence number set to -1."
          type: integer
        txs:
          description: List of transactions included in the block
          items:
            description: Transaction ID
            type: string
          type: array
        microblocks_accepted:
          description: List of microblocks that were accepted in this anchor block.
            Not every anchored block will have a accepted all (or any) of the previously
            streamed microblocks. Microblocks that were orphaned are not included
            in this list.
          items:
            description: Microblock hash
            type: string
          type: array
        microblocks_streamed:
          description: List of microblocks that were streamed/produced by this anchor
            block's miner. This list only includes microblocks that were accepted
            in the following anchor block. Microblocks that were orphaned are not
            included in this list.
          items:
            description: Microblock hash
            type: string
          type: array
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
      required:
      - burn_block_hash
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - hash
      - height
      - microblocks_accepted
      - microblocks_streamed
      - miner_txid
      - parent_block_hash
      - parent_microblock_hash
      - parent_microblock_sequence
      - txs
      title: Block
      type: object
    ContractSearchResult:
      additionalProperties: false
      description: Contract search result
      properties:
        found:
          default: true
          description: Indicates if the requested object was found or not
          type: boolean
        result:
          $ref: '#/components/schemas/ContractSearchResult_result'
      required:
      - found
      - result
      title: ContractSearchResult
      type: object
    BaseTransaction:
      additionalProperties: false
      description: Transaction properties that are available from a raw serialized
        transactions. These are available for transactions in the mempool as well
        as mined transactions.
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          description: ""
          enum:
          - allow
          - deny
          title: PostConditionMode
          type: string
        post_conditions:
          items:
            $ref: '#/components/schemas/PostCondition'
          type: array
        anchor_mode:
          description: "`on_chain_only`: the transaction MUST be included in an anchored\
            \ block, `off_chain_only`: the transaction MUST be included in a microblock,\
            \ `any`: the leader can choose where to include the transaction."
          enum:
          - on_chain_only
          - off_chain_only
          - any
          title: TransactionAnchorModeType
          type: string
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tx_id
      title: BaseTransaction
      type: object
    FungibleTokensMetadataList:
      additionalProperties: false
      description: List of fungible tokens metadata
      example:
        total: 1
        offset: 6
        limit: 16
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          description: The number of tokens metadata to return
          maximum: 200
          type: integer
        offset:
          description: The number to tokens metadata to skip (starting at `0`)
          type: integer
        total:
          description: The number of tokens metadata available
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1tokens~1%7BcontractId%7D~1ft~1metadata/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: FungibleTokensMetadataList
      type: object
    ContractSourceResponse:
      additionalProperties: false
      description: GET request to get contract source
      example:
        publish_height: 0
        source: source
        proof: proof
      properties:
        source:
          type: string
        publish_height:
          type: integer
        proof:
          type: string
      required:
      - proof
      - publish_height
      - source
      title: ContractSourceResponse
      type: object
    NonFungibleTokenHistoryEventWithTxId:
      additionalProperties: false
      description: Non-Fungible Token history event with transaction id
      properties:
        sender:
          nullable: true
          type: string
        recipient:
          type: string
        event_index:
          type: integer
        asset_event_type:
          type: string
        tx_id:
          type: string
      required:
      - asset_event_type
      - event_index
      - tx_id
      title: NonFungibleTokenHistoryEventWithTxId
      type: object
    TransactionEventStxLock_allOf_stx_lock_event:
      additionalProperties: false
      properties:
        locked_amount:
          type: string
        unlock_height:
          type: integer
        locked_address:
          type: string
      required:
      - locked_address
      - locked_amount
      - unlock_height
      type: object
    SearchSuccessResult:
      additionalProperties: false
      anyOf:
      - $ref: '#/components/schemas/AddressSearchResult'
      - $ref: '#/components/schemas/BlockSearchResult'
      - $ref: '#/components/schemas/ContractSearchResult'
      - $ref: '#/components/schemas/MempoolTxSearchResult'
      - $ref: '#/components/schemas/TxSearchResult'
      description: Search success result
      title: SearchSuccessResult
      type: object
    RosettaMempoolTransactionResponse:
      additionalProperties: false
      description: "A MempoolTransactionResponse contains an estimate of a mempool\
        \ transaction. It may not be possible to know the full impact of a transaction\
        \ in the mempool (ex: fee paid)."
      example:
        metadata: "{}"
        transaction: "{}"
      properties:
        transaction:
          $ref: '#/paths/~1rosetta~1v1~1block~1transaction/post/responses/200/content/application~1json/schema/properties/transaction'
        metadata:
          type: object
      required:
      - transaction
      title: RosettaMempoolTransactionResponse
      type: object
    BnsFetchFileZoneResponse:
      anyOf:
      - $ref: '#/components/schemas/BnsFetchFileZoneResponse_anyOf'
      - $ref: '#/components/schemas/BnsFetchFileZoneResponse_anyOf_1'
      description: Fetch a user's raw zone file. This only works for RFC-compliant
        zone files. This method returns an error for names that have non-standard
        zone files.
      title: BnsFetchFileZoneResponse
    RosettaParentBlockIdentifier:
      additionalProperties: false
      description: The block_identifier uniquely identifies a block in a particular
        network.
      example:
        index: 0
        hash: hash
      properties:
        index:
          description: This is also known as the block height.
          type: integer
        hash:
          description: Block hash
          type: string
      required:
      - hash
      - index
      title: RosettaParentBlockIdentifier
      type: object
    AddressTransactionWithTransfers_nft_transfers_inner_value:
      additionalProperties: false
      description: Non Fungible Token asset value.
      example:
        repr: repr
        hex: hex
      properties:
        hex:
          type: string
        repr:
          type: string
      required:
      - hex
      - repr
      type: object
    BnsGetNamespacePriceResponse:
      additionalProperties: false
      description: Fetch price for namespace.
      example:
        amount: amount
        units: units
      properties:
        units:
          type: string
        amount:
          pattern: "^[0-9]+$"
          type: string
      required:
      - amount
      - units
      title: BnsGetNamespacePriceResponse
      type: object
    RosettaError_details:
      description: Often times it is useful to return context specific to the request
        that caused the error (i.e. a sample of the stack trace or impacted account)
        in addition to the standard error message.
      properties:
        address:
          type: string
        error:
          type: string
      type: object
    TransactionEventFungibleAsset_allOf:
      additionalProperties: false
      properties:
        event_type:
          enum:
          - fungible_token_asset
          type: string
        tx_id:
          type: string
        asset:
          $ref: '#/components/schemas/TransactionEventFungibleAsset_allOf_asset'
      required:
      - asset
      - event_type
      - tx_id
      type: object
    BurnchainReward:
      additionalProperties: false
      description: Reward payment made on the burnchain
      example:
        burn_block_hash: burn_block_hash
        reward_amount: reward_amount
        reward_index: 5
        burn_amount: burn_amount
        canonical: true
        burn_block_height: 1
        reward_recipient: reward_recipient
      properties:
        canonical:
          description: Set to `true` if block corresponds to the canonical burchchain
            tip
          type: boolean
        burn_block_hash:
          description: The hash representing the burnchain block
          type: string
        burn_block_height:
          description: Height of the burnchain block
          type: integer
        burn_amount:
          description: "The total amount of burnchain tokens burned for this burnchain\
            \ block, in the smallest unit (e.g. satoshis for Bitcoin)"
          type: string
        reward_recipient:
          description: "The recipient address that received the burnchain rewards,\
            \ in the format native to the burnchain (e.g. B58 encoded for Bitcoin)"
          type: string
        reward_amount:
          description: "The amount of burnchain tokens rewarded to the recipient,\
            \ in the smallest unit (e.g. satoshis for Bitcoin)"
          type: string
        reward_index:
          description: "The index position of the reward entry, useful for ordering\
            \ when there's more than one recipient per burnchain block"
          type: integer
      required:
      - burn_amount
      - burn_block_hash
      - burn_block_height
      - canonical
      - reward_amount
      - reward_index
      - reward_recipient
      title: BurnchainReward
      type: object
    AddressSearchResult:
      additionalProperties: false
      description: Address search result
      properties:
        found:
          default: true
          description: Indicates if the requested object was found or not
          type: boolean
        result:
          $ref: '#/components/schemas/AddressSearchResult_result'
      required:
      - found
      - result
      title: AddressSearchResult
      type: object
    TransactionIdentifier:
      additionalProperties: false
      description: The transaction_identifier uniquely identifies a transaction in
        a particular network and block or in the mempool.
      example:
        hash: hash
      properties:
        hash:
          description: "Any transactions that are attributable only to a block (ex:\
            \ a block event) should use the hash of the block as the identifier."
          type: string
      required:
      - hash
      title: TransactionIdentifier
      type: object
    UnanchoredTransactionListResponse:
      additionalProperties: false
      description: GET request that returns unanchored transactions
      example:
        total: 0
        results:
        - "{}"
        - "{}"
      properties:
        total:
          description: The number of unanchored transactions available
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - results
      - total
      title: UnanchoredTransactionListResponse
      type: object
    ServerStatusResponse:
      additionalProperties: false
      description: GET blockchain API status
      example:
        chain_tip:
          index_block_hash: index_block_hash
          microblock_sequence: 6
          block_hash: block_hash
          microblock_hash: microblock_hash
          block_height: 0
        server_version: server_version
        status: status
      properties:
        server_version:
          description: the server version that is currently running
          type: string
        status:
          description: the current server status
          type: string
        chain_tip:
          $ref: '#/components/schemas/ChainTip'
      required:
      - status
      title: ServerStatusResponse
      type: object
    TransactionFound:
      additionalProperties: false
      description: This object returns transaction for found true
      properties:
        found:
          enum:
          - true
          type: boolean
        result:
          $ref: '#/components/schemas/TransactionFound_result'
      required:
      - found
      - result
      title: TransactionFound
      type: object
    NetworkBlockTimesResponse:
      additionalProperties: false
      description: GET request that returns network target block times
      example:
        mainnet:
          target_block_time: 0
        testnet: "{}"
      properties:
        mainnet:
          $ref: '#/components/schemas/TargetBlockTime'
        testnet:
          $ref: '#/paths/~1extended~1v1~1info~1network_block_times/get/responses/200/content/application~1json/schema/properties/mainnet'
      required:
      - mainnet
      - testnet
      title: NetworkBlockTimesResponse
      type: object
    AbstractTransaction_allOf:
      additionalProperties: false
      properties:
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          description: Status of the transaction
          enum:
          - success
          - abort_by_response
          - abort_by_post_condition
          title: TransactionStatus
          type: string
        tx_result:
          $ref: '#/components/schemas/AbstractTransaction_allOf_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          description: List of transaction events
          items:
            $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D~1events/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - block_hash
      - block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - tx_index
      - tx_result
      - tx_status
      type: object
    ContractCallTransactionMetadata_contract_call:
      additionalProperties: false
      properties:
        contract_id:
          description: Contract identifier formatted as `<principaladdress>.<contract_name>`
          type: string
        function_name:
          description: Name of the Clarity function to be invoked
          type: string
        function_signature:
          description: "Function definition, including function name and type as well\
            \ as parameter names and types"
          type: string
        function_args:
          description: List of arguments used to invoke the function
          items:
            $ref: '#/components/schemas/ContractCallTransactionMetadata_contract_call_function_args_inner'
          type: array
      required:
      - contract_id
      - function_name
      - function_signature
      type: object
    NonFungibleTokenHoldingWithTxId_value:
      additionalProperties: false
      description: Non-Fungible Token value
      properties:
        hex:
          description: Hex string representing the identifier of the Non-Fungible
            Token
          type: string
        repr:
          description: Readable string of the Non-Fungible Token identifier
          type: string
      required:
      - hex
      - repr
      type: object
    NonFungibleTokensMetadataList:
      additionalProperties: false
      description: List of non fungible tokens metadata
      example:
        total: 1
        offset: 6
        limit: 16
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          description: The number of tokens metadata to return
          maximum: 200
          type: integer
        offset:
          description: The number to tokens metadata to skip (starting at `0`)
          type: integer
        total:
          description: The number of tokens metadata available
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1tokens~1%7BcontractId%7D~1nft~1metadata/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: NonFungibleTokensMetadataList
      type: object
    AddressNonces:
      additionalProperties: false
      description: "The latest nonce values used by an account by inspecting the mempool,\
        \ microblock transactions, and anchored transactions"
      example:
        last_mempool_tx_nonce: 0
        last_executed_tx_nonce: 6
        detected_missing_nonces:
        - 5
        - 5
        possible_next_nonce: 1
      properties:
        last_mempool_tx_nonce:
          description: The latest nonce found within mempool transactions sent by
            this address. Will be null if there are no current mempool transactions
            for this address.
          nullable: true
          type: integer
        last_executed_tx_nonce:
          description: "The latest nonce found within transactions sent by this address,\
            \ including unanchored microblock transactions. Will be null if there\
            \ are no current transactions for this address."
          nullable: true
          type: integer
        possible_next_nonce:
          description: "The likely nonce required for creating the next transaction,\
            \ based on the last nonces seen by the API. This can be incorrect if the\
            \ API's mempool or transactions aren't fully synchronized, even by a small\
            \ amount, or if a previous transaction is still propagating through the\
            \ Stacks blockchain network when this endpoint is called."
          type: integer
        detected_missing_nonces:
          description: Nonces that appear to be missing and likely causing a mempool
            transaction to be stuck.
          items:
            type: integer
          type: array
      required:
      - detected_missing_nonces
      - last_executed_tx_nonce
      - last_mempool_tx_nonce
      - possible_next_nonce
      title: AddressNonces
      type: object
    PostConditionPrincipal_anyOf_1:
      additionalProperties: false
      description: Principal Standard
      properties:
        type_id:
          description: String literal of type `PostConditionPrincipalType`
          enum:
          - principal_standard
          type: string
        address:
          type: string
      required:
      - address
      - type_id
      type: object
    AddressTransactionsListResponse_results_inner:
      anyOf:
      - $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema/properties/results/items'
      - $ref: '#/paths/~1extended~1v1~1tx~1%7Btx_id%7D/get/responses/200/content/application~1json/schema'
      type: object
    RosettaMaxFeeAmount:
      description: Amount is some Value of a Currency. It is considered invalid to
        specify a Value without a Currency.
      example:
        metadata: "{}"
        currency:
          symbol: symbol
          metadata: "{}"
          decimals: 0
        value: value
      properties:
        value:
          description: "Value of the transaction in atomic units represented as an\
            \ arbitrary-sized signed integer. For example, 1 BTC would be represented\
            \ by a value of 100000000."
          type: string
        currency:
          $ref: '#/components/schemas/RosettaCurrency'
        metadata:
          description: ""
          type: object
      required:
      - currency
      - value
      title: RosettaMaxFeeAmount
      type: object
    RosettaConstructionSubmitRequest:
      additionalProperties: false
      description: Submit the transaction in blockchain
      example:
        signed_transaction: signed_transaction
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        signed_transaction:
          description: Signed transaction
          type: string
      required:
      - network_identifier
      - signed_transaction
      title: RosettaConstructionSubmitRequest
      type: object
    PostConditionPrincipal_anyOf_2:
      additionalProperties: false
      description: Principal Contract
      properties:
        type_id:
          description: String literal of type `PostConditionPrincipalType`
          enum:
          - principal_contract
          type: string
        address:
          type: string
        contract_name:
          type: string
      required:
      - address
      - contract_name
      - type_id
      type: object
    NonFungibleTokenMintWithTxId:
      additionalProperties: false
      description: Non-Fungible Token mint event with transaction id
      properties:
        recipient:
          type: string
        event_index:
          type: integer
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        tx_id:
          type: string
      required:
      - event_index
      - tx_id
      - value
      title: NonFungibleTokenMintWithTxId
      type: object
    AddressTransactionsListResponse:
      additionalProperties: false
      description: GET request that returns account transactions
      example:
        total: 1
        offset: 6
        limit: 2
        results:
        - null
        - null
      properties:
        limit:
          maximum: 30
          type: integer
        offset:
          type: integer
        total:
          type: integer
        results:
          items:
            $ref: '#/components/schemas/AddressTransactionsListResponse_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressTransactionsListResponse
      type: object
    TransactionEventSmartContractLog_allOf_contract_log:
      additionalProperties: false
      properties:
        contract_id:
          type: string
        topic:
          type: string
        value:
          $ref: '#/components/schemas/PostConditionNonFungible_allOf_asset_value'
      required:
      - contract_id
      - topic
      - value
      type: object
    TokenTransferTransactionMetadata:
      additionalProperties: false
      description: Metadata associated with token-transfer type transactions
      properties:
        tx_type:
          enum:
          - token_transfer
          type: string
        token_transfer:
          $ref: '#/components/schemas/TokenTransferTransactionMetadata_token_transfer'
      required:
      - token_transfer
      - tx_type
      title: TokenTransferTransactionMetadata
      type: object
    BurnchainRewardSlotHolderListResponse:
      additionalProperties: false
      description: GET request that returns reward slot holders
      example:
        total: 1
        offset: 6
        limit: 2
        results:
        - burn_block_hash: burn_block_hash
          address: address
          slot_index: 5
          canonical: true
          burn_block_height: 5
        - burn_block_hash: burn_block_hash
          address: address
          slot_index: 5
          canonical: true
          burn_block_height: 5
      properties:
        limit:
          description: The number of items to return
          maximum: 30
          type: integer
        offset:
          default: 0
          description: The number of items to skip (starting at `0`)
          type: integer
        total:
          description: Total number of available items
          type: integer
        results:
          items:
            $ref: '#/components/schemas/BurnchainRewardSlotHolder'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: BurnchainRewardSlotHolderListResponse
      type: object
    AddressStxBalanceResponse_allOf:
      additionalProperties: false
      properties:
        token_offering_locked:
          $ref: '#/paths/~1extended~1v1~1address~1%7Bprincipal%7D~1balances/get/responses/200/content/application~1json/schema/properties/token_offering_locked'
      type: object
    PoisonMicroblockTransaction:
      allOf:
      - $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D/get/responses/200/content/application~1json/schema/allOf/0'
      - $ref: '#/components/schemas/PoisonMicroblockTransactionMetadata'
      description: "Describes representation of a Type 3 Stacks 2.0 transaction: Poison\
        \ Microblock"
      title: PoisonMicroblockTransaction
      type: object
    ContractInterfaceResponse:
      additionalProperties: false
      description: GET request to get contract interface
      example:
        variables:
        - "{}"
        - "{}"
        functions:
        - "{}"
        - "{}"
        maps:
        - "{}"
        - "{}"
        non_fungible_tokens:
        - "{}"
        - "{}"
        fungible_tokens:
        - "{}"
        - "{}"
      properties:
        functions:
          description: List of defined methods
          items:
            type: object
          type: array
        variables:
          description: List of defined variables
          items:
            type: object
          type: array
        maps:
          description: List of defined data-maps
          items:
            type: object
          type: array
        fungible_tokens:
          description: List of fungible tokens in the contract
          items:
            type: object
          type: array
        non_fungible_tokens:
          description: List of non-fungible tokens in the contract
          items:
            type: object
          type: array
      required:
      - functions
      - fungible_tokens
      - maps
      - non_fungible_tokens
      - variables
      title: ContractInterfaceResponse
      type: object
    RosettaStatusRequest:
      additionalProperties: false
      description: This endpoint returns the current status of the network requested.
        Any NetworkIdentifier returned by /network/list should be accessible here.
      example:
        metadata: "{}"
        network_identifier: "{}"
      properties:
        network_identifier:
          $ref: '#/paths/~1rosetta~1v1~1block/post/requestBody/content/application~1json/schema/properties/network_identifier'
        metadata:
          type: object
      required:
      - network_identifier
      title: RosettaStatusRequest
      type: object
    RosettaBlock_metadata:
      description: meta data
      example:
        difficulty: difficulty
        transactions_root: transactions_root
      properties:
        transactions_root:
          description: ""
          type: string
        difficulty:
          description: ""
          type: string
      required:
      - difficulty
      - transactions_root
      type: object
    RosettaCoinChange:
      additionalProperties: false
      description: "CoinChange is used to represent a change in state of a some coin\
        \ identified by a coin_identifier. This object is part of the Operation model\
        \ and must be populated for UTXO-based blockchains. Coincidentally, this abstraction\
        \ of UTXOs allows for supporting both account-based transfers and UTXO-based\
        \ transfers on the same blockchain (when a transfer is account-based, don't\
        \ populate this model)."
      example:
        coin_identifier:
          identifier: identifier
        coin_action: coin_created
      properties:
        coin_identifier:
          $ref: '#/components/schemas/RosettaCoinChange_coin_identifier'
        coin_action:
          description: "CoinActions are different state changes that a Coin can undergo.\
            \ When a Coin is created, it is coin_created. When a Coin is spent, it\
            \ is coin_spent. It is assumed that a single Coin cannot be created or\
            \ spent more than once."
          enum:
          - coin_created
          - coin_spent
          type: string
      required:
      - coin_action
      - coin_identifier
      title: RosettaCoinChange
      type: object
    BnsError:
      additionalProperties: false
      description: Error
      properties:
        error:
          type: string
      title: BnsError
      type: object
    TransactionEventsResponse:
      additionalProperties: false
      description: GET event for the given transaction
      example:
        offset: 6
        limit: 0
        results:
        - "{}"
        - "{}"
      properties:
        limit:
          type: integer
        offset:
          type: integer
        results:
          items:
            $ref: '#/paths/~1extended~1v1~1contract~1%7Bcontract_id%7D~1events/get/responses/200/content/application~1json/schema'
          type: array
      required:
      - limit
      - offset
      - results
      title: TransactionEventsResponse
      type: object
    MempoolTxSearchResult_result:
      additionalProperties: false
      description: This object carries the search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - mempool_tx_id
          type: string
        tx_data:
          $ref: '#/components/schemas/MempoolTxSearchResult_result_tx_data'
        metadata:
          $ref: '#/paths/~1extended~1v1~1tx~1mempool/get/responses/200/content/application~1json/schema/properties/results/items'
      required:
      - entity_id
      - entity_type
      - tx_data
      type: object
