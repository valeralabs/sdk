/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PoisonMicroblockTransaction Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock
type PoisonMicroblockTransaction struct {
	TxType string `json:"tx_type"`
	PoisonMicroblock PoisonMicroblockTransactionMetadataPoisonMicroblock `json:"poison_microblock"`
}

// NewPoisonMicroblockTransaction instantiates a new PoisonMicroblockTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoisonMicroblockTransaction(txType string, poisonMicroblock PoisonMicroblockTransactionMetadataPoisonMicroblock) *PoisonMicroblockTransaction {
	this := PoisonMicroblockTransaction{}
	this.TxType = txType
	this.PoisonMicroblock = poisonMicroblock
	return &this
}

// NewPoisonMicroblockTransactionWithDefaults instantiates a new PoisonMicroblockTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoisonMicroblockTransactionWithDefaults() *PoisonMicroblockTransaction {
	this := PoisonMicroblockTransaction{}
	return &this
}

// GetTxType returns the TxType field value
func (o *PoisonMicroblockTransaction) GetTxType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxType
}

// GetTxTypeOk returns a tuple with the TxType field value
// and a boolean to check if the value has been set.
func (o *PoisonMicroblockTransaction) GetTxTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxType, true
}

// SetTxType sets field value
func (o *PoisonMicroblockTransaction) SetTxType(v string) {
	o.TxType = v
}

// GetPoisonMicroblock returns the PoisonMicroblock field value
func (o *PoisonMicroblockTransaction) GetPoisonMicroblock() PoisonMicroblockTransactionMetadataPoisonMicroblock {
	if o == nil {
		var ret PoisonMicroblockTransactionMetadataPoisonMicroblock
		return ret
	}

	return o.PoisonMicroblock
}

// GetPoisonMicroblockOk returns a tuple with the PoisonMicroblock field value
// and a boolean to check if the value has been set.
func (o *PoisonMicroblockTransaction) GetPoisonMicroblockOk() (*PoisonMicroblockTransactionMetadataPoisonMicroblock, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoisonMicroblock, true
}

// SetPoisonMicroblock sets field value
func (o *PoisonMicroblockTransaction) SetPoisonMicroblock(v PoisonMicroblockTransactionMetadataPoisonMicroblock) {
	o.PoisonMicroblock = v
}

func (o PoisonMicroblockTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tx_type"] = o.TxType
	}
	if true {
		toSerialize["poison_microblock"] = o.PoisonMicroblock
	}
	return json.Marshal(toSerialize)
}

type NullablePoisonMicroblockTransaction struct {
	value *PoisonMicroblockTransaction
	isSet bool
}

func (v NullablePoisonMicroblockTransaction) Get() *PoisonMicroblockTransaction {
	return v.value
}

func (v *NullablePoisonMicroblockTransaction) Set(val *PoisonMicroblockTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullablePoisonMicroblockTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullablePoisonMicroblockTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoisonMicroblockTransaction(val *PoisonMicroblockTransaction) *NullablePoisonMicroblockTransaction {
	return &NullablePoisonMicroblockTransaction{value: val, isSet: true}
}

func (v NullablePoisonMicroblockTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoisonMicroblockTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


