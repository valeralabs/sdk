/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransactionEventFungibleAssetAllOfAsset struct for TransactionEventFungibleAssetAllOfAsset
type TransactionEventFungibleAssetAllOfAsset struct {
	AssetEventType string `json:"asset_event_type"`
	AssetId string `json:"asset_id"`
	Sender string `json:"sender"`
	Recipient string `json:"recipient"`
	Amount string `json:"amount"`
}

// NewTransactionEventFungibleAssetAllOfAsset instantiates a new TransactionEventFungibleAssetAllOfAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionEventFungibleAssetAllOfAsset(assetEventType string, assetId string, sender string, recipient string, amount string) *TransactionEventFungibleAssetAllOfAsset {
	this := TransactionEventFungibleAssetAllOfAsset{}
	this.AssetEventType = assetEventType
	this.AssetId = assetId
	this.Sender = sender
	this.Recipient = recipient
	this.Amount = amount
	return &this
}

// NewTransactionEventFungibleAssetAllOfAssetWithDefaults instantiates a new TransactionEventFungibleAssetAllOfAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionEventFungibleAssetAllOfAssetWithDefaults() *TransactionEventFungibleAssetAllOfAsset {
	this := TransactionEventFungibleAssetAllOfAsset{}
	return &this
}

// GetAssetEventType returns the AssetEventType field value
func (o *TransactionEventFungibleAssetAllOfAsset) GetAssetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetEventType
}

// GetAssetEventTypeOk returns a tuple with the AssetEventType field value
// and a boolean to check if the value has been set.
func (o *TransactionEventFungibleAssetAllOfAsset) GetAssetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetEventType, true
}

// SetAssetEventType sets field value
func (o *TransactionEventFungibleAssetAllOfAsset) SetAssetEventType(v string) {
	o.AssetEventType = v
}

// GetAssetId returns the AssetId field value
func (o *TransactionEventFungibleAssetAllOfAsset) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *TransactionEventFungibleAssetAllOfAsset) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *TransactionEventFungibleAssetAllOfAsset) SetAssetId(v string) {
	o.AssetId = v
}

// GetSender returns the Sender field value
func (o *TransactionEventFungibleAssetAllOfAsset) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *TransactionEventFungibleAssetAllOfAsset) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *TransactionEventFungibleAssetAllOfAsset) SetSender(v string) {
	o.Sender = v
}

// GetRecipient returns the Recipient field value
func (o *TransactionEventFungibleAssetAllOfAsset) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *TransactionEventFungibleAssetAllOfAsset) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *TransactionEventFungibleAssetAllOfAsset) SetRecipient(v string) {
	o.Recipient = v
}

// GetAmount returns the Amount field value
func (o *TransactionEventFungibleAssetAllOfAsset) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransactionEventFungibleAssetAllOfAsset) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransactionEventFungibleAssetAllOfAsset) SetAmount(v string) {
	o.Amount = v
}

func (o TransactionEventFungibleAssetAllOfAsset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset_event_type"] = o.AssetEventType
	}
	if true {
		toSerialize["asset_id"] = o.AssetId
	}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionEventFungibleAssetAllOfAsset struct {
	value *TransactionEventFungibleAssetAllOfAsset
	isSet bool
}

func (v NullableTransactionEventFungibleAssetAllOfAsset) Get() *TransactionEventFungibleAssetAllOfAsset {
	return v.value
}

func (v *NullableTransactionEventFungibleAssetAllOfAsset) Set(val *TransactionEventFungibleAssetAllOfAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionEventFungibleAssetAllOfAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionEventFungibleAssetAllOfAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionEventFungibleAssetAllOfAsset(val *TransactionEventFungibleAssetAllOfAsset) *NullableTransactionEventFungibleAssetAllOfAsset {
	return &NullableTransactionEventFungibleAssetAllOfAsset{value: val, isSet: true}
}

func (v NullableTransactionEventFungibleAssetAllOfAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionEventFungibleAssetAllOfAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


