/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RosettaMempoolResponse A MempoolResponse contains all transaction identifiers in the mempool for a particular network_identifier.
type RosettaMempoolResponse struct {
	// 
	TransactionIdentifiers []Object `json:"transaction_identifiers"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewRosettaMempoolResponse instantiates a new RosettaMempoolResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRosettaMempoolResponse(transactionIdentifiers []Object) *RosettaMempoolResponse {
	this := RosettaMempoolResponse{}
	this.TransactionIdentifiers = transactionIdentifiers
	return &this
}

// NewRosettaMempoolResponseWithDefaults instantiates a new RosettaMempoolResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRosettaMempoolResponseWithDefaults() *RosettaMempoolResponse {
	this := RosettaMempoolResponse{}
	return &this
}

// GetTransactionIdentifiers returns the TransactionIdentifiers field value
func (o *RosettaMempoolResponse) GetTransactionIdentifiers() []Object {
	if o == nil {
		var ret []Object
		return ret
	}

	return o.TransactionIdentifiers
}

// GetTransactionIdentifiersOk returns a tuple with the TransactionIdentifiers field value
// and a boolean to check if the value has been set.
func (o *RosettaMempoolResponse) GetTransactionIdentifiersOk() ([]Object, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionIdentifiers, true
}

// SetTransactionIdentifiers sets field value
func (o *RosettaMempoolResponse) SetTransactionIdentifiers(v []Object) {
	o.TransactionIdentifiers = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RosettaMempoolResponse) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RosettaMempoolResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RosettaMempoolResponse) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *RosettaMempoolResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o RosettaMempoolResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transaction_identifiers"] = o.TransactionIdentifiers
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableRosettaMempoolResponse struct {
	value *RosettaMempoolResponse
	isSet bool
}

func (v NullableRosettaMempoolResponse) Get() *RosettaMempoolResponse {
	return v.value
}

func (v *NullableRosettaMempoolResponse) Set(val *RosettaMempoolResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRosettaMempoolResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRosettaMempoolResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRosettaMempoolResponse(val *RosettaMempoolResponse) *NullableRosettaMempoolResponse {
	return &NullableRosettaMempoolResponse{value: val, isSet: true}
}

func (v NullableRosettaMempoolResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRosettaMempoolResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


