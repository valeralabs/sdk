/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: STACKS_API_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddressBalanceResponse GET request that returns address balances
type AddressBalanceResponse struct {
	Stx Object `json:"stx"`
	FungibleTokens map[string]AddressBalanceResponseFungibleTokensValue `json:"fungible_tokens"`
	NonFungibleTokens map[string]AddressBalanceResponseNonFungibleTokensValue `json:"non_fungible_tokens"`
	TokenOfferingLocked *AddressTokenOfferingLocked `json:"token_offering_locked,omitempty"`
}

// NewAddressBalanceResponse instantiates a new AddressBalanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressBalanceResponse(stx Object, fungibleTokens map[string]AddressBalanceResponseFungibleTokensValue, nonFungibleTokens map[string]AddressBalanceResponseNonFungibleTokensValue) *AddressBalanceResponse {
	this := AddressBalanceResponse{}
	this.Stx = stx
	this.FungibleTokens = fungibleTokens
	this.NonFungibleTokens = nonFungibleTokens
	return &this
}

// NewAddressBalanceResponseWithDefaults instantiates a new AddressBalanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressBalanceResponseWithDefaults() *AddressBalanceResponse {
	this := AddressBalanceResponse{}
	return &this
}

// GetStx returns the Stx field value
func (o *AddressBalanceResponse) GetStx() Object {
	if o == nil {
		var ret Object
		return ret
	}

	return o.Stx
}

// GetStxOk returns a tuple with the Stx field value
// and a boolean to check if the value has been set.
func (o *AddressBalanceResponse) GetStxOk() (*Object, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stx, true
}

// SetStx sets field value
func (o *AddressBalanceResponse) SetStx(v Object) {
	o.Stx = v
}

// GetFungibleTokens returns the FungibleTokens field value
func (o *AddressBalanceResponse) GetFungibleTokens() map[string]AddressBalanceResponseFungibleTokensValue {
	if o == nil {
		var ret map[string]AddressBalanceResponseFungibleTokensValue
		return ret
	}

	return o.FungibleTokens
}

// GetFungibleTokensOk returns a tuple with the FungibleTokens field value
// and a boolean to check if the value has been set.
func (o *AddressBalanceResponse) GetFungibleTokensOk() (*map[string]AddressBalanceResponseFungibleTokensValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FungibleTokens, true
}

// SetFungibleTokens sets field value
func (o *AddressBalanceResponse) SetFungibleTokens(v map[string]AddressBalanceResponseFungibleTokensValue) {
	o.FungibleTokens = v
}

// GetNonFungibleTokens returns the NonFungibleTokens field value
func (o *AddressBalanceResponse) GetNonFungibleTokens() map[string]AddressBalanceResponseNonFungibleTokensValue {
	if o == nil {
		var ret map[string]AddressBalanceResponseNonFungibleTokensValue
		return ret
	}

	return o.NonFungibleTokens
}

// GetNonFungibleTokensOk returns a tuple with the NonFungibleTokens field value
// and a boolean to check if the value has been set.
func (o *AddressBalanceResponse) GetNonFungibleTokensOk() (*map[string]AddressBalanceResponseNonFungibleTokensValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NonFungibleTokens, true
}

// SetNonFungibleTokens sets field value
func (o *AddressBalanceResponse) SetNonFungibleTokens(v map[string]AddressBalanceResponseNonFungibleTokensValue) {
	o.NonFungibleTokens = v
}

// GetTokenOfferingLocked returns the TokenOfferingLocked field value if set, zero value otherwise.
func (o *AddressBalanceResponse) GetTokenOfferingLocked() AddressTokenOfferingLocked {
	if o == nil || o.TokenOfferingLocked == nil {
		var ret AddressTokenOfferingLocked
		return ret
	}
	return *o.TokenOfferingLocked
}

// GetTokenOfferingLockedOk returns a tuple with the TokenOfferingLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressBalanceResponse) GetTokenOfferingLockedOk() (*AddressTokenOfferingLocked, bool) {
	if o == nil || o.TokenOfferingLocked == nil {
		return nil, false
	}
	return o.TokenOfferingLocked, true
}

// HasTokenOfferingLocked returns a boolean if a field has been set.
func (o *AddressBalanceResponse) HasTokenOfferingLocked() bool {
	if o != nil && o.TokenOfferingLocked != nil {
		return true
	}

	return false
}

// SetTokenOfferingLocked gets a reference to the given AddressTokenOfferingLocked and assigns it to the TokenOfferingLocked field.
func (o *AddressBalanceResponse) SetTokenOfferingLocked(v AddressTokenOfferingLocked) {
	o.TokenOfferingLocked = &v
}

func (o AddressBalanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["stx"] = o.Stx
	}
	if true {
		toSerialize["fungible_tokens"] = o.FungibleTokens
	}
	if true {
		toSerialize["non_fungible_tokens"] = o.NonFungibleTokens
	}
	if o.TokenOfferingLocked != nil {
		toSerialize["token_offering_locked"] = o.TokenOfferingLocked
	}
	return json.Marshal(toSerialize)
}

type NullableAddressBalanceResponse struct {
	value *AddressBalanceResponse
	isSet bool
}

func (v NullableAddressBalanceResponse) Get() *AddressBalanceResponse {
	return v.value
}

func (v *NullableAddressBalanceResponse) Set(val *AddressBalanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressBalanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressBalanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressBalanceResponse(val *AddressBalanceResponse) *NullableAddressBalanceResponse {
	return &NullableAddressBalanceResponse{value: val, isSet: true}
}

func (v NullableAddressBalanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressBalanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


