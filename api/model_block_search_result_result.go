/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BlockSearchResultResult This object carries the search result
type BlockSearchResultResult struct {
	// The id used to search this query.
	EntityId string `json:"entity_id"`
	EntityType string `json:"entity_type"`
	BlockData BlockSearchResultResultBlockData `json:"block_data"`
	Metadata *Block `json:"metadata,omitempty"`
}

// NewBlockSearchResultResult instantiates a new BlockSearchResultResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockSearchResultResult(entityId string, entityType string, blockData BlockSearchResultResultBlockData) *BlockSearchResultResult {
	this := BlockSearchResultResult{}
	this.EntityId = entityId
	this.EntityType = entityType
	this.BlockData = blockData
	return &this
}

// NewBlockSearchResultResultWithDefaults instantiates a new BlockSearchResultResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockSearchResultResultWithDefaults() *BlockSearchResultResult {
	this := BlockSearchResultResult{}
	return &this
}

// GetEntityId returns the EntityId field value
func (o *BlockSearchResultResult) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *BlockSearchResultResult) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *BlockSearchResultResult) SetEntityId(v string) {
	o.EntityId = v
}

// GetEntityType returns the EntityType field value
func (o *BlockSearchResultResult) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *BlockSearchResultResult) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *BlockSearchResultResult) SetEntityType(v string) {
	o.EntityType = v
}

// GetBlockData returns the BlockData field value
func (o *BlockSearchResultResult) GetBlockData() BlockSearchResultResultBlockData {
	if o == nil {
		var ret BlockSearchResultResultBlockData
		return ret
	}

	return o.BlockData
}

// GetBlockDataOk returns a tuple with the BlockData field value
// and a boolean to check if the value has been set.
func (o *BlockSearchResultResult) GetBlockDataOk() (*BlockSearchResultResultBlockData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockData, true
}

// SetBlockData sets field value
func (o *BlockSearchResultResult) SetBlockData(v BlockSearchResultResultBlockData) {
	o.BlockData = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BlockSearchResultResult) GetMetadata() Block {
	if o == nil || o.Metadata == nil {
		var ret Block
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockSearchResultResult) GetMetadataOk() (*Block, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BlockSearchResultResult) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given Block and assigns it to the Metadata field.
func (o *BlockSearchResultResult) SetMetadata(v Block) {
	o.Metadata = &v
}

func (o BlockSearchResultResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entity_id"] = o.EntityId
	}
	if true {
		toSerialize["entity_type"] = o.EntityType
	}
	if true {
		toSerialize["block_data"] = o.BlockData
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableBlockSearchResultResult struct {
	value *BlockSearchResultResult
	isSet bool
}

func (v NullableBlockSearchResultResult) Get() *BlockSearchResultResult {
	return v.value
}

func (v *NullableBlockSearchResultResult) Set(val *BlockSearchResultResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockSearchResultResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockSearchResultResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockSearchResultResult(val *BlockSearchResultResult) *NullableBlockSearchResultResult {
	return &NullableBlockSearchResultResult{value: val, isSet: true}
}

func (v NullableBlockSearchResultResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockSearchResultResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


