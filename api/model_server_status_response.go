/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerStatusResponse GET blockchain API status
type ServerStatusResponse struct {
	// the server version that is currently running
	ServerVersion *string `json:"server_version,omitempty"`
	// the current server status
	Status string `json:"status"`
	ChainTip *ChainTip `json:"chain_tip,omitempty"`
}

// NewServerStatusResponse instantiates a new ServerStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerStatusResponse(status string) *ServerStatusResponse {
	this := ServerStatusResponse{}
	this.Status = status
	return &this
}

// NewServerStatusResponseWithDefaults instantiates a new ServerStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerStatusResponseWithDefaults() *ServerStatusResponse {
	this := ServerStatusResponse{}
	return &this
}

// GetServerVersion returns the ServerVersion field value if set, zero value otherwise.
func (o *ServerStatusResponse) GetServerVersion() string {
	if o == nil || o.ServerVersion == nil {
		var ret string
		return ret
	}
	return *o.ServerVersion
}

// GetServerVersionOk returns a tuple with the ServerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatusResponse) GetServerVersionOk() (*string, bool) {
	if o == nil || o.ServerVersion == nil {
		return nil, false
	}
	return o.ServerVersion, true
}

// HasServerVersion returns a boolean if a field has been set.
func (o *ServerStatusResponse) HasServerVersion() bool {
	if o != nil && o.ServerVersion != nil {
		return true
	}

	return false
}

// SetServerVersion gets a reference to the given string and assigns it to the ServerVersion field.
func (o *ServerStatusResponse) SetServerVersion(v string) {
	o.ServerVersion = &v
}

// GetStatus returns the Status field value
func (o *ServerStatusResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ServerStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ServerStatusResponse) SetStatus(v string) {
	o.Status = v
}

// GetChainTip returns the ChainTip field value if set, zero value otherwise.
func (o *ServerStatusResponse) GetChainTip() ChainTip {
	if o == nil || o.ChainTip == nil {
		var ret ChainTip
		return ret
	}
	return *o.ChainTip
}

// GetChainTipOk returns a tuple with the ChainTip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatusResponse) GetChainTipOk() (*ChainTip, bool) {
	if o == nil || o.ChainTip == nil {
		return nil, false
	}
	return o.ChainTip, true
}

// HasChainTip returns a boolean if a field has been set.
func (o *ServerStatusResponse) HasChainTip() bool {
	if o != nil && o.ChainTip != nil {
		return true
	}

	return false
}

// SetChainTip gets a reference to the given ChainTip and assigns it to the ChainTip field.
func (o *ServerStatusResponse) SetChainTip(v ChainTip) {
	o.ChainTip = &v
}

func (o ServerStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServerVersion != nil {
		toSerialize["server_version"] = o.ServerVersion
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.ChainTip != nil {
		toSerialize["chain_tip"] = o.ChainTip
	}
	return json.Marshal(toSerialize)
}

type NullableServerStatusResponse struct {
	value *ServerStatusResponse
	isSet bool
}

func (v NullableServerStatusResponse) Get() *ServerStatusResponse {
	return v.value
}

func (v *NullableServerStatusResponse) Set(val *ServerStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServerStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServerStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerStatusResponse(val *ServerStatusResponse) *NullableServerStatusResponse {
	return &NullableServerStatusResponse{value: val, isSet: true}
}

func (v NullableServerStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


