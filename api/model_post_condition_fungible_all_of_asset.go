/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostConditionFungibleAllOfAsset struct for PostConditionFungibleAllOfAsset
type PostConditionFungibleAllOfAsset struct {
	AssetName string `json:"asset_name"`
	ContractAddress string `json:"contract_address"`
	ContractName string `json:"contract_name"`
}

// NewPostConditionFungibleAllOfAsset instantiates a new PostConditionFungibleAllOfAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConditionFungibleAllOfAsset(assetName string, contractAddress string, contractName string) *PostConditionFungibleAllOfAsset {
	this := PostConditionFungibleAllOfAsset{}
	this.AssetName = assetName
	this.ContractAddress = contractAddress
	this.ContractName = contractName
	return &this
}

// NewPostConditionFungibleAllOfAssetWithDefaults instantiates a new PostConditionFungibleAllOfAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConditionFungibleAllOfAssetWithDefaults() *PostConditionFungibleAllOfAsset {
	this := PostConditionFungibleAllOfAsset{}
	return &this
}

// GetAssetName returns the AssetName field value
func (o *PostConditionFungibleAllOfAsset) GetAssetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetName
}

// GetAssetNameOk returns a tuple with the AssetName field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOfAsset) GetAssetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetName, true
}

// SetAssetName sets field value
func (o *PostConditionFungibleAllOfAsset) SetAssetName(v string) {
	o.AssetName = v
}

// GetContractAddress returns the ContractAddress field value
func (o *PostConditionFungibleAllOfAsset) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOfAsset) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *PostConditionFungibleAllOfAsset) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetContractName returns the ContractName field value
func (o *PostConditionFungibleAllOfAsset) GetContractName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value
// and a boolean to check if the value has been set.
func (o *PostConditionFungibleAllOfAsset) GetContractNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractName, true
}

// SetContractName sets field value
func (o *PostConditionFungibleAllOfAsset) SetContractName(v string) {
	o.ContractName = v
}

func (o PostConditionFungibleAllOfAsset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset_name"] = o.AssetName
	}
	if true {
		toSerialize["contract_address"] = o.ContractAddress
	}
	if true {
		toSerialize["contract_name"] = o.ContractName
	}
	return json.Marshal(toSerialize)
}

type NullablePostConditionFungibleAllOfAsset struct {
	value *PostConditionFungibleAllOfAsset
	isSet bool
}

func (v NullablePostConditionFungibleAllOfAsset) Get() *PostConditionFungibleAllOfAsset {
	return v.value
}

func (v *NullablePostConditionFungibleAllOfAsset) Set(val *PostConditionFungibleAllOfAsset) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConditionFungibleAllOfAsset) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConditionFungibleAllOfAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConditionFungibleAllOfAsset(val *PostConditionFungibleAllOfAsset) *NullablePostConditionFungibleAllOfAsset {
	return &NullablePostConditionFungibleAllOfAsset{value: val, isSet: true}
}

func (v NullablePostConditionFungibleAllOfAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConditionFungibleAllOfAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


