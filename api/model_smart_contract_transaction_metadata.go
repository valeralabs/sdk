/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmartContractTransactionMetadata Metadata associated with a contract-deploy type transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract
type SmartContractTransactionMetadata struct {
	TxType string `json:"tx_type"`
	SmartContract SmartContractTransactionMetadataSmartContract `json:"smart_contract"`
}

// NewSmartContractTransactionMetadata instantiates a new SmartContractTransactionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartContractTransactionMetadata(txType string, smartContract SmartContractTransactionMetadataSmartContract) *SmartContractTransactionMetadata {
	this := SmartContractTransactionMetadata{}
	this.TxType = txType
	this.SmartContract = smartContract
	return &this
}

// NewSmartContractTransactionMetadataWithDefaults instantiates a new SmartContractTransactionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartContractTransactionMetadataWithDefaults() *SmartContractTransactionMetadata {
	this := SmartContractTransactionMetadata{}
	return &this
}

// GetTxType returns the TxType field value
func (o *SmartContractTransactionMetadata) GetTxType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxType
}

// GetTxTypeOk returns a tuple with the TxType field value
// and a boolean to check if the value has been set.
func (o *SmartContractTransactionMetadata) GetTxTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxType, true
}

// SetTxType sets field value
func (o *SmartContractTransactionMetadata) SetTxType(v string) {
	o.TxType = v
}

// GetSmartContract returns the SmartContract field value
func (o *SmartContractTransactionMetadata) GetSmartContract() SmartContractTransactionMetadataSmartContract {
	if o == nil {
		var ret SmartContractTransactionMetadataSmartContract
		return ret
	}

	return o.SmartContract
}

// GetSmartContractOk returns a tuple with the SmartContract field value
// and a boolean to check if the value has been set.
func (o *SmartContractTransactionMetadata) GetSmartContractOk() (*SmartContractTransactionMetadataSmartContract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmartContract, true
}

// SetSmartContract sets field value
func (o *SmartContractTransactionMetadata) SetSmartContract(v SmartContractTransactionMetadataSmartContract) {
	o.SmartContract = v
}

func (o SmartContractTransactionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tx_type"] = o.TxType
	}
	if true {
		toSerialize["smart_contract"] = o.SmartContract
	}
	return json.Marshal(toSerialize)
}

type NullableSmartContractTransactionMetadata struct {
	value *SmartContractTransactionMetadata
	isSet bool
}

func (v NullableSmartContractTransactionMetadata) Get() *SmartContractTransactionMetadata {
	return v.value
}

func (v *NullableSmartContractTransactionMetadata) Set(val *SmartContractTransactionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartContractTransactionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartContractTransactionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartContractTransactionMetadata(val *SmartContractTransactionMetadata) *NullableSmartContractTransactionMetadata {
	return &NullableSmartContractTransactionMetadata{value: val, isSet: true}
}

func (v NullableSmartContractTransactionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartContractTransactionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


