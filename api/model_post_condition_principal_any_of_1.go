/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostConditionPrincipalAnyOf1 Principal Standard
type PostConditionPrincipalAnyOf1 struct {
	// String literal of type `PostConditionPrincipalType`
	TypeId string `json:"type_id"`
	Address string `json:"address"`
}

// NewPostConditionPrincipalAnyOf1 instantiates a new PostConditionPrincipalAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConditionPrincipalAnyOf1(typeId string, address string) *PostConditionPrincipalAnyOf1 {
	this := PostConditionPrincipalAnyOf1{}
	this.TypeId = typeId
	this.Address = address
	return &this
}

// NewPostConditionPrincipalAnyOf1WithDefaults instantiates a new PostConditionPrincipalAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConditionPrincipalAnyOf1WithDefaults() *PostConditionPrincipalAnyOf1 {
	this := PostConditionPrincipalAnyOf1{}
	return &this
}

// GetTypeId returns the TypeId field value
func (o *PostConditionPrincipalAnyOf1) GetTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *PostConditionPrincipalAnyOf1) GetTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *PostConditionPrincipalAnyOf1) SetTypeId(v string) {
	o.TypeId = v
}

// GetAddress returns the Address field value
func (o *PostConditionPrincipalAnyOf1) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PostConditionPrincipalAnyOf1) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PostConditionPrincipalAnyOf1) SetAddress(v string) {
	o.Address = v
}

func (o PostConditionPrincipalAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type_id"] = o.TypeId
	}
	if true {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullablePostConditionPrincipalAnyOf1 struct {
	value *PostConditionPrincipalAnyOf1
	isSet bool
}

func (v NullablePostConditionPrincipalAnyOf1) Get() *PostConditionPrincipalAnyOf1 {
	return v.value
}

func (v *NullablePostConditionPrincipalAnyOf1) Set(val *PostConditionPrincipalAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConditionPrincipalAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConditionPrincipalAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConditionPrincipalAnyOf1(val *PostConditionPrincipalAnyOf1) *NullablePostConditionPrincipalAnyOf1 {
	return &NullablePostConditionPrincipalAnyOf1{value: val, isSet: true}
}

func (v NullablePostConditionPrincipalAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConditionPrincipalAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


