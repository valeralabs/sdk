/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddressTransactionWithTransfers Transaction with STX transfers for a given address
type AddressTransactionWithTransfers struct {
	Tx Transaction `json:"tx"`
	// Total sent from the given address, including the tx fee, in micro-STX as an integer string.
	STXSent string `json:"STX_sent"`
	// Total received by the given address in micro-STX as an integer string.
	STXReceived string `json:"STX_received"`
	STXTransfers []AddressTransactionWithTransfersSTXTransfersInner `json:"STX_transfers"`
	FtTransfers []AddressTransactionWithTransfersFtTransfersInner `json:"ft_transfers,omitempty"`
	NFTTransfers []AddressTransactionWithTransfersNFTTransfersInner `json:"NFT_transfers,omitempty"`
}

// NewAddressTransactionWithTransfers instantiates a new AddressTransactionWithTransfers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressTransactionWithTransfers(tx Transaction, sTXSent string, sTXReceived string, sTXTransfers []AddressTransactionWithTransfersSTXTransfersInner) *AddressTransactionWithTransfers {
	this := AddressTransactionWithTransfers{}
	this.Tx = tx
	this.STXSent = sTXSent
	this.STXReceived = sTXReceived
	this.STXTransfers = sTXTransfers
	return &this
}

// NewAddressTransactionWithTransfersWithDefaults instantiates a new AddressTransactionWithTransfers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressTransactionWithTransfersWithDefaults() *AddressTransactionWithTransfers {
	this := AddressTransactionWithTransfers{}
	return &this
}

// GetTx returns the Tx field value
func (o *AddressTransactionWithTransfers) GetTx() Transaction {
	if o == nil {
		var ret Transaction
		return ret
	}

	return o.Tx
}

// GetTxOk returns a tuple with the Tx field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionWithTransfers) GetTxOk() (*Transaction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tx, true
}

// SetTx sets field value
func (o *AddressTransactionWithTransfers) SetTx(v Transaction) {
	o.Tx = v
}

// GetSTXSent returns the STXSent field value
func (o *AddressTransactionWithTransfers) GetSTXSent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.STXSent
}

// GetSTXSentOk returns a tuple with the STXSent field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionWithTransfers) GetSTXSentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.STXSent, true
}

// SetSTXSent sets field value
func (o *AddressTransactionWithTransfers) SetSTXSent(v string) {
	o.STXSent = v
}

// GetSTXReceived returns the STXReceived field value
func (o *AddressTransactionWithTransfers) GetSTXReceived() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.STXReceived
}

// GetSTXReceivedOk returns a tuple with the STXReceived field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionWithTransfers) GetSTXReceivedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.STXReceived, true
}

// SetSTXReceived sets field value
func (o *AddressTransactionWithTransfers) SetSTXReceived(v string) {
	o.STXReceived = v
}

// GetSTXTransfers returns the STXTransfers field value
func (o *AddressTransactionWithTransfers) GetSTXTransfers() []AddressTransactionWithTransfersSTXTransfersInner {
	if o == nil {
		var ret []AddressTransactionWithTransfersSTXTransfersInner
		return ret
	}

	return o.STXTransfers
}

// GetSTXTransfersOk returns a tuple with the STXTransfers field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionWithTransfers) GetSTXTransfersOk() ([]AddressTransactionWithTransfersSTXTransfersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.STXTransfers, true
}

// SetSTXTransfers sets field value
func (o *AddressTransactionWithTransfers) SetSTXTransfers(v []AddressTransactionWithTransfersSTXTransfersInner) {
	o.STXTransfers = v
}

// GetFtTransfers returns the FtTransfers field value if set, zero value otherwise.
func (o *AddressTransactionWithTransfers) GetFtTransfers() []AddressTransactionWithTransfersFtTransfersInner {
	if o == nil || o.FtTransfers == nil {
		var ret []AddressTransactionWithTransfersFtTransfersInner
		return ret
	}
	return o.FtTransfers
}

// GetFtTransfersOk returns a tuple with the FtTransfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressTransactionWithTransfers) GetFtTransfersOk() ([]AddressTransactionWithTransfersFtTransfersInner, bool) {
	if o == nil || o.FtTransfers == nil {
		return nil, false
	}
	return o.FtTransfers, true
}

// HasFtTransfers returns a boolean if a field has been set.
func (o *AddressTransactionWithTransfers) HasFtTransfers() bool {
	if o != nil && o.FtTransfers != nil {
		return true
	}

	return false
}

// SetFtTransfers gets a reference to the given []AddressTransactionWithTransfersFtTransfersInner and assigns it to the FtTransfers field.
func (o *AddressTransactionWithTransfers) SetFtTransfers(v []AddressTransactionWithTransfersFtTransfersInner) {
	o.FtTransfers = v
}

// GetNFTTransfers returns the NFTTransfers field value if set, zero value otherwise.
func (o *AddressTransactionWithTransfers) GetNFTTransfers() []AddressTransactionWithTransfersNFTTransfersInner {
	if o == nil || o.NFTTransfers == nil {
		var ret []AddressTransactionWithTransfersNFTTransfersInner
		return ret
	}
	return o.NFTTransfers
}

// GetNFTTransfersOk returns a tuple with the NFTTransfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressTransactionWithTransfers) GetNFTTransfersOk() ([]AddressTransactionWithTransfersNFTTransfersInner, bool) {
	if o == nil || o.NFTTransfers == nil {
		return nil, false
	}
	return o.NFTTransfers, true
}

// HasNFTTransfers returns a boolean if a field has been set.
func (o *AddressTransactionWithTransfers) HasNFTTransfers() bool {
	if o != nil && o.NFTTransfers != nil {
		return true
	}

	return false
}

// SetNFTTransfers gets a reference to the given []AddressTransactionWithTransfersNFTTransfersInner and assigns it to the NFTTransfers field.
func (o *AddressTransactionWithTransfers) SetNFTTransfers(v []AddressTransactionWithTransfersNFTTransfersInner) {
	o.NFTTransfers = v
}

func (o AddressTransactionWithTransfers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tx"] = o.Tx
	}
	if true {
		toSerialize["STX_sent"] = o.STXSent
	}
	if true {
		toSerialize["STX_received"] = o.STXReceived
	}
	if true {
		toSerialize["STX_transfers"] = o.STXTransfers
	}
	if o.FtTransfers != nil {
		toSerialize["ft_transfers"] = o.FtTransfers
	}
	if o.NFTTransfers != nil {
		toSerialize["NFT_transfers"] = o.NFTTransfers
	}
	return json.Marshal(toSerialize)
}

type NullableAddressTransactionWithTransfers struct {
	value *AddressTransactionWithTransfers
	isSet bool
}

func (v NullableAddressTransactionWithTransfers) Get() *AddressTransactionWithTransfers {
	return v.value
}

func (v *NullableAddressTransactionWithTransfers) Set(val *AddressTransactionWithTransfers) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressTransactionWithTransfers) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressTransactionWithTransfers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressTransactionWithTransfers(val *AddressTransactionWithTransfers) *NullableAddressTransactionWithTransfers {
	return &NullableAddressTransactionWithTransfers{value: val, isSet: true}
}

func (v NullableAddressTransactionWithTransfers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressTransactionWithTransfers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


