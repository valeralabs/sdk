/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FungibleTokenMetadata struct for FungibleTokenMetadata
type FungibleTokenMetadata struct {
	// An optional string that is a valid URI which resolves to this token's metadata. Can be empty.
	TokenUri string `json:"token_uri"`
	// Identifies the asset to which this token represents
	Name string `json:"name"`
	// Describes the asset to which this token represents
	Description string `json:"description"`
	// A URI pointing to a resource with mime type image/_* representing the asset to which this token represents. The API may provide a URI to a cached resource, dependending on configuration. Otherwise, this can be the same value as the canonical image URI.
	ImageUri string `json:"image_uri"`
	// The original image URI specified by the contract. A URI pointing to a resource with mime type image/_* representing the asset to which this token represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.
	ImageCanonicalUri string `json:"image_canonical_uri"`
	// A shorter representation of a token. This is sometimes referred to as a \"ticker\". Examples: \"STX\", \"COOL\", etc. Typically, a token could be referred to as $SYMBOL when referencing it in writing.
	Symbol string `json:"symbol"`
	// The number of decimal places in a token.
	Decimals float32 `json:"decimals"`
	// Tx id that deployed the contract
	TxId string `json:"tx_id"`
	// principle that deployed the contract
	SenderAddress string `json:"sender_address"`
}

// NewFungibleTokenMetadata instantiates a new FungibleTokenMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFungibleTokenMetadata(tokenUri string, name string, description string, imageUri string, imageCanonicalUri string, symbol string, decimals float32, txId string, senderAddress string) *FungibleTokenMetadata {
	this := FungibleTokenMetadata{}
	this.TokenUri = tokenUri
	this.Name = name
	this.Description = description
	this.ImageUri = imageUri
	this.ImageCanonicalUri = imageCanonicalUri
	this.Symbol = symbol
	this.Decimals = decimals
	this.TxId = txId
	this.SenderAddress = senderAddress
	return &this
}

// NewFungibleTokenMetadataWithDefaults instantiates a new FungibleTokenMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFungibleTokenMetadataWithDefaults() *FungibleTokenMetadata {
	this := FungibleTokenMetadata{}
	return &this
}

// GetTokenUri returns the TokenUri field value
func (o *FungibleTokenMetadata) GetTokenUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenUri
}

// GetTokenUriOk returns a tuple with the TokenUri field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetTokenUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenUri, true
}

// SetTokenUri sets field value
func (o *FungibleTokenMetadata) SetTokenUri(v string) {
	o.TokenUri = v
}

// GetName returns the Name field value
func (o *FungibleTokenMetadata) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FungibleTokenMetadata) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *FungibleTokenMetadata) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *FungibleTokenMetadata) SetDescription(v string) {
	o.Description = v
}

// GetImageUri returns the ImageUri field value
func (o *FungibleTokenMetadata) GetImageUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUri
}

// GetImageUriOk returns a tuple with the ImageUri field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetImageUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageUri, true
}

// SetImageUri sets field value
func (o *FungibleTokenMetadata) SetImageUri(v string) {
	o.ImageUri = v
}

// GetImageCanonicalUri returns the ImageCanonicalUri field value
func (o *FungibleTokenMetadata) GetImageCanonicalUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageCanonicalUri
}

// GetImageCanonicalUriOk returns a tuple with the ImageCanonicalUri field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetImageCanonicalUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageCanonicalUri, true
}

// SetImageCanonicalUri sets field value
func (o *FungibleTokenMetadata) SetImageCanonicalUri(v string) {
	o.ImageCanonicalUri = v
}

// GetSymbol returns the Symbol field value
func (o *FungibleTokenMetadata) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *FungibleTokenMetadata) SetSymbol(v string) {
	o.Symbol = v
}

// GetDecimals returns the Decimals field value
func (o *FungibleTokenMetadata) GetDecimals() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetDecimalsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Decimals, true
}

// SetDecimals sets field value
func (o *FungibleTokenMetadata) SetDecimals(v float32) {
	o.Decimals = v
}

// GetTxId returns the TxId field value
func (o *FungibleTokenMetadata) GetTxId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxId
}

// GetTxIdOk returns a tuple with the TxId field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetTxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxId, true
}

// SetTxId sets field value
func (o *FungibleTokenMetadata) SetTxId(v string) {
	o.TxId = v
}

// GetSenderAddress returns the SenderAddress field value
func (o *FungibleTokenMetadata) GetSenderAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderAddress
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value
// and a boolean to check if the value has been set.
func (o *FungibleTokenMetadata) GetSenderAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderAddress, true
}

// SetSenderAddress sets field value
func (o *FungibleTokenMetadata) SetSenderAddress(v string) {
	o.SenderAddress = v
}

func (o FungibleTokenMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["token_uri"] = o.TokenUri
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["image_uri"] = o.ImageUri
	}
	if true {
		toSerialize["image_canonical_uri"] = o.ImageCanonicalUri
	}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["decimals"] = o.Decimals
	}
	if true {
		toSerialize["tx_id"] = o.TxId
	}
	if true {
		toSerialize["sender_address"] = o.SenderAddress
	}
	return json.Marshal(toSerialize)
}

type NullableFungibleTokenMetadata struct {
	value *FungibleTokenMetadata
	isSet bool
}

func (v NullableFungibleTokenMetadata) Get() *FungibleTokenMetadata {
	return v.value
}

func (v *NullableFungibleTokenMetadata) Set(val *FungibleTokenMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableFungibleTokenMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableFungibleTokenMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFungibleTokenMetadata(val *FungibleTokenMetadata) *NullableFungibleTokenMetadata {
	return &NullableFungibleTokenMetadata{value: val, isSet: true}
}

func (v NullableFungibleTokenMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFungibleTokenMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


