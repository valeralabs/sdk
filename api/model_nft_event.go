/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NftEvent struct for NftEvent
type NftEvent struct {
	Sender string `json:"sender"`
	Recipient string `json:"recipient"`
	AssetIdentifier string `json:"asset_identifier"`
	Value NftEventValue `json:"value"`
	TxId string `json:"tx_id"`
	BlockHeight float32 `json:"block_height"`
}

// NewNftEvent instantiates a new NftEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNftEvent(sender string, recipient string, assetIdentifier string, value NftEventValue, txId string, blockHeight float32) *NftEvent {
	this := NftEvent{}
	this.Sender = sender
	this.Recipient = recipient
	this.AssetIdentifier = assetIdentifier
	this.Value = value
	this.TxId = txId
	this.BlockHeight = blockHeight
	return &this
}

// NewNftEventWithDefaults instantiates a new NftEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNftEventWithDefaults() *NftEvent {
	this := NftEvent{}
	return &this
}

// GetSender returns the Sender field value
func (o *NftEvent) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *NftEvent) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *NftEvent) SetSender(v string) {
	o.Sender = v
}

// GetRecipient returns the Recipient field value
func (o *NftEvent) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *NftEvent) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *NftEvent) SetRecipient(v string) {
	o.Recipient = v
}

// GetAssetIdentifier returns the AssetIdentifier field value
func (o *NftEvent) GetAssetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetIdentifier
}

// GetAssetIdentifierOk returns a tuple with the AssetIdentifier field value
// and a boolean to check if the value has been set.
func (o *NftEvent) GetAssetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetIdentifier, true
}

// SetAssetIdentifier sets field value
func (o *NftEvent) SetAssetIdentifier(v string) {
	o.AssetIdentifier = v
}

// GetValue returns the Value field value
func (o *NftEvent) GetValue() NftEventValue {
	if o == nil {
		var ret NftEventValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *NftEvent) GetValueOk() (*NftEventValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *NftEvent) SetValue(v NftEventValue) {
	o.Value = v
}

// GetTxId returns the TxId field value
func (o *NftEvent) GetTxId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxId
}

// GetTxIdOk returns a tuple with the TxId field value
// and a boolean to check if the value has been set.
func (o *NftEvent) GetTxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxId, true
}

// SetTxId sets field value
func (o *NftEvent) SetTxId(v string) {
	o.TxId = v
}

// GetBlockHeight returns the BlockHeight field value
func (o *NftEvent) GetBlockHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BlockHeight
}

// GetBlockHeightOk returns a tuple with the BlockHeight field value
// and a boolean to check if the value has been set.
func (o *NftEvent) GetBlockHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockHeight, true
}

// SetBlockHeight sets field value
func (o *NftEvent) SetBlockHeight(v float32) {
	o.BlockHeight = v
}

func (o NftEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["asset_identifier"] = o.AssetIdentifier
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["tx_id"] = o.TxId
	}
	if true {
		toSerialize["block_height"] = o.BlockHeight
	}
	return json.Marshal(toSerialize)
}

type NullableNftEvent struct {
	value *NftEvent
	isSet bool
}

func (v NullableNftEvent) Get() *NftEvent {
	return v.value
}

func (v *NullableNftEvent) Set(val *NftEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableNftEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableNftEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNftEvent(val *NftEvent) *NullableNftEvent {
	return &NullableNftEvent{value: val, isSet: true}
}

func (v NullableNftEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNftEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


