/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostConditionPrincipalAnyOf Principal Origin
type PostConditionPrincipalAnyOf struct {
	// String literal of type `PostConditionPrincipalType`
	TypeId string `json:"type_id"`
}

// NewPostConditionPrincipalAnyOf instantiates a new PostConditionPrincipalAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConditionPrincipalAnyOf(typeId string) *PostConditionPrincipalAnyOf {
	this := PostConditionPrincipalAnyOf{}
	this.TypeId = typeId
	return &this
}

// NewPostConditionPrincipalAnyOfWithDefaults instantiates a new PostConditionPrincipalAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConditionPrincipalAnyOfWithDefaults() *PostConditionPrincipalAnyOf {
	this := PostConditionPrincipalAnyOf{}
	return &this
}

// GetTypeId returns the TypeId field value
func (o *PostConditionPrincipalAnyOf) GetTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *PostConditionPrincipalAnyOf) GetTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *PostConditionPrincipalAnyOf) SetTypeId(v string) {
	o.TypeId = v
}

func (o PostConditionPrincipalAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type_id"] = o.TypeId
	}
	return json.Marshal(toSerialize)
}

type NullablePostConditionPrincipalAnyOf struct {
	value *PostConditionPrincipalAnyOf
	isSet bool
}

func (v NullablePostConditionPrincipalAnyOf) Get() *PostConditionPrincipalAnyOf {
	return v.value
}

func (v *NullablePostConditionPrincipalAnyOf) Set(val *PostConditionPrincipalAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConditionPrincipalAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConditionPrincipalAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConditionPrincipalAnyOf(val *PostConditionPrincipalAnyOf) *NullablePostConditionPrincipalAnyOf {
	return &NullablePostConditionPrincipalAnyOf{value: val, isSet: true}
}

func (v NullablePostConditionPrincipalAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConditionPrincipalAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


