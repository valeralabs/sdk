/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PostConditionPrincipalAnyOf2 Principal Contract
type PostConditionPrincipalAnyOf2 struct {
	// String literal of type `PostConditionPrincipalType`
	TypeId string `json:"type_id"`
	Address string `json:"address"`
	ContractName string `json:"contract_name"`
}

// NewPostConditionPrincipalAnyOf2 instantiates a new PostConditionPrincipalAnyOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostConditionPrincipalAnyOf2(typeId string, address string, contractName string) *PostConditionPrincipalAnyOf2 {
	this := PostConditionPrincipalAnyOf2{}
	this.TypeId = typeId
	this.Address = address
	this.ContractName = contractName
	return &this
}

// NewPostConditionPrincipalAnyOf2WithDefaults instantiates a new PostConditionPrincipalAnyOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostConditionPrincipalAnyOf2WithDefaults() *PostConditionPrincipalAnyOf2 {
	this := PostConditionPrincipalAnyOf2{}
	return &this
}

// GetTypeId returns the TypeId field value
func (o *PostConditionPrincipalAnyOf2) GetTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *PostConditionPrincipalAnyOf2) GetTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *PostConditionPrincipalAnyOf2) SetTypeId(v string) {
	o.TypeId = v
}

// GetAddress returns the Address field value
func (o *PostConditionPrincipalAnyOf2) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PostConditionPrincipalAnyOf2) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PostConditionPrincipalAnyOf2) SetAddress(v string) {
	o.Address = v
}

// GetContractName returns the ContractName field value
func (o *PostConditionPrincipalAnyOf2) GetContractName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value
// and a boolean to check if the value has been set.
func (o *PostConditionPrincipalAnyOf2) GetContractNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractName, true
}

// SetContractName sets field value
func (o *PostConditionPrincipalAnyOf2) SetContractName(v string) {
	o.ContractName = v
}

func (o PostConditionPrincipalAnyOf2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type_id"] = o.TypeId
	}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["contract_name"] = o.ContractName
	}
	return json.Marshal(toSerialize)
}

type NullablePostConditionPrincipalAnyOf2 struct {
	value *PostConditionPrincipalAnyOf2
	isSet bool
}

func (v NullablePostConditionPrincipalAnyOf2) Get() *PostConditionPrincipalAnyOf2 {
	return v.value
}

func (v *NullablePostConditionPrincipalAnyOf2) Set(val *PostConditionPrincipalAnyOf2) {
	v.value = val
	v.isSet = true
}

func (v NullablePostConditionPrincipalAnyOf2) IsSet() bool {
	return v.isSet
}

func (v *NullablePostConditionPrincipalAnyOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostConditionPrincipalAnyOf2(val *PostConditionPrincipalAnyOf2) *NullablePostConditionPrincipalAnyOf2 {
	return &NullablePostConditionPrincipalAnyOf2{value: val, isSet: true}
}

func (v NullablePostConditionPrincipalAnyOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostConditionPrincipalAnyOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


