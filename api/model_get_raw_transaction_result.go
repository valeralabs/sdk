/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetRawTransactionResult GET raw transaction
type GetRawTransactionResult struct {
	// A hex encoded serialized transaction
	RawTx string `json:"raw_tx"`
}

// NewGetRawTransactionResult instantiates a new GetRawTransactionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRawTransactionResult(rawTx string) *GetRawTransactionResult {
	this := GetRawTransactionResult{}
	this.RawTx = rawTx
	return &this
}

// NewGetRawTransactionResultWithDefaults instantiates a new GetRawTransactionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRawTransactionResultWithDefaults() *GetRawTransactionResult {
	this := GetRawTransactionResult{}
	return &this
}

// GetRawTx returns the RawTx field value
func (o *GetRawTransactionResult) GetRawTx() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawTx
}

// GetRawTxOk returns a tuple with the RawTx field value
// and a boolean to check if the value has been set.
func (o *GetRawTransactionResult) GetRawTxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawTx, true
}

// SetRawTx sets field value
func (o *GetRawTransactionResult) SetRawTx(v string) {
	o.RawTx = v
}

func (o GetRawTransactionResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["raw_tx"] = o.RawTx
	}
	return json.Marshal(toSerialize)
}

type NullableGetRawTransactionResult struct {
	value *GetRawTransactionResult
	isSet bool
}

func (v NullableGetRawTransactionResult) Get() *GetRawTransactionResult {
	return v.value
}

func (v *NullableGetRawTransactionResult) Set(val *GetRawTransactionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRawTransactionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRawTransactionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRawTransactionResult(val *GetRawTransactionResult) *NullableGetRawTransactionResult {
	return &NullableGetRawTransactionResult{value: val, isSet: true}
}

func (v NullableGetRawTransactionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRawTransactionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


