/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddressTransactionsWithTransfersListResponse GET request that returns account transactions
type AddressTransactionsWithTransfersListResponse struct {
	Limit int32 `json:"limit"`
	Offset int32 `json:"offset"`
	Total int32 `json:"total"`
	Results []AddressTransactionWithTransfers `json:"results"`
}

// NewAddressTransactionsWithTransfersListResponse instantiates a new AddressTransactionsWithTransfersListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressTransactionsWithTransfersListResponse(limit int32, offset int32, total int32, results []AddressTransactionWithTransfers) *AddressTransactionsWithTransfersListResponse {
	this := AddressTransactionsWithTransfersListResponse{}
	this.Limit = limit
	this.Offset = offset
	this.Total = total
	this.Results = results
	return &this
}

// NewAddressTransactionsWithTransfersListResponseWithDefaults instantiates a new AddressTransactionsWithTransfersListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressTransactionsWithTransfersListResponseWithDefaults() *AddressTransactionsWithTransfersListResponse {
	this := AddressTransactionsWithTransfersListResponse{}
	return &this
}

// GetLimit returns the Limit field value
func (o *AddressTransactionsWithTransfersListResponse) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionsWithTransfersListResponse) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *AddressTransactionsWithTransfersListResponse) SetLimit(v int32) {
	o.Limit = v
}

// GetOffset returns the Offset field value
func (o *AddressTransactionsWithTransfersListResponse) GetOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionsWithTransfersListResponse) GetOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *AddressTransactionsWithTransfersListResponse) SetOffset(v int32) {
	o.Offset = v
}

// GetTotal returns the Total field value
func (o *AddressTransactionsWithTransfersListResponse) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionsWithTransfersListResponse) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *AddressTransactionsWithTransfersListResponse) SetTotal(v int32) {
	o.Total = v
}

// GetResults returns the Results field value
func (o *AddressTransactionsWithTransfersListResponse) GetResults() []AddressTransactionWithTransfers {
	if o == nil {
		var ret []AddressTransactionWithTransfers
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *AddressTransactionsWithTransfersListResponse) GetResultsOk() ([]AddressTransactionWithTransfers, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *AddressTransactionsWithTransfersListResponse) SetResults(v []AddressTransactionWithTransfers) {
	o.Results = v
}

func (o AddressTransactionsWithTransfersListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["limit"] = o.Limit
	}
	if true {
		toSerialize["offset"] = o.Offset
	}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableAddressTransactionsWithTransfersListResponse struct {
	value *AddressTransactionsWithTransfersListResponse
	isSet bool
}

func (v NullableAddressTransactionsWithTransfersListResponse) Get() *AddressTransactionsWithTransfersListResponse {
	return v.value
}

func (v *NullableAddressTransactionsWithTransfersListResponse) Set(val *AddressTransactionsWithTransfersListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressTransactionsWithTransfersListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressTransactionsWithTransfersListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressTransactionsWithTransfersListResponse(val *AddressTransactionsWithTransfersListResponse) *NullableAddressTransactionsWithTransfersListResponse {
	return &NullableAddressTransactionsWithTransfersListResponse{value: val, isSet: true}
}

func (v NullableAddressTransactionsWithTransfersListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressTransactionsWithTransfersListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


