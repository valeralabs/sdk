/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RunFaucetBTCRequest struct for RunFaucetBTCRequest
type RunFaucetBTCRequest struct {
	// BTC testnet address
	Address *string `json:"address,omitempty"`
}

// NewRunFaucetBTCRequest instantiates a new RunFaucetBTCRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunFaucetBTCRequest() *RunFaucetBTCRequest {
	this := RunFaucetBTCRequest{}
	return &this
}

// NewRunFaucetBTCRequestWithDefaults instantiates a new RunFaucetBTCRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunFaucetBTCRequestWithDefaults() *RunFaucetBTCRequest {
	this := RunFaucetBTCRequest{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *RunFaucetBTCRequest) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunFaucetBTCRequest) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *RunFaucetBTCRequest) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *RunFaucetBTCRequest) SetAddress(v string) {
	o.Address = &v
}

func (o RunFaucetBTCRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableRunFaucetBTCRequest struct {
	value *RunFaucetBTCRequest
	isSet bool
}

func (v NullableRunFaucetBTCRequest) Get() *RunFaucetBTCRequest {
	return v.value
}

func (v *NullableRunFaucetBTCRequest) Set(val *RunFaucetBTCRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRunFaucetBTCRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRunFaucetBTCRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunFaucetBTCRequest(val *RunFaucetBTCRequest) *NullableRunFaucetBTCRequest {
	return &NullableRunFaucetBTCRequest{value: val, isSet: true}
}

func (v NullableRunFaucetBTCRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunFaucetBTCRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


