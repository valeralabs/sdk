/*
Stacks Blockchain API

Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 

API version: v4.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReadOnlyFunctionArgs Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset
type ReadOnlyFunctionArgs struct {
	// The simulated tx-sender
	Sender string `json:"sender"`
	// An array of hex serialized Clarity values
	Arguments []string `json:"arguments"`
}

// NewReadOnlyFunctionArgs instantiates a new ReadOnlyFunctionArgs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadOnlyFunctionArgs(sender string, arguments []string) *ReadOnlyFunctionArgs {
	this := ReadOnlyFunctionArgs{}
	this.Sender = sender
	this.Arguments = arguments
	return &this
}

// NewReadOnlyFunctionArgsWithDefaults instantiates a new ReadOnlyFunctionArgs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadOnlyFunctionArgsWithDefaults() *ReadOnlyFunctionArgs {
	this := ReadOnlyFunctionArgs{}
	return &this
}

// GetSender returns the Sender field value
func (o *ReadOnlyFunctionArgs) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *ReadOnlyFunctionArgs) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *ReadOnlyFunctionArgs) SetSender(v string) {
	o.Sender = v
}

// GetArguments returns the Arguments field value
func (o *ReadOnlyFunctionArgs) GetArguments() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value
// and a boolean to check if the value has been set.
func (o *ReadOnlyFunctionArgs) GetArgumentsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Arguments, true
}

// SetArguments sets field value
func (o *ReadOnlyFunctionArgs) SetArguments(v []string) {
	o.Arguments = v
}

func (o ReadOnlyFunctionArgs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if true {
		toSerialize["arguments"] = o.Arguments
	}
	return json.Marshal(toSerialize)
}

type NullableReadOnlyFunctionArgs struct {
	value *ReadOnlyFunctionArgs
	isSet bool
}

func (v NullableReadOnlyFunctionArgs) Get() *ReadOnlyFunctionArgs {
	return v.value
}

func (v *NullableReadOnlyFunctionArgs) Set(val *ReadOnlyFunctionArgs) {
	v.value = val
	v.isSet = true
}

func (v NullableReadOnlyFunctionArgs) IsSet() bool {
	return v.isSet
}

func (v *NullableReadOnlyFunctionArgs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadOnlyFunctionArgs(val *ReadOnlyFunctionArgs) *NullableReadOnlyFunctionArgs {
	return &NullableReadOnlyFunctionArgs{value: val, isSet: true}
}

func (v NullableReadOnlyFunctionArgs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadOnlyFunctionArgs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


